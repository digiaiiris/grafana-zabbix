{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"lodash\"","webpack:///./datasource-zabbix/utils.ts","webpack:///./datasource-zabbix/constants.ts","webpack:///external \"@grafana/ui\"","webpack:///external \"@grafana/data\"","webpack:///./datasource-zabbix/types.ts","webpack:///external \"@emotion/css\"","webpack:///external \"@grafana/runtime\"","webpack:///external \"moment\"","webpack:///../node_modules/semver/classes/semver.js","webpack:///./panel-triggers/utils.ts","webpack:///external \"app/core/utils/datemath\"","webpack:///external \"jquery\"","webpack:///../node_modules/semver/functions/compare.js","webpack:///../node_modules/semver/classes/range.js","webpack:///external \"app/plugins/sdk\"","webpack:///./panel-triggers/migrations.ts","webpack:///../node_modules/semver/index.js","webpack:///../node_modules/semver/internal/re.js","webpack:///../node_modules/semver/functions/parse.js","webpack:///../node_modules/semver/internal/constants.js","webpack:///../node_modules/semver/internal/debug.js","webpack:///../node_modules/semver/functions/gt.js","webpack:///../node_modules/semver/classes/comparator.js","webpack:///../node_modules/semver/functions/satisfies.js","webpack:///external \"app/core/core_module\"","webpack:///../node_modules/semver/internal/identifiers.js","webpack:///../node_modules/semver/functions/eq.js","webpack:///../node_modules/semver/functions/compare-build.js","webpack:///../node_modules/semver/functions/lt.js","webpack:///../node_modules/semver/functions/gte.js","webpack:///../node_modules/semver/functions/lte.js","webpack:///../node_modules/semver/ranges/outside.js","webpack:///external \"app/core/core\"","webpack:///external \"app/core/table_model\"","webpack:///external \"app/core/utils/kbn\"","webpack:///../node_modules/semver/functions/neq.js","webpack:///../node_modules/semver/functions/cmp.js","webpack:///external \"app/core/config\"","webpack:///external \"angular\"","webpack:///../node_modules/semver/functions/valid.js","webpack:///../node_modules/semver/functions/clean.js","webpack:///../node_modules/semver/functions/inc.js","webpack:///../node_modules/semver/functions/diff.js","webpack:///../node_modules/semver/functions/major.js","webpack:///../node_modules/semver/functions/minor.js","webpack:///../node_modules/semver/functions/patch.js","webpack:///../node_modules/semver/functions/prerelease.js","webpack:///../node_modules/semver/functions/rcompare.js","webpack:///../node_modules/semver/functions/compare-loose.js","webpack:///../node_modules/semver/functions/sort.js","webpack:///../node_modules/semver/functions/rsort.js","webpack:///../node_modules/semver/functions/coerce.js","webpack:///../node_modules/semver/ranges/to-comparators.js","webpack:///../node_modules/semver/ranges/max-satisfying.js","webpack:///../node_modules/semver/ranges/min-satisfying.js","webpack:///../node_modules/semver/ranges/min-version.js","webpack:///../node_modules/semver/ranges/valid.js","webpack:///../node_modules/semver/ranges/gtr.js","webpack:///../node_modules/semver/ranges/ltr.js","webpack:///../node_modules/semver/ranges/intersects.js","webpack:///../node_modules/semver/ranges/simplify.js","webpack:///../node_modules/semver/ranges/subset.js","webpack:///./datasource-zabbix/migrations.ts","webpack:///./datasource-zabbix/metricFunctions.ts","webpack:///./datasource-zabbix/dataProcessor.ts","webpack:///./datasource-zabbix/responseHandler.ts","webpack:///./datasource-zabbix/problemsHandler.ts","webpack:///./datasource-zabbix/zabbix/proxy/cachingProxy.ts","webpack:///./datasource-zabbix/zabbix/connectors/dbConnector.ts","webpack:///./datasource-zabbix/zabbix/connectors/zabbix_api/zabbixAPIConnector.ts","webpack:///./datasource-zabbix/zabbix/connectors/sql/mysql.ts","webpack:///./datasource-zabbix/zabbix/connectors/sql/postgres.ts","webpack:///./datasource-zabbix/zabbix/connectors/sql/sqlConnector.ts","webpack:///./datasource-zabbix/zabbix/connectors/influxdb/influxdbConnector.ts","webpack:///./datasource-zabbix/zabbix/zabbix.ts","webpack:///./datasource-zabbix/datasource.ts","webpack:///./datasource-zabbix/query.controller.ts","webpack:///./datasource-zabbix/components/ZabbixInput.tsx","webpack:///./datasource-zabbix/components/VariableQueryEditor.tsx","webpack:///./datasource-zabbix/components/ConfigEditor.tsx","webpack:///./datasource-zabbix/add-metric-function.directive.js","webpack:///./datasource-zabbix/components/FunctionEditorControls.tsx","webpack:///./datasource-zabbix/components/FunctionEditor.tsx","webpack:///./datasource-zabbix/metric-function-editor.directive.ts","webpack:///./datasource-zabbix/react2angular.ts","webpack:///./datasource-zabbix/module.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","variableRegex","expandItemName","paramStr","params","quoted","in_array","param","key_params_str","substring","indexOf","lastIndexOf","key_params","forEach","symbol","push","length","replace","expandItems","items","item","key_","MACRO_PATTERN","containsMacro","itemName","test","replaceMacro","macros","isTriggerItem","parentHosts","url","item_macros","match","macro","host_macros","filter","hostid","hosts","h","isTemplateMacro","find","pHost","parentTemplates","findIndex","tmpl","templateid","hostHasMacro","aMacro","macro_def","macro_value","macro_regex","RegExp","escapeMacro","parseLegacyVariableQuery","query","queryType","parts","each","split","isContainsBraces","result","map","part","trim","splitTemplateQuery","template","zipObject","app","Group","Host","Application","Item","group","host","application","regexPattern","isRegex","str","isTemplateVariable","templateVariables","variables","variable","includes","getRangeScopedVars","range","msRange","to","diff","from","sRange","Math","round","regularRange","secondsToHms","__range_ms","text","__range_s","__range","__range_series","buildRegex","matches","pattern","flags","undefined","escapeRegex","parseItemInterval","interval","normalizedInterval","parsedInterval","exec","normalizeZabbixInterval","parseInterval","momentInterval","duration","Number","valueOf","parseTimeShiftInterval","formatAcknowledges","acknowledges","ack","unix","clock","format","alias","surname","message","concat","sequence","funcsArray","this","compactQuery","isNumeric","isNaN","parseFloat","isFinite","parseTags","tagStr","tags","tag","tagParts","itemTagToString","mustArray","unitsMap","knownGrafanaUnits","units","submenu","unit","getKnownGrafanaUnits","convertZabbixUnit","zabbixUnit","getValueMapping","valueMappings","valuemapid","mapping","mappings","type","ValueToText","options","newvalue","isProblemsDataFrame","data","fields","other","config","custom","ZABBIX_PROBLEMS_PANEL_ID","DATAPOINT_VALUE","DATAPOINT_TS","MODE_METRICS","MODE_ITSERVICE","MODE_TEXT","MODE_ITEMID","MODE_TRIGGERS","MODE_PROBLEMS","ZBX_ACK_ACTION_NONE","ZBX_ACK_ACTION_CLOSE","ZBX_ACK_ACTION_ACK","ZBX_ACK_ACTION_ADD_MESSAGE","ZBX_ACK_ACTION_CHANGE_SEVERITY","TRIGGER_SEVERITY","val","MIN_SLA_INTERVAL","RANGE_VARIABLE_VALUE","DEFAULT_ZABBIX_PROBLEMS_LIMIT","__WEBPACK_EXTERNAL_MODULE__5__","__WEBPACK_EXTERNAL_MODULE__6__","VariableQueryTypes","ShowProblemTypes","__WEBPACK_EXTERNAL_MODULE__8__","__WEBPACK_EXTERNAL_MODULE__9__","__WEBPACK_EXTERNAL_MODULE__11__","debug","MAX_LENGTH","MAX_SAFE_INTEGER","re","compareIdentifiers","SemVer","version","loose","includePrerelease","TypeError","LOOSE","FULL","raw","major","minor","patch","prerelease","id","num","build","join","compareMain","comparePre","a","b","release","identifier","inc","Error","isNewProblem","problem","highlightNewerThan","highlightIntervalMs","Date","now","timestamp","e","formatLastChange","lastchangeUnix","customFormat","getNextRefIdChar","queries","refId","every","__WEBPACK_EXTERNAL_MODULE__14__","__WEBPACK_EXTERNAL_MODULE__15__","compare","Range","Comparator","set","parseRange","comps","hr","HYPHENRANGELOOSE","HYPHENRANGE","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","compRe","COMPARATORLOOSE","COMPARATOR","comp","parseComparator","replaceGTE0","some","thisComparators","isSatisfiable","rangeComparators","thisComparator","rangeComparator","intersects","er","testSet","comparators","remainingComparators","slice","testComparator","pop","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","toLowerCase","replaceTilde","TILDELOOSE","TILDE","_","M","pr","ret","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","fM","fm","fp","fpr","fb","tM","tm","tp","tpr","tb","semver","ANY","allowed","__WEBPACK_EXTERNAL_MODULE__18__","CURRENT_SCHEMA_VERSION","migratePanelSchema","panel","targets","target","trigger","isDefaultTarget","isDefaultPanel","datasource","datasources","triggers","isArray","isEmpty","isEmptyPanel","schemaVersion","getSchemaVersion","lastChangeField","infoField","scroll","hideHostsInMaintenance","defaultsDeep","proxy","showEvents","updatedTargets","targetKey","isEmptyTarget","isInvalidTarget","showProblems","migrateShowEvents","migrateOptions","defaults","hostsInMaintenance","sortProblems","sortTriggersBy","showTriggers","acknowledged","limit","minSeverity","Problems","History","internalRe","src","tokens","SEMVER_SPEC_VERSION","rcompareIdentifiers","parse","valid","clean","rcompare","compareLoose","compareBuild","sort","rsort","gt","lt","eq","neq","gte","lte","cmp","coerce","satisfies","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","simplifyRange","subset","MAX_SAFE_COMPONENT_LENGTH","R","createToken","isGlobal","index","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","COERCE","LONETILDE","LONECARET","process","env","NODE_DEBUG","args","console","error","operator","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","__WEBPACK_EXTERNAL_MODULE__30__","numeric","anum","bnum","versionA","versionB","hilo","gtfn","ltefn","ltfn","ecomp","high","low","comparator","__WEBPACK_EXTERNAL_MODULE__38__","__WEBPACK_EXTERNAL_MODULE__39__","__WEBPACK_EXTERNAL_MODULE__40__","op","__WEBPACK_EXTERNAL_MODULE__43__","__WEBPACK_EXTERNAL_MODULE__44__","v","version1","version2","v1","v2","hasPre","prefix","defaultResult","parsed","list","String","rtl","next","COERCERTL","lastIndex","versions","max","maxSV","rangeObj","min","minSV","minver","compver","r1","r2","prev","ranges","simplified","original","simpleSubset","sub","dom","eqSet","Set","gtltComp","higher","lower","hasDomLT","hasDomGT","higherGT","lowerLT","add","size","sawNonNull","OUTER","simpleSub","simpleDom","isSub","migrate","resultFormat","hostFilter","itemFilter","downsampleFunction","isGrafana2target","Array","fixTargetGroup","convertToRegex","migrateFrom2To3version","functions","f","def","migratePercentileAgg","toString","migrateQueryType","slaInterval","migrateSLA","migrateProblemSort","itemTag","migrateApplications","migrateDSConfig","jsonData","dbConnection","schema","shouldMigrateDSConfig","oldVersion","dbConnectionOptions","dbConnectionEnable","enable","dbConnectionDatasourceId","datasourceId","timeout","Transform","Aggregate","Filter","Trends","Time","Alias","Special","addFuncDef","funcDef","defaultParams","category","shortName","funcList","catName","sortBy","updateText","bindFunction","metricFunctions","func","bindedFunc","partial","render","metricExp","parameters","paramType","unshift","_hasMultipleParamsInString","strValue","optional","updateParam","partVal","idx","splice","createFuncInstance","isString","getCategories","extractText","timeShift","shift","utils","time","setAlias","frame","valueField","scopedVars","displayNameFromDS","fieldIndex","field","setAliasByRegex","replaceAlias","regexp","newAlias","state","convertHistory","history","addHostName","convertPointCallback","grouped_history","groupBy","uniqBy","flatten","hist","itemid","delay","keys","datapoints","convertText","point","textFilter","useCaptureGroups","extractedValue","convertHistoryPoint","convertTrendPoint","valueType","value_min","value_max","value_avg","handleHistory","handleTrends","handleText","handleHistoryAsTable","table","addColumn","itemHistory","lastPoint","last","lastValue","skipEmptyValues","first","rows","handleSLAResponse","itservice","slaProperty","slaObject","targetSLA","serviceid","sla","targetStatus","parseInt","status","slaArr","handleTriggersResponse","groups","timeRange","stats","uniq","flattenDeep","0","1","2","3","4","5","priority","getTriggerStats","orderBy","severity","severity_stats","row","toPairs","triggersCount","err","log","sortTimeseries","timeseries","series","seriesToDataFrame","fieldType","values","seriesName","timeFiled","string","valueFiled","number","labels","itemInterval","item_key","useZabbixValueMapping","dataResponseToTimeSeries","response","request","frameJSON","timeField","timeIndex","j","intervalMs","timeSeriesData","ts","meta","itServiceResponseToTimeSeries","dp","intervalNS","isConvertibleToWide","convertToWide","maxLengthIndex","maxLength","getLongestFrame","alignFrames","minTimestamp","firstTs","timestamps","toArray","missingTimestamps","missingValues","frameInterval","convertZabbixUnits","zabbixUnits","joinTriggersWithProblems","problems","problemDTOList","objectid","problemDTO","triggerid","eventid","suppressed","suppression_data","description","comments","alerts","expression","correlation_mode","correlation_tag","manual_close","opdata","joinTriggersWithEvents","events","valueFromEvent","addTriggerDataSource","addTriggerHostProxy","proxies","proxy_hostid","hostProxy","setMaintenanceStatus","maintenance_status","maintenance","setAckButtonStatus","showAckButton","filterTriggersPre","triggerList","replacedTarget","triggerFilter","filterTriggers","toDataFrame","cacheOptions","cacheEnabled","enabled","ttl","cache","promises","cacheRequest","funcName","funcScope","self","cacheObject","hash","getRequestHash","arguments","hasShortExpiration","_isExpired","Promise","resolve","apply","then","proxify","promiseKeeper","callOnce","proxifyWithCache","proxified","object_age","chr","len","charCodeAt","getHash","JSON","stringify","HISTORY_TO_TABLE_MAP","TREND_TO_TABLE_MAP","consolidateByTrendColumns","datasourceName","datasourceTypeId","datasourceTypeName","loadDatasource","dsId","dsName","ds","getList","reject","loadDBDataSource","DBConnector","DEFAULT_QUERY_LIMIT","consolidateByFunc","roundInterval","round_interval","basicAuth","withCredentials","backendAPIUrl","requestOptions","getTrend","getTrend_ZBXNEXT1193","initVersion","method","backendAPIRequest","headers","hideFromInspector","Authorization","fetch","toPromise","getVersion","getVersionPromise","isZabbix54OrHigher","acknowledgeEvent","action","eventids","getGroupsWithHosts","selectHosts","output","floor","random","getGroups","sortfield","real_hosts","getHosts","groupids","getApps","hostids","getItems","appids","itemtype","webitems","applicationids","value_type","selectTags","getItemsByIDs","itemids","getHostsByIDs","selectParentTemplates","getMacros","getGlobalMacros","globalmacro","getLastValue","lastvalue","getHistory","timeFrom","timeTill","grouped_items","sortorder","time_from","time_till","all","trend","getTrend_30","getITService","serviceids","getSLA","intervals","buildSLAIntervals","getSLAInterval","getSLA60","timeTo","slaObjects","period_from","period_to","sliParams","slaid","periods","sliResponse","slaLikeResponse","sli","sliItem","downtimeTime","downtime","okTime","uptime","getProblems","recent","severities","selectAcknowledges","selectSuppressionData","source","evaltype","getTriggersByIds","triggerids","expandDescription","expandData","expandComment","monitored","skipDependent","selectGroups","selectItems","preservekeys","getTriggers","selectLastEvent","Recent","lastChangeSince","lastChangeTill","getEvents","objectids","select_acknowledges","getEventsHistory","getExtendedEventData","getEventAlerts","selectUsers","getAcknowledges","event","getAlerts","getHostAlerts","count","min_severity","countOutput","lastEvent","filterTriggersByAcknowledge","getProxies","getScripts","executeScript","scriptid","getValueMappings","selectMappings","getMaintenances","selectTimeperiods","ceil","code","historyQuery","intervalSec","aggFunction","time_expression","trendsQuery","valueColumn","testQuery","supportedDatabases","sqlDialect","loadSQLDialect","testDataSource","invokeSQLQuery","getAggFunc","results","getTrends","consolidateBy","dbConnector","queryDef","rawSql","maxDataPoints","datasourceRequest","frames","numOfIntervals","retentionPolicy","influxDS","testDatasource","buildHistoryQuery","invokeInfluxDBQuery","seriesList","influxSeriesList","y","influxSeries","timeSeries","points","handleInfluxHistoryResponse","buildWhereClause","_seriesQuery","REQUESTS_TO_PROXYFY","REQUESTS_TO_CACHE","REQUESTS_TO_BIND","cacheTTL","enableDirectDBConnection","dbConnectionDatasourceName","dbConnectionRetentionPolicy","cachingProxy","CachingProxy","zabbixAPI","proxifyRequests","cacheRequests","bindRequests","connectorOptions","initDBConnector","getHistoryDB","getTrendsDB","zabbixVersion","dbConnectorStatus","getAllGroups","testResult","dsType","supportsApplications","supportSLA","getItemsFromTarget","filters","getHostsFromTarget","apps","appFilterEmpty","groupFilter","findByFilter","getAllHosts","getAllApps","appFilter","skipAppFilter","filterByQuery","appsResponse","getItemTags","itemTagFilter","getAllItems","filterItemsByTag","showDisabledItems","expandUserMacro","hostIds","getHostIds","globalMacros","getExpandedGlobalMacros","getItemValues","subtract","getITServices","itServiceFilter","itServices","proxyFilter","filteredGroups","filteredHosts","filteredApps","filterTriggersByProxy","getProblemsHistory","getFilteredProxies","getHistoryTS","responseHandler","getHistoryText","itservices","itServiceIds","slaResponse","filterByRegex","regex","filterPattern","zbx_obj","finded","findByName","filterByName","instanceSettings","templateSrv","isBackendTarget","isDBConnectionTarget","enableDebugLog","buildInfo","replaceTemplateVars","trends","trendsFrom","trendsRange","disableReadOnlyUsersAck","disableDataAlignment","zabbixOptions","zabbix","requestTargets","cloneDeep","backendResponsePromise","backendQuery","dbConnectionResponsePromise","dbConnectionQuery","frontendResponsePromise","frontendQuery","rsp","backendRes","dbConnectionRes","frontendRes","Done","requestId","assign","compact","hide","replaceTargetVariables","body","resp","sortByRefId","applyFrontendFunctions","frontendTargets","buildTimeRange","queryITServiceData","queryTriggersData","queryProblems","queryTextData","useTrends","isUseTrends","queryItemIdData","queryNumericData","timeFunctions","bindFunctionDefs","getItemOptions","queryStart","getTime","queryNumericDataForItems","queryEnd","handleBackendPostProcessingResponse","getTrendValueType","getConsolidateBy","invokeDataProcessingQuery","trendFunctions","trendValueFunc","aliasFunctions","getRequestTarget","zabbixItemIdsTemplateFormat","isOldVersion","itservicesdp","backendRequest","processedResponse","userIsEditor","isEditor","isGrafanaAdmin","getProxiesPromise","tagsFilter","tagsFilterStr","getProblemsPromise","problemsOptions","useTimeRange","sourceProxies","keyBy","title","ZabbixAPIError","metricFindQuery","resultPromise","queryModel","prop","ItemTag","ItemValues","metrics","formatMetric","targetContainsTemplate","variableExists","annotationQuery","rangeRaw","annotation","showOkEvents","minseverity","problemName","hideAcknowledged","formattedAcknowledges","annotationTags","showHostname","checkForTemplateVariables","getVariables","origValue","fieldText","useTrendsFrom","useTrendsRange","functionDefs","aggregationFunctions","aggFuncDefs","dataProcessor","metricObj","expandable","zabbixTemplateFormat","$scope","$injector","$rootScope","metric","tagList","editorModes","editorMode","METRICS","TEXT","ITSERVICE","ITEMID","TRIGGERS","PROBLEMS","slaPropertyList","slaIntervals","ackFilters","problemAckFilters","sortByFields","showEventsFields","showProblemsOptions","resultFormats","severityOptions","getGroupNames","getMetricNames","getHostNames","getApplicationNames","getItemNames","getProxyNames","getTemplateVariables","$on","onTargetBlur","init","refresh","scopeDefaults","oldTarget","queryOptionsText","renderQueryOptionsText","targetDefaults","initDefaultQueryMode","sevOption","show","mapSeverityOptionsFromPanel","triggerSeverity","initFilters","suggestITServices","suggestGroups","suggestHosts","suggestApps","suggestItems","suggestProxies","suggestItemTags","metricList","addAllValue","groupList","hostList","appList","itemList","itServiceList","proxyList","isVariable","newTarget","isEqual","targetChanged","onVariableChange","isContainsVariables","parseTarget","validateTarget","addFunction","newFunc","added","moveAliasFuncLast","removeFunction","without","moveFunction","offset","move","aliasFunc","toggleQueryOptions","showQueryOptions","onQueryOptionChange","optionsMap","forOwn","optionValue","switchEditorMode","appFilterDisabled","Input","variablePattern","zabbixInputValidationEvents","onBlur","rule","errorMessage","restProps","styles","theme","inputRegex","palette","orange","inputVariable","colors","textBlue","inputClass","className","validationEvents","props","queryTypes","label","selectedQueryType","handleQueryUpdate","evt","currentTarget","setState","prevState","newQuery","handleQueryChange","onChange","handleQueryTypeChange","selectedItem","getSelectedQueryType","legacyQuery","q","supportsItemTags","width","tooltip","css","readOnly","FormField","Switch","SUPPORTED_SQL_DS","jsonDataChangeHandler","jsonDataSwitchHandler","checked","secureJsonDataChangeHandler","secureJsonData","resetSecureJsonField","secureJsonFields","directDBDatasourceChanegeHandler","setSelectedDS","setSelectedDSType","selectedDs","dsOption","dsList","getAll","getDirectDBDSOptions","angular","directive","$compile","link","elem","categories","allFunctions","reduce","getAllFunctionNames","functionMenu","click","createFunctionDropDownMenu","$input","$","$button","appendTo","attr","typeahead","minLength","updater","$apply","ctrl","focus","keyup","toggleClass","blur","setTimeout","removeClass","contents","onClick","onDescriptionShow","window","open","DOCS_FUNC_REF_URL","onMoveLeft","onMoveRight","onRemove","style","display","justifyContent","triggerRef","createRef","renderContent","updatePopperPosition","overflow","maxHeight","textAlign","fontWeight","color","showingDescription","content","placement","hideAfter","showPopper","hidePopper","popperProps","referenceElement","current","wrapperClassName","onMouseLeave","onMouseEnter","renderArrow","arrowProps","ref","cursor","PureComponent","zabbixFunctionEditor","restrict","$funcLink","scheduledRelink","paramCountAtLink","cancelBlur","clickFuncParam","paramIndex","$link","$comma","select","lookup","paramDef","multiple","switchToLink","inputElem","clearTimeout","newValue","html","highlightVariablesAsHtml","relink","hasClass","addClass","inputBlur","inputKeyPress","which","inputKeyDown","addElementsAndCompile","defParams","clone","lastParam","paramValue","hasValue","$paramLink","keypress","$element","addTypeahead","children","remove","handleRemoveFunction","handleMoveLeft","handleMoveRight","component","reactDirective","react2AngularDirective","templateUrl","dark","light","setConfigEditor","onOptionsChange","selectedDBDatasource","setSelectedDBDatasource","currentDSType","setCurrentDSType","password","restJsonData","defaultUrl","dataSourceConfig","showAccessOptions","labelWidth","inputWidth","username","required","disabled","placeholder","labelClass","setQueryCtrl","setAnnotationQueryCtrl","ZabbixAnnotationsQueryController","setVariableQueryEditor"],"mappings":"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","file":"datasource-zabbix/module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 75);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import _ from 'lodash';\nimport moment from 'moment';\nimport * as c from './constants';\nimport { VariableQuery, VariableQueryTypes, ZBXItemTag } from './types';\nimport { DataFrame, FieldType, getValueFormats, MappingType, rangeUtil, ValueMapping } from '@grafana/data';\n\n/*\n * This regex matches 3 types of variable reference with an optional format specifier\n * \\$(\\w+)                          $var1\n * \\[\\[([\\s\\S]+?)(?::(\\w+))?\\]\\]    [[var2]] or [[var2:fmt2]]\n * \\${(\\w+)(?::(\\w+))?}             ${var3} or ${var3:fmt3}\n */\nexport const variableRegex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)(?::(\\w+))?\\]\\]|\\${(\\w+)(?:\\.([^:^\\}]+))?(?::(\\w+))?}/g;\n\n/**\n * Expand Zabbix item name\n *\n * @param  {string} name item name, ie \"CPU $2 time\"\n * @param  {string} key  item key, ie system.cpu.util[,system,avg1]\n * @return {string}      expanded name, ie \"CPU system time\"\n */\nexport function expandItemName(name: string, key: string): string {\n\n  // extract params from key:\n  // \"system.cpu.util[,system,avg1]\" --> [\"\", \"system\", \"avg1\"]\n  const key_params_str = key.substring(key.indexOf('[') + 1, key.lastIndexOf(']'));\n  const key_params = splitKeyParams(key_params_str);\n\n  // replace item parameters\n  for (let i = key_params.length; i >= 1; i--) {\n    name = name.replace('$' + i, key_params[i - 1]);\n  }\n  return name;\n}\n\nexport function expandItems(items) {\n  _.forEach(items, item => {\n    item.item = item.name;\n    item.name = expandItemName(item.item, item.key_);\n    return item;\n  });\n  return items;\n}\n\nfunction splitKeyParams(paramStr) {\n  const params = [];\n  let quoted = false;\n  let in_array = false;\n  const split_symbol = ',';\n  let param = '';\n\n  _.forEach(paramStr, symbol => {\n    if (symbol === '\"' && in_array) {\n      param += symbol;\n    } else if (symbol === '\"' && quoted) {\n      quoted = false;\n    } else if (symbol === '\"' && !quoted) {\n      quoted = true;\n    } else if (symbol === '[' && !quoted) {\n      in_array = true;\n    } else if (symbol === ']' && !quoted) {\n      in_array = false;\n    } else if (symbol === split_symbol && !quoted && !in_array) {\n      params.push(param);\n      param = '';\n    } else {\n      param += symbol;\n    }\n  });\n\n  params.push(param);\n  return params;\n}\n\nconst MACRO_PATTERN = /{\\$[A-Z0-9_\\.]+}/g;\n\nexport function containsMacro(itemName) {\n  return MACRO_PATTERN.test(itemName);\n}\n\nexport function replaceMacro(item, macros, isTriggerItem?, parentHosts?) {\n  let itemName = isTriggerItem ? item.url : item.name;\n  const item_macros = itemName.match(MACRO_PATTERN);\n  _.forEach(item_macros, macro => {\n    const host_macros = _.filter(macros, m => {\n      if (m.hostid) {\n        if (isTriggerItem) {\n          // Trigger item can have multiple hosts\n          // Check all trigger host ids against macro host id\n          let hostIdFound = false;\n          _.forEach(item.hosts, h => {\n            // Check for parent templates hostid and macros\n            const parentHost = parentHosts.find(pHost => pHost.hostid === h.hostid) || {};\n            const isTemplateMacro = parentHost.parentTemplates.findIndex(tmpl => tmpl.templateid === m.hostid && m.value) > -1;\n            // Check if host already has that same macro, host is overruling\n            const hostHasMacro = macros.findIndex(aMacro => aMacro.hostid === h.hostid && aMacro.value && aMacro.macro === m.macro) > -1;\n            // Check if macro's hostid is same as hosts or parent templates hostid\n            if ((h.hostid === m.hostid && m.value) || (isTemplateMacro && !hostHasMacro)) {\n              hostIdFound = true;\n            }\n          });\n          return hostIdFound;\n        } else {\n          // Check app host id against macro host id\n          return m.hostid === item.hostid;\n        }\n      } else {\n        // Add global macros\n        return true;\n      }\n    });\n\n    const macro_def = _.find(host_macros, { macro: macro });\n    if (macro_def && macro_def.value) {\n      const macro_value = macro_def.value;\n      const macro_regex = new RegExp(escapeMacro(macro));\n      itemName = itemName.replace(macro_regex, macro_value);\n    }\n  });\n\n  return itemName;\n}\n\nfunction escapeMacro(macro) {\n  macro = macro.replace(/\\$/, '\\\\\\$');\n  return macro;\n}\n\nexport function parseLegacyVariableQuery(query: string): VariableQuery {\n  let queryType: VariableQueryTypes;\n  const parts = [];\n\n  // Split query. Query structure: group.host.app.item\n  _.each(splitTemplateQuery(query), part => {\n    // Replace wildcard to regex\n    if (part === '*') {\n      part = '/.*/';\n    }\n    parts.push(part);\n  });\n  const template = _.zipObject(['group', 'host', 'app', 'item'], parts);\n\n  if (parts.length === 4 && template.app === '/.*/') {\n    // Search for all items, even it's not belong to any application\n    template.app = '';\n  }\n\n  switch (parts.length) {\n    case 1:\n      queryType = VariableQueryTypes.Group;\n      break;\n    case 2:\n      queryType = VariableQueryTypes.Host;\n      break;\n    case 3:\n      queryType = VariableQueryTypes.Application;\n      break;\n    case 4:\n      queryType = VariableQueryTypes.Item;\n      break;\n  }\n\n  const variableQuery: VariableQuery = {\n    queryType,\n    group: template.group || '',\n    host: template.host || '',\n    application: template.app || '',\n    item: template.item || '',\n  };\n\n  return variableQuery;\n}\n\n/**\n * Split template query to parts of zabbix entities\n * group.host.app.item -> [group, host, app, item]\n * {group}{host.com} -> [group, host.com]\n */\nexport function splitTemplateQuery(query) {\n  const splitPattern = /\\{[^\\{\\}]*\\}|\\{\\/.*\\/\\}/g;\n  let split;\n\n  if (isContainsBraces(query)) {\n    const result = query.match(splitPattern);\n    split = _.map(result, part => {\n      return _.trim(part, '{}');\n    });\n  } else {\n    split = query.split('.');\n  }\n\n  return split;\n}\n\nfunction isContainsBraces(query) {\n  const bracesPattern = /^\\{.+\\}$/;\n  return bracesPattern.test(query);\n}\n\n// Pattern for testing regex\nexport const regexPattern = /^\\/(.*)\\/([gmi]*)$/m;\n\nexport function isRegex(str) {\n  return regexPattern.test(str);\n}\n\nexport function isTemplateVariable(str, templateVariables) {\n  const variablePattern = /^\\$\\w+/;\n  if (variablePattern.test(str)) {\n    const variables = _.map(templateVariables, variable => {\n      return '$' + variable.name;\n    });\n    return _.includes(variables, str);\n  } else {\n    return false;\n  }\n}\n\nexport function getRangeScopedVars(range) {\n  const msRange = range.to.diff(range.from);\n  const sRange = Math.round(msRange / 1000);\n  const regularRange = rangeUtil.secondsToHms(msRange / 1000);\n  return {\n    __range_ms: { text: msRange, value: msRange },\n    __range_s: { text: sRange, value: sRange },\n    __range: { text: regularRange, value: regularRange },\n    __range_series: { text: c.RANGE_VARIABLE_VALUE, value: c.RANGE_VARIABLE_VALUE },\n  };\n}\n\nexport function buildRegex(str) {\n  const matches = str.match(regexPattern);\n  const pattern = matches[1];\n  const flags = matches[2] !== \"\" ? matches[2] : undefined;\n  return new RegExp(pattern, flags);\n}\n\n// Need for template variables replace\n// From Grafana's templateSrv.js\nexport function escapeRegex(value) {\n  return value.replace(/[\\\\^$*+?.()|[\\]{}\\/]/g, '\\\\$&');\n}\n\n/**\n * Parses Zabbix item update interval (returns milliseconds). Returns 0 in case of custom intervals.\n */\nexport function parseItemInterval(interval: string): number {\n  const normalizedInterval = normalizeZabbixInterval(interval);\n  if (normalizedInterval) {\n    return parseInterval(normalizedInterval);\n  }\n  return 0;\n}\n\nexport function normalizeZabbixInterval(interval: string): string {\n  const intervalPattern = /(^[\\d]+)(y|M|w|d|h|m|s)?/g;\n  const parsedInterval = intervalPattern.exec(interval);\n  if (!parsedInterval || !interval || (parsedInterval.length > 2 && !parsedInterval[2])) {\n    return '';\n  }\n  return parsedInterval[1] + (parsedInterval.length > 2 ? parsedInterval[2] : 's');\n}\n\n// Returns interval in milliseconds\nexport function parseInterval(interval: string): number {\n  const intervalPattern = /(^[\\d]+)(y|M|w|d|h|m|s)/g;\n  const momentInterval: any[] = intervalPattern.exec(interval);\n  const duration = moment.duration(Number(momentInterval[1]), momentInterval[2]);\n  return (duration.valueOf() as number);\n}\n\nexport function parseTimeShiftInterval(interval) {\n  const intervalPattern = /^([\\+\\-]*)([\\d]+)(y|M|w|d|h|m|s)/g;\n  const momentInterval: any[] = intervalPattern.exec(interval);\n  let duration: any = 0;\n\n  if (momentInterval[1] === '+') {\n    duration = 0 - (moment.duration(Number(momentInterval[2]), momentInterval[3]).valueOf() as any);\n  } else {\n    duration = moment.duration(Number(momentInterval[2]), momentInterval[3]).valueOf();\n  }\n\n  return duration;\n}\n\n/**\n * Format acknowledges.\n *\n * @param  {array} acknowledges array of Zabbix acknowledge objects\n * @return {string} HTML-formatted table\n */\nexport function formatAcknowledges(acknowledges) {\n  if (acknowledges.length) {\n    let formatted_acknowledges = '<br><br>Acknowledges:<br><table><tr><td><b>Time</b></td>'\n      + '<td><b>User</b></td><td><b>Comments</b></td></tr>';\n    _.each(_.map(acknowledges, ack => {\n      const timestamp = moment.unix(ack.clock);\n      return '<tr><td><i>' + timestamp.format(\"DD MMM YYYY HH:mm:ss\") + '</i></td><td>' + ack.alias\n        + ' (' + ack.name + ' ' + ack.surname + ')' + '</td><td>' + ack.message + '</td></tr>';\n    }), ack => {\n      formatted_acknowledges = formatted_acknowledges.concat(ack);\n    });\n    formatted_acknowledges = formatted_acknowledges.concat('</table>');\n    return formatted_acknowledges;\n  } else {\n    return '';\n  }\n}\n\nexport function convertToZabbixAPIUrl(url) {\n  const zabbixAPIUrlPattern = /.*api_jsonrpc.php$/;\n  const trimSlashPattern = /(.*?)[\\/]*$/;\n  if (url.match(zabbixAPIUrlPattern)) {\n    return url;\n  } else {\n    return url.replace(trimSlashPattern, \"$1\");\n  }\n}\n\n/**\n * Wrap function to prevent multiple calls\n * when waiting for result.\n */\nexport function callOnce(func, promiseKeeper) {\n  return function () {\n    if (!promiseKeeper) {\n      promiseKeeper = Promise.resolve(\n        func.apply(this, arguments)\n        .then(result => {\n          promiseKeeper = null;\n          return result;\n        }).catch(err => {\n          promiseKeeper = null;\n          throw err;\n        })\n      );\n    }\n    return promiseKeeper;\n  };\n}\n\n/**\n * Apply function one by one: `sequence([a(), b(), c()]) = c(b(a()))`\n * @param {*} funcsArray functions to apply\n */\nexport function sequence(funcsArray) {\n  return function (result) {\n    for (let i = 0; i < funcsArray.length; i++) {\n      result = funcsArray[i].call(this, result);\n    }\n    return result;\n  };\n}\n\nconst versionPattern = /^(\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))?(?:-([0-9A-Za-z\\.]+))?/;\n\nexport function isValidVersion(version) {\n  return versionPattern.exec(version);\n}\n\nexport function parseVersion(version: string) {\n  const match = versionPattern.exec(version);\n  if (!match) {\n    return null;\n  }\n  const major = Number(match[1]);\n  const minor = Number(match[2] || 0);\n  const patch = Number(match[3] || 0);\n  const meta = match[4];\n  return { major, minor, patch, meta };\n}\n\n/**\n * Replaces any space-like symbols (tabs, new lines, spaces) by single whitespace.\n */\nexport function compactQuery(query) {\n  return query.replace(/\\s+/g, ' ').trim();\n}\n\nexport function getArrayDepth(a, level = 0) {\n  if (a.length === 0) {\n    return 1;\n  }\n  const elem = a[0];\n  if (_.isArray(elem)) {\n    return getArrayDepth(elem, level + 1);\n  }\n  return level + 1;\n}\n\n/**\n * Checks whether its argument represents a numeric value.\n */\nexport function isNumeric(n: any): boolean {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Parses tags string into array of {tag: value} objects\n */\nexport function parseTags(tagStr: string): any[] {\n  if (!tagStr) {\n    return [];\n  }\n\n  let tags: any[] = _.map(tagStr.split(','), (tag) => tag.trim());\n  tags = _.map(tags, (tag) => {\n    const tagParts = tag.split(':');\n    return { tag: tagParts[0]?.trim(), value: tagParts[1]?.trim() };\n  });\n  return tags;\n}\n\n// Parses string representation of tag into the object\nexport function parseItemTag(tagStr: string): ZBXItemTag {\n  const itemTag: ZBXItemTag = { tag: '', value: '' };\n  const tagParts = tagStr.split(': ');\n  itemTag.tag = tagParts[0];\n  if (tagParts[1]) {\n    itemTag.value = tagParts[1];\n  }\n  return itemTag;\n}\n\nexport function itemTagToString(t: ZBXItemTag): string {\n  return t.value ? `${t.tag}: ${t.value}` : t.tag;\n}\n\nexport function mustArray(result: any): any[] {\n  return result || [];\n}\n\nconst getUnitsMap = () => ({\n  '%': 'percent',\n  'b': 'decbits', // bits(SI)\n  'bps': 'bps', // bits/sec(SI)\n  'B': 'bytes', // bytes(IEC)\n  'Bps': 'binBps', // bytes/sec(IEC)\n  // 'unixtime': 'dateTimeAsSystem',\n  'uptime': 'dtdhms',\n  'qps': 'qps', // requests/sec (rps)\n  'iops': 'iops', // I/O ops/sec (iops)\n  'Hz': 'hertz', // Hertz (1/s)\n  'V': 'volt', // Volt (V)\n  'C': 'celsius', // Celsius (°C)\n  'RPM': 'rotrpm', // Revolutions per minute (rpm)\n  'dBm': 'dBm', // Decibel-milliwatt (dBm)\n});\n\nconst getKnownGrafanaUnits = () => {\n  const units = {};\n  const categories = getValueFormats();\n  for (const category of categories) {\n    for (const unitDesc of category.submenu) {\n      const unit = unitDesc.value;\n      units[unit] = unit;\n    }\n  }\n  return units;\n};\n\nconst unitsMap = getUnitsMap();\nconst knownGrafanaUnits = getKnownGrafanaUnits();\n\nexport function convertZabbixUnit(zabbixUnit: string): string {\n  let unit = unitsMap[zabbixUnit];\n  if (!unit) {\n    unit = knownGrafanaUnits[zabbixUnit];\n  }\n  return unit;\n}\n\nexport function getValueMapping(item, valueMappings: any[]): ValueMapping[] | null {\n  const { valuemapid } = item;\n  const mapping = valueMappings?.find(m => m.valuemapid === valuemapid);\n  if (!mapping) {\n    return null;\n  }\n\n  return (mapping.mappings as any[]).map((m, i) => {\n    const valueMapping: ValueMapping = {\n      // id: i,\n      type: MappingType.ValueToText,\n      options: {\n        value: m.value,\n        text: m.newvalue,\n      }\n    };\n    return valueMapping;\n  });\n}\n\nexport function isProblemsDataFrame(data: DataFrame): boolean {\n  return data.fields.length && data.fields[0].type === FieldType.other && data.fields[0].config.custom['type'] === 'problems';\n}\n","// Plugin IDs\nexport const ZABBIX_PROBLEMS_PANEL_ID = 'iiris-zabbix-problems-panel';\nexport const ZABBIX_DS_ID = 'iiris-zabbix-datasource';\n\n// Data point\nexport const DATAPOINT_VALUE = 0;\nexport const DATAPOINT_TS = 1;\n\n// Editor modes\nexport const MODE_METRICS = '0';\nexport const MODE_ITSERVICE = '1';\nexport const MODE_TEXT = '2';\nexport const MODE_ITEMID = '3';\nexport const MODE_TRIGGERS = '4';\nexport const MODE_PROBLEMS = '5';\n\n// Triggers severity\nexport const SEV_NOT_CLASSIFIED = 0;\nexport const SEV_INFORMATION = 1;\nexport const SEV_WARNING = 2;\nexport const SEV_AVERAGE = 3;\nexport const SEV_HIGH = 4;\nexport const SEV_DISASTER = 5;\n\nexport const SHOW_ALL_TRIGGERS = [0, 1];\nexport const SHOW_ALL_EVENTS = [0, 1];\nexport const SHOW_OK_EVENTS = 1;\n\n// Acknowledge\nexport const ZBX_ACK_ACTION_NONE = 0;\nexport const ZBX_ACK_ACTION_CLOSE = 1;\nexport const ZBX_ACK_ACTION_ACK = 2;\nexport const ZBX_ACK_ACTION_ADD_MESSAGE = 4;\nexport const ZBX_ACK_ACTION_CHANGE_SEVERITY = 8;\n\nexport const TRIGGER_SEVERITY = [\n  {val: 0, text: 'Not classified'},\n  {val: 1, text: 'Information'},\n  {val: 2, text: 'Warning'},\n  {val: 3, text: 'Average'},\n  {val: 4, text: 'High'},\n  {val: 5, text: 'Disaster'}\n];\n\n/** Minimum interval for SLA over time (1 hour) */\nexport const MIN_SLA_INTERVAL = 3600;\n\nexport const RANGE_VARIABLE_VALUE = 'range_series';\n\nexport const DEFAULT_ZABBIX_PROBLEMS_LIMIT = 1001;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","import { DataQuery, DataSourceJsonData, DataSourceRef, SelectableValue } from \"@grafana/data\";\n\nexport interface ZabbixDSOptions extends DataSourceJsonData {\n  username: string;\n  password?: string;\n  trends: boolean;\n  trendsFrom: string;\n  trendsRange: string;\n  cacheTTL: string;\n  timeout?: number;\n  dbConnectionEnable: boolean;\n  dbConnectionDatasourceId?: number;\n  dbConnectionDatasourceName?: string;\n  dbConnectionRetentionPolicy?: string;\n  disableReadOnlyUsersAck: boolean;\n  disableDataAlignment: boolean;\n}\n\nexport interface ZabbixSecureJSONData {\n  password?: string;\n}\n\nexport interface ZabbixConnectionInfo {\n  zabbixVersion: string;\n  dbConnectorStatus: {\n    dsType: string;\n    dsName: string;\n  };\n}\n\nexport interface ZabbixConnectionTestQuery {\n  datasourceId: number;\n  queryType: string;\n}\n\nexport interface ZabbixMetricsQuery extends DataQuery {\n  triggers: { minSeverity: string; acknowledged: boolean; count: number; };\n  queryType: string;\n  datasourceId: number;\n  group: { filter: string; name?: string; };\n  host: { filter: string; name?: string; };\n  application: { filter: string; name?: string; };\n  itemTag: { filter: string; name?: string; };\n  item: { filter: string; name?: string; };\n  textFilter: string;\n  mode: number;\n  itemids: number[];\n  useCaptureGroups: boolean;\n  proxy?: { filter: string; };\n  trigger?: { filter: string; };\n  itServiceFilter?: string;\n  tags?: { filter: string; };\n  functions: ZabbixMetricFunction[];\n  options: ZabbixQueryOptions;\n  // Problems\n  showProblems?: ShowProblemTypes;\n  // Deprecated\n  hostFilter?: string;\n  itemFilter?: string;\n}\n\nexport interface ZabbixQueryOptions {\n  showDisabledItems?: boolean;\n  skipEmptyValues?: boolean;\n  disableDataAlignment?: boolean;\n  useZabbixValueMapping?: boolean;\n  // Problems options\n  minSeverity?: number;\n  sortProblems?: string;\n  acknowledged?: number;\n  hostsInMaintenance?: boolean;\n  hostProxy?: boolean;\n  limit?: number;\n  useTimeRange?: boolean;\n  severities?: number[];\n}\n\nexport interface ZabbixMetricFunction {\n  name: string;\n  params: any;\n  def: { name: string; params: any; };\n}\n\n// The paths of these files have moved around in Grafana and they don't resolve properly\n// either. Safer not to bother trying to import them just for type hinting.\n\nexport interface TemplateSrv {\n  variables: {\n    name: string;\n  };\n\n  highlightVariablesAsHtml(str: any): any;\n\n  replace(target: any, scopedVars?: any, format?: any): any;\n}\n\nexport interface DashboardSrv {\n  dash: any;\n}\n\n// Grafana types from backend code\n\ntype RowValues = object[];\ntype TimePoint = [number?, number?];\ntype TimeSeriesPoints = TimePoint[];\ntype TimeSeriesSlice = TimeSeries[];\n\ninterface TimeSeries {\n  name: string;\n  points: TimeSeriesPoints;\n  tags: { [key: string]: string };\n}\n\ninterface TableColumn {\n  text: string;\n}\n\ninterface Table {\n  columns: TableColumn[];\n  rows: RowValues[];\n}\n\ninterface QueryResult {\n  error: string;\n  refId: string;\n  meta: any;\n  series: TimeSeriesSlice[];\n  tables: Table[];\n}\n\nexport interface TSDBResponse {\n  results: { [key: string]: QueryResult };\n  message: string;\n}\n\nexport interface VariableQueryProps {\n  query: LegacyVariableQuery;\n  onChange: (query: VariableQuery, definition: string) => void;\n  datasource: any;\n  templateSrv: any;\n}\n\nexport interface VariableQueryData extends VariableQuery {\n  selectedQueryType: SelectableValue<VariableQueryTypes>;\n  legacyQuery?: string;\n}\n\nexport interface VariableQuery {\n  queryType: VariableQueryTypes;\n  group?: string;\n  host?: string;\n  application?: string;\n  itemTag?: string;\n  item?: string;\n}\n\nexport type LegacyVariableQuery = VariableQuery | string;\n\nexport enum VariableQueryTypes {\n  Group = 'group',\n  Host = 'host',\n  Application = 'application',\n  ItemTag = 'itemTag',\n  Item = 'item',\n  ItemValues = 'itemValues',\n}\n\nexport enum ShowProblemTypes {\n  Problems = 'problems',\n  Recent = 'recent',\n  History = 'history',\n}\n\nexport interface ProblemDTO {\n  triggerid?: string;\n  eventid?: string;\n  timestamp: number;\n\n  /** Name of the trigger. */\n  name?: string;\n\n  /** Same as a name. */\n  description?: string;\n\n  /** Whether the trigger is in OK or problem state. */\n  value?: string;\n\n  datasource?: DataSourceRef | string;\n  comments?: string;\n  host?: string;\n  hostTechName?: string;\n  proxy?: string;\n  severity?: string;\n\n  acknowledged?: '1' | '0';\n  acknowledges?: ZBXAcknowledge[];\n\n  groups?: ZBXGroup[];\n  hosts?: ZBXHost[];\n  items?: ZBXItem[];\n  alerts?: ZBXAlert[];\n  tags?: ZBXTag[];\n  url?: string;\n\n  expression?: string;\n  correlation_mode?: string;\n  correlation_tag?: string;\n  suppressed?: string;\n  suppression_data?: any[];\n  state?: string;\n  maintenance?: boolean;\n  manual_close?: string;\n  error?: string;\n\n  showAckButton?: boolean;\n  opdata?: string;\n}\n\nexport interface ZBXProblem {\n  acknowledged?: '1' | '0';\n  acknowledges?: ZBXAcknowledge[];\n  clock: string;\n  ns: string;\n  correlationid?: string;\n  datasource?: string;\n  name?: string;\n  eventid?: string;\n  maintenance?: boolean;\n  object?: string;\n  objectid?: string;\n  opdata?: any;\n  r_eventid?: string;\n  r_clock?: string;\n  r_ns?: string;\n  severity?: string;\n  showAckButton?: boolean;\n  source?: string;\n  suppressed?: string;\n  suppression_data?: any[];\n  tags?: ZBXTag[];\n  userid?: string;\n}\n\nexport interface ZBXTrigger {\n  acknowledges?: ZBXAcknowledge[];\n  showAckButton?: boolean;\n  alerts?: ZBXAlert[];\n  age?: string;\n  color?: string;\n  comments?: string;\n  correlation_mode?: string;\n  correlation_tag?: string;\n  datasource?: string;\n  description?: string;\n  error?: string;\n  expression?: string;\n  flags?: string;\n  groups?: ZBXGroup[];\n  host?: string;\n  hostTechName?: string;\n  hosts?: ZBXHost[];\n  items?: ZBXItem[];\n  lastEvent?: ZBXEvent;\n  lastchange?: string;\n  lastchangeUnix?: number;\n  maintenance?: boolean;\n  manual_close?: string;\n  priority?: string;\n  proxy?: string;\n  recovery_expression?: string;\n  recovery_mode?: string;\n  severity?: string;\n  state?: string;\n  status?: string;\n  tags?: ZBXTag[];\n  templateid?: string;\n  triggerid?: string;\n  /** Whether the trigger can generate multiple problem events. */\n  type?: string;\n  url?: string;\n  value?: string;\n  opdata?: string;\n}\n\nexport interface ZBXGroup {\n  groupid: string;\n  name: string;\n}\n\nexport interface ZBXHost {\n  hostid: string;\n  name: string;\n  host: string;\n  maintenance_status?: string;\n  proxy_hostid?: string;\n}\n\nexport interface ZBXItem {\n  itemid: string;\n  name: string;\n  key_: string;\n  lastvalue?: string;\n  tags?: ZBXItemTag[];\n}\n\nexport interface ZBXItemTag {\n  tag: string;\n  value?: string;\n}\n\nexport interface ZBXEvent {\n  eventid: string;\n  clock: string;\n  ns?: string;\n  value?: string;\n  name?: string;\n  source?: string;\n  object?: string;\n  objectid?: string;\n  severity?: string;\n  hosts?: ZBXHost[];\n  acknowledged?: '1' | '0';\n  acknowledges?: ZBXAcknowledge[];\n  tags?: ZBXTag[];\n  suppressed?: string;\n}\n\nexport interface ZBXTag {\n  tag: string;\n  value?: string;\n}\n\nexport interface ZBXAcknowledge {\n  acknowledgeid: string;\n  eventid: string;\n  userid: string;\n  action: string;\n  clock: string;\n  time: string;\n  message?: string;\n  user: string;\n  alias: string;\n  name: string;\n  surname: string;\n}\n\nexport interface ZBXAlert {\n  eventid: string;\n  clock: string;\n  message: string;\n  error: string;\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__8__;","module.exports = __WEBPACK_EXTERNAL_MODULE__9__;","module.exports = __WEBPACK_EXTERNAL_MODULE__11__;","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      }\n    }\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (this.prerelease[0] === identifier) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","import _ from 'lodash';\nimport moment from 'moment';\nimport { DataQuery } from '@grafana/data';\nimport * as utils from '../datasource-zabbix/utils';\nimport { ProblemDTO } from 'datasource-zabbix/types';\n\nexport function isNewProblem(problem: ProblemDTO, highlightNewerThan: string): boolean {\n  try {\n    const highlightIntervalMs = utils.parseInterval(highlightNewerThan);\n    const durationSec = (Date.now() - problem.timestamp * 1000);\n    return durationSec < highlightIntervalMs;\n  } catch (e) {\n    return false;\n  }\n}\n\nconst DEFAULT_TIME_FORMAT = \"DD MMM YYYY HH:mm:ss\";\n\nexport function formatLastChange(lastchangeUnix: number, customFormat?: string) {\n  const timestamp = moment.unix(lastchangeUnix);\n  const format = customFormat || DEFAULT_TIME_FORMAT;\n  const lastchange = timestamp.format(format);\n  return lastchange;\n}\n\nexport const getNextRefIdChar = (queries: DataQuery[]): string => {\n  const letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n  return _.find(letters, refId => {\n    return _.every(queries, other => {\n      return other.refId !== refId;\n    });\n  });\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__14__;","module.exports = __WEBPACK_EXTERNAL_MODULE__15__;","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      }\n    }\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split(/\\s*\\|\\|\\s*/)\n      // map the range to a 2d array of comparators\n      .map(range => this.parseRange(range.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    const loose = this.options.loose\n    range = range.trim()\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range, re[t.COMPARATORTRIM])\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    const compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    return range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      .map(comp => replaceGTE0(comp, this.options))\n      // in loose mode, throw out any that are not valid comparators\n      .filter(this.options.loose ? comp => !!comp.match(compRe) : () => true)\n      .map(comp => new Comparator(comp, this.options))\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace\n} = require('../internal/re')\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceTilde(comp, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceCaret(comp, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((comp) => {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<')\n        pr = '-0'\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__18__;","import _ from 'lodash';\nimport { getNextRefIdChar } from './utils';\nimport { ShowProblemTypes } from '../datasource-zabbix/types';\n\n// Actual schema version\nexport const CURRENT_SCHEMA_VERSION = 8;\n\nexport const getDefaultTarget = (targets?) => {\n  return {\n    group: {filter: \"\"},\n    host: {filter: \"\"},\n    application: {filter: \"\"},\n    trigger: {filter: \"\"},\n    tags: {filter: \"\"},\n    proxy: {filter: \"\"},\n    refId: getNextRefIdChar(targets),\n  };\n};\n\nexport function getDefaultTargetOptions() {\n  return {\n    hostsInMaintenance: true,\n  };\n}\n\nexport function migratePanelSchema(panel) {\n  if (isDefaultPanel(panel)) {\n    return panel;\n  }\n\n  if (isEmptyPanel(panel)) {\n    delete panel.targets;\n    return panel;\n  }\n\n  const schemaVersion = getSchemaVersion(panel);\n  // panel.schemaVersion = CURRENT_SCHEMA_VERSION;\n\n  if (schemaVersion < 2) {\n    panel.datasources = [panel.datasource];\n    panel.targets = {};\n    panel.targets[panel.datasources[0]] = panel.triggers;\n\n    // delete old props\n    delete panel.triggers;\n    delete panel.datasource;\n  }\n\n  if (schemaVersion < 3) {\n    // delete old props\n    delete panel.lastChangeField;\n    delete panel.infoField;\n    delete panel.scroll;\n    delete panel.hideHostsInMaintenance;\n  }\n\n  if (schemaVersion < 5) {\n    if (panel.targets && !_.isEmpty(panel.targets)) {\n      _.each(panel.targets, (target) => {\n        _.defaultsDeep(target, getDefaultTarget());\n      });\n    }\n  }\n\n  if (schemaVersion < 6) {\n    if (panel.showEvents && panel.showEvents.value === '1') {\n      panel.showEvents.value = 1;\n    }\n  }\n\n  if (schemaVersion < 7) {\n    const updatedTargets = [];\n    for (const targetKey in panel.targets) {\n      const target = panel.targets[targetKey];\n      if (!isEmptyTarget(target) && !isInvalidTarget(target, targetKey)) {\n        updatedTargets.push({\n          ...target,\n          datasource: targetKey,\n        });\n      }\n    }\n    for (const target of updatedTargets) {\n      if (!target.refId) {\n        target.refId = getNextRefIdChar(updatedTargets);\n      }\n    }\n    panel.targets = updatedTargets;\n    delete panel.datasources;\n  }\n\n  if (schemaVersion < 8) {\n    if (panel.targets.length === 1) {\n      if (panel.targets[0].datasource) {\n        panel.datasource = panel.targets[0].datasource;\n        delete panel.targets[0].datasource;\n      }\n    } else if (panel.targets.length > 1) {\n      // Mixed data sources\n      panel.datasource = '-- Mixed --';\n    }\n    for (const target of panel.targets) {\n      // set queryType to PROBLEMS\n      target.queryType = 5;\n      target.showProblems = migrateShowEvents(panel);\n      target.options = migrateOptions(panel);\n\n      _.defaults(target.options, getDefaultTargetOptions());\n      _.defaults(target, { tags: { filter: \"\" } });\n    }\n\n    panel.sortProblems = panel.sortTriggersBy?.value === 'priority' ? 'priority' : 'lastchange';\n\n    delete panel.showEvents;\n    delete panel.showTriggers;\n    delete panel.hostsInMaintenance;\n    delete panel.sortTriggersBy;\n  }\n\n  return panel;\n}\n\nfunction migrateOptions(panel) {\n  let acknowledged = 2;\n  if (panel.showTriggers === 'acknowledged') {\n    acknowledged = 1;\n  } else if (panel.showTriggers === 'unacknowledged') {\n    acknowledged = 0;\n  }\n\n  // Default limit in Zabbix\n  let limit = 1001;\n  if (panel.limit && panel.limit !== 100) {\n    limit = panel.limit;\n  }\n\n  return {\n    hostsInMaintenance: panel.hostsInMaintenance,\n    sortProblems: panel.sortTriggersBy?.value === 'priority' ? 'priority' : 'default',\n    minSeverity: 0,\n    acknowledged: acknowledged,\n    limit: limit,\n  };\n}\n\nfunction migrateShowEvents(panel) {\n  if (panel.showEvents?.value === 1) {\n    return ShowProblemTypes.Problems;\n  } else if (panel.showEvents?.value === 0 || panel.showEvents?.value?.length > 1) {\n    return ShowProblemTypes.History;\n  } else {\n    return ShowProblemTypes.Problems;\n  }\n}\n\nfunction getSchemaVersion(panel) {\n  return panel.schemaVersion || 1;\n}\n\nfunction isEmptyPanel(panel) {\n  return !panel.datasource && !panel.datasources && !panel.triggers && isEmptyTargets(panel.targets);\n}\n\nfunction isEmptyTargets(targets) {\n  return !targets || (_.isArray(targets) && (targets.length === 0 || targets.length === 1 && _.isEmpty(targets[0])));\n}\n\nfunction isDefaultPanel(panel) {\n  return panel.targets && panel.targets.length === 1 && isDefaultTarget(panel.targets[0]);\n}\n\nfunction isDefaultTarget(target) {\n  return !target.group?.filter && !target.host?.filter && !target.application?.filter && !target.trigger?.filter && !target.queryType;\n}\n\nfunction isEmptyTarget(target) {\n  return !target || !(target.group && target.host && target.application && target.trigger);\n}\n\nfunction isInvalidTarget(target, targetKey) {\n  return target && target.refId === 'A' && targetKey === '0';\n}\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nmodule.exports = {\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: require('./internal/constants').SEMVER_SPEC_VERSION,\n  SemVer: require('./classes/semver'),\n  compareIdentifiers: require('./internal/identifiers').compareIdentifiers,\n  rcompareIdentifiers: require('./internal/identifiers').rcompareIdentifiers,\n  parse: require('./functions/parse'),\n  valid: require('./functions/valid'),\n  clean: require('./functions/clean'),\n  inc: require('./functions/inc'),\n  diff: require('./functions/diff'),\n  major: require('./functions/major'),\n  minor: require('./functions/minor'),\n  patch: require('./functions/patch'),\n  prerelease: require('./functions/prerelease'),\n  compare: require('./functions/compare'),\n  rcompare: require('./functions/rcompare'),\n  compareLoose: require('./functions/compare-loose'),\n  compareBuild: require('./functions/compare-build'),\n  sort: require('./functions/sort'),\n  rsort: require('./functions/rsort'),\n  gt: require('./functions/gt'),\n  lt: require('./functions/lt'),\n  eq: require('./functions/eq'),\n  neq: require('./functions/neq'),\n  gte: require('./functions/gte'),\n  lte: require('./functions/lte'),\n  cmp: require('./functions/cmp'),\n  coerce: require('./functions/coerce'),\n  Comparator: require('./classes/comparator'),\n  Range: require('./classes/range'),\n  satisfies: require('./functions/satisfies'),\n  toComparators: require('./ranges/to-comparators'),\n  maxSatisfying: require('./ranges/max-satisfying'),\n  minSatisfying: require('./ranges/min-satisfying'),\n  minVersion: require('./ranges/min-version'),\n  validRange: require('./ranges/valid'),\n  outside: require('./ranges/outside'),\n  gtr: require('./ranges/gtr'),\n  ltr: require('./ranges/ltr'),\n  intersects: require('./ranges/intersects'),\n  simplifyRange: require('./ranges/simplify'),\n  subset: require('./ranges/subset'),\n}\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\.0\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\.0\\.0-0\\\\s*$')\n","const {MAX_LENGTH} = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parse = (version, options) => {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n  constructor (comp, options) {\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      }\n    }\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst {re, t} = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","module.exports = __WEBPACK_EXTERNAL_MODULE__30__;","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers\n}\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst {ANY} = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","module.exports = __WEBPACK_EXTERNAL_MODULE__38__;","module.exports = __WEBPACK_EXTERNAL_MODULE__39__;","module.exports = __WEBPACK_EXTERNAL_MODULE__40__;","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","module.exports = __WEBPACK_EXTERNAL_MODULE__43__;","module.exports = __WEBPACK_EXTERNAL_MODULE__44__;","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(version, options).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst {re, t} = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null)\n    return null\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!minver || gt(minver, compver)) {\n            minver = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let min = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!min)\n        min = version\n    } else {\n      if (prev) {\n        set.push([min, prev])\n      }\n      prev = null\n      min = null\n    }\n  }\n  if (min)\n    set.push([min, null])\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max)\n      ranges.push(min)\n    else if (!max && min === v[0])\n      ranges.push('*')\n    else if (!max)\n      ranges.push(`>=${min}`)\n    else if (min === v[0])\n      ranges.push(`<=${max}`)\n    else\n      ranges.push(`${min} - ${max}`)\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst { ANY } = require('../classes/comparator.js')\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a subset of some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else return false\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n// - If LT\n//   - If LT.semver is greater than that of any > comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n// - If any C is a = range, and GT or LT are set, return false\n// - Else return true\n\nconst subset = (sub, dom, options) => {\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub)\n        continue OUTER\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull)\n      return false\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub.length === 1 && sub[0].semver === ANY)\n    return dom.length === 1 && dom[0].semver === ANY\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=')\n      gt = higherGT(gt, c, options)\n    else if (c.operator === '<' || c.operator === '<=')\n      lt = lowerLT(lt, c, options)\n    else\n      eqSet.add(c.semver)\n  }\n\n  if (eqSet.size > 1)\n    return null\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0)\n      return null\n    else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<='))\n      return null\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options))\n      return null\n\n    if (lt && !satisfies(eq, String(lt), options))\n      return null\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options))\n        return false\n    }\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c)\n          return false\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options))\n        return false\n    }\n    if (lt) {\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c)\n          return false\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options))\n        return false\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0)\n      return false\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0)\n    return false\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0)\n    return false\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","import _ from 'lodash';\nimport { ZabbixMetricsQuery } from './types';\nimport * as c from './constants';\n\n/**\n * Query format migration.\n * This module can detect query format version and make migration.\n */\n\nexport function isGrafana2target(target) {\n  if (!target.mode || target.mode === 0 || target.mode === 2) {\n    if ((target.hostFilter || target.itemFilter || target.downsampleFunction ||\n        (target.host && target.host.host)) &&\n      (target.item.filter === undefined && target.host.filter === undefined)) {\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return false;\n  }\n}\n\nexport function migrateFrom2To3version(target: ZabbixMetricsQuery) {\n  target.group.filter = target.group.name === \"*\" ? \"/.*/\" : target.group.name;\n  target.host.filter = target.host.name === \"*\" ? convertToRegex(target.hostFilter) : target.host.name;\n  target.application.filter = target.application.name === \"*\" ? \"\" : target.application.name;\n  target.item.filter = target.item.name === \"All\" ? convertToRegex(target.itemFilter) : target.item.name;\n  return target;\n}\n\nfunction migratePercentileAgg(target) {\n  if (target.functions) {\n    for (const f of target.functions) {\n      if (f.def && f.def.name === 'percentil') {\n        f.def.name = 'percentile';\n      }\n    }\n  }\n}\n\nfunction migrateQueryType(target) {\n  if (target.queryType === undefined) {\n    if (target.mode === 'Metrics') {\n      // Explore mode\n      target.queryType = c.MODE_METRICS;\n    } else if (target.mode !== undefined) {\n      target.queryType = target.mode;\n      delete target.mode;\n    }\n  }\n\n  // queryType is a string in query model\n  if (typeof target.queryType === 'number') {\n    target.queryType = (target.queryType as number)?.toString();\n  }\n}\n\nfunction migrateSLA(target) {\n  if (target.queryType === c.MODE_ITSERVICE && !target.slaInterval) {\n    target.slaInterval = 'none';\n  }\n}\n\nfunction migrateProblemSort(target) {\n  if (target.options?.sortProblems === 'priority') {\n    target.options.sortProblems = 'severity';\n  }\n}\n\nfunction migrateApplications(target) {\n  if (!target.itemTag) {\n    target.itemTag = { filter: '' };\n    if (target.application?.filter) {\n      target.itemTag.filter = `Application: ${target.application?.filter}`;\n    }\n  }\n}\n\nexport function migrate(target) {\n  target.resultFormat = target.resultFormat || 'time_series';\n  target = fixTargetGroup(target);\n  if (isGrafana2target(target)) {\n    return migrateFrom2To3version(target);\n  }\n  migratePercentileAgg(target);\n  migrateQueryType(target);\n  migrateSLA(target);\n  migrateProblemSort(target);\n  migrateApplications(target);\n  return target;\n}\n\nfunction fixTargetGroup(target) {\n  if (target.group && Array.isArray(target.group)) {\n    target.group = { 'filter': \"\" };\n  }\n  return target;\n}\n\nfunction convertToRegex(str) {\n  if (str) {\n    return '/' + str + '/';\n  } else {\n    return '/.*/';\n  }\n}\n\nexport const DS_CONFIG_SCHEMA = 3;\n\nexport function migrateDSConfig(jsonData) {\n  if (!jsonData) {\n    jsonData = {};\n  }\n\n  if (!shouldMigrateDSConfig(jsonData)) {\n    return jsonData;\n  }\n\n  const oldVersion = jsonData.schema || 1;\n  jsonData.schema = DS_CONFIG_SCHEMA;\n\n  if (oldVersion < 2) {\n    const dbConnectionOptions = jsonData.dbConnection || {};\n    jsonData.dbConnectionEnable = dbConnectionOptions.enable || false;\n    jsonData.dbConnectionDatasourceId = dbConnectionOptions.datasourceId || null;\n    delete jsonData.dbConnection;\n  }\n\n  if (oldVersion < 3) {\n    jsonData.timeout = (jsonData.timeout as string) === \"\" ? null : Number(jsonData.timeout as string);\n  }\n\n  return jsonData;\n}\n\nfunction shouldMigrateDSConfig(jsonData): boolean {\n  if (jsonData.dbConnection && !_.isEmpty(jsonData.dbConnection)) {\n    return true;\n  }\n  if (jsonData.schema && jsonData.schema < DS_CONFIG_SCHEMA) {\n    return true;\n  }\n  return false;\n}\n","import _ from 'lodash';\nimport { isNumeric } from './utils';\n\nconst index = [];\nconst categories = {\n  Transform: [],\n  Aggregate: [],\n  Filter: [],\n  Trends: [],\n  Time: [],\n  Alias: [],\n  Special: []\n};\n\nfunction addFuncDef(funcDef) {\n  funcDef.params = funcDef.params || [];\n  funcDef.defaultParams = funcDef.defaultParams || [];\n\n  if (funcDef.category) {\n    categories[funcDef.category].push(funcDef);\n  }\n  index[funcDef.name] = funcDef;\n  index[funcDef.shortName || funcDef.name] = funcDef;\n}\n\n// Transform\n\naddFuncDef({\n  name: 'groupBy',\n  category: 'Transform',\n  params: [\n    { name: 'interval', type: 'string'},\n    { name: 'function', type: 'string', options: ['avg', 'min', 'max', 'sum', 'count', 'median', 'first', 'last'] }\n  ],\n  defaultParams: ['1m', 'avg'],\n});\n\naddFuncDef({\n  name: 'scale',\n  category: 'Transform',\n  params: [\n    { name: 'factor', type: 'float', options: [100, 0.01, 10, -1]}\n  ],\n  defaultParams: [100],\n});\n\naddFuncDef({\n  name: 'offset',\n  category: 'Transform',\n  params: [\n    { name: 'delta', type: 'float', options: [-100, 100]}\n  ],\n  defaultParams: [100],\n});\n\naddFuncDef({\n  name: 'delta',\n  category: 'Transform',\n  params: [],\n  defaultParams: [],\n});\n\naddFuncDef({\n  name: 'rate',\n  category: 'Transform',\n  params: [],\n  defaultParams: [],\n});\n\naddFuncDef({\n  name: 'movingAverage',\n  category: 'Transform',\n  params: [\n    { name: 'factor', type: 'int', options: [6, 10, 60, 100, 600] }\n  ],\n  defaultParams: [10],\n});\n\naddFuncDef({\n  name: 'exponentialMovingAverage',\n  category: 'Transform',\n  params: [\n    { name: 'smoothing', type: 'float', options: [6, 10, 60, 100, 600] }\n  ],\n  defaultParams: [0.2],\n});\n\naddFuncDef({\n  name: 'percentile',\n  category: 'Transform',\n  params: [\n    { name: 'interval', type: 'string' },\n    { name: 'percent', type: 'float', options: [25, 50, 75, 90, 95, 99, 99.9] }\n  ],\n  defaultParams: ['1m', 95],\n});\n\naddFuncDef({\n  name: 'removeAboveValue',\n  category: 'Transform',\n  params: [\n    {name: 'number', type: 'float'},\n  ],\n  defaultParams: [0],\n});\n\naddFuncDef({\n  name: 'removeBelowValue',\n  category: 'Transform',\n  params: [\n    {name: 'number', type: 'float'},\n  ],\n  defaultParams: [0],\n});\n\naddFuncDef({\n  name: 'transformNull',\n  category: 'Transform',\n  params: [\n    {name: 'number', type: 'float'}\n  ],\n  defaultParams: [0],\n});\n\n// Aggregate\n\naddFuncDef({\n  name: 'aggregateBy',\n  category: 'Aggregate',\n  params: [\n    { name: 'interval', type: 'string' },\n    { name: 'function', type: 'string', options: ['avg', 'min', 'max', 'sum', 'count', 'median', 'first', 'last'] }\n  ],\n  defaultParams: ['1m', 'avg'],\n});\n\naddFuncDef({\n  name: 'sumSeries',\n  category: 'Aggregate',\n  params: [],\n  defaultParams: [],\n});\n\naddFuncDef({\n  name: 'percentileAgg',\n  category: 'Aggregate',\n  params: [\n    { name: 'interval', type: 'string' },\n    { name: 'percent', type: 'float', options: [25, 50, 75, 90, 95, 99, 99.9] }\n  ],\n  defaultParams: ['1m', 95],\n});\n\n// Filter\n\naddFuncDef({\n  name: 'top',\n  category: 'Filter',\n  params: [\n    { name: 'number', type: 'int' },\n    { name: 'value', type: 'string', options: ['avg', 'min', 'max', 'sum', 'count', 'median', 'first', 'last'] }\n  ],\n  defaultParams: [5, 'avg'],\n});\n\naddFuncDef({\n  name: 'bottom',\n  category: 'Filter',\n  params: [\n    { name: 'number', type: 'int' },\n    { name: 'value', type: 'string', options: ['avg', 'min', 'max', 'sum', 'count', 'median', 'first', 'last'] }\n  ],\n  defaultParams: [5, 'avg'],\n});\n\naddFuncDef({\n  name: 'sortSeries',\n  category: 'Filter',\n  params: [\n    { name: 'direction', type: 'string', options: ['asc', 'desc'] }\n  ],\n  defaultParams: ['asc']\n});\n\n// Trends\n\naddFuncDef({\n  name: 'trendValue',\n  category: 'Trends',\n  params: [\n    { name: 'type', type: 'string', options: ['avg', 'min', 'max', 'sum', 'count'] }\n  ],\n  defaultParams: ['avg'],\n});\n\n// Time\n\naddFuncDef({\n  name: 'timeShift',\n  category: 'Time',\n  params: [\n    { name: 'interval', type: 'string', options: ['24h', '7d', '1M', '+24h', '-24h']}\n  ],\n  defaultParams: ['24h'],\n});\n\n//Alias\n\naddFuncDef({\n  name: 'setAlias',\n  category: 'Alias',\n  params: [\n    { name: 'alias', type: 'string' }\n  ],\n  defaultParams: []\n});\n\naddFuncDef({\n  name: 'setAliasByRegex',\n  category: 'Alias',\n  params: [\n    { name: 'aliasByRegex', type: 'string' }\n  ],\n  defaultParams: []\n});\n\naddFuncDef({\n  name: 'replaceAlias',\n  category: 'Alias',\n  params: [\n    { name: 'regexp', type: 'string' },\n    { name: 'newAlias', type: 'string' }\n  ],\n  defaultParams: ['/(.*)/', '$1']\n});\n\n// Special\naddFuncDef({\n  name: 'consolidateBy',\n  category: 'Special',\n  params: [\n    { name: 'type', type: 'string', options: ['avg', 'min', 'max', 'sum', 'count'] }\n  ],\n  defaultParams: ['avg'],\n});\n\n_.each(categories, (funcList, catName) => {\n  categories[catName] = _.sortBy(funcList, 'name');\n});\n\nclass FuncInstance {\n  def: any;\n  params: any;\n  text: string;\n  added: boolean;\n\n  constructor(funcDef, params) {\n    this.def = funcDef;\n\n    if (params) {\n      this.params = params;\n    } else {\n      // Create with default params\n      this.params = [];\n      this.params = funcDef.defaultParams.slice(0);\n    }\n\n    this.updateText();\n  }\n\n  bindFunction(metricFunctions) {\n    const func = metricFunctions[this.def.name];\n    if (func) {\n\n      // Bind function arguments\n      let bindedFunc = func;\n      let param;\n      for (let i = 0; i < this.params.length; i++) {\n        param = this.params[i];\n\n        // Convert numeric params\n        if (this.def.params[i].type === 'int' ||\n            this.def.params[i].type === 'float') {\n          param = Number(param);\n        }\n        bindedFunc = _.partial(bindedFunc, param);\n      }\n      return bindedFunc;\n    } else {\n      throw { message: 'Method not found ' + this.def.name };\n    }\n  }\n\n  render(metricExp) {\n    const str = this.def.name + '(';\n    const parameters = _.map(this.params, (value, index) => {\n      const paramType = this.def.params[index].type;\n      if (paramType === 'int' ||\n          paramType === 'float' ||\n          paramType === 'value_or_series' ||\n          paramType === 'boolean') {\n        return value;\n      } else if (paramType === 'int_or_interval' && isNumeric(value)) {\n        return value;\n      }\n\n      return \"'\" + value + \"'\";\n\n    });\n\n    if (metricExp) {\n      parameters.unshift(metricExp);\n    }\n\n    return str + parameters.join(', ') + ')';\n  }\n\n  _hasMultipleParamsInString(strValue, index) {\n    if (strValue.indexOf(',') === -1) {\n      return false;\n    }\n\n    return this.def.params[index + 1] && this.def.params[index + 1].optional;\n  }\n\n  updateParam(strValue, index) {\n    // handle optional parameters\n    // if string contains ',' and next param is optional, split and update both\n    if (this._hasMultipleParamsInString(strValue, index)) {\n      _.each(strValue.split(','), (partVal, idx) => {\n        this.updateParam(partVal.trim(), idx);\n      });\n      return;\n    }\n\n    if (strValue === '' && this.def.params[index].optional) {\n      this.params.splice(index, 1);\n    }else {\n      this.params[index] = strValue;\n    }\n\n    this.updateText();\n  }\n\n  updateText() {\n    if (this.params.length === 0) {\n      this.text = this.def.name + '()';\n      return;\n    }\n\n    let text = this.def.name + '(';\n    text += this.params.join(', ');\n    text += ')';\n    this.text = text;\n  }\n}\n\nexport function createFuncInstance(funcDef, params?) {\n  if (_.isString(funcDef)) {\n    if (!index[funcDef]) {\n      throw { message: 'Method not found ' + name };\n    }\n    funcDef = index[funcDef];\n  }\n  return new FuncInstance(funcDef, params);\n}\n\nexport function getFuncDef(name) {\n  return index[name];\n}\n\nexport function getCategories() {\n  return categories;\n}\n","import _ from 'lodash';\nimport * as utils from './utils';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { DataFrame, FieldType, TIME_SERIES_VALUE_FIELD_NAME } from '@grafana/data';\n\nfunction setAlias(alias: string, frame: DataFrame) {\n  if (frame.fields?.length <= 2) {\n    const valueField = frame.fields.find(f => f.name === TIME_SERIES_VALUE_FIELD_NAME);\n    if (valueField?.config?.custom?.scopedVars) {\n      alias = getTemplateSrv().replace(alias, valueField?.config?.custom?.scopedVars);\n    }\n    if (valueField) {\n      valueField.config.displayNameFromDS = alias;\n    }\n    frame.name = alias;\n    return frame;\n  }\n\n  for (let fieldIndex = 0; fieldIndex < frame.fields.length; fieldIndex++) {\n    const field = frame.fields[fieldIndex];\n    if (field.type !== FieldType.time) {\n      if (field?.config?.custom?.scopedVars) {\n        alias = getTemplateSrv().replace(alias, field?.config?.custom?.scopedVars);\n      }\n      field.config.displayNameFromDS = alias;\n    }\n  }\n  return frame;\n}\n\nfunction replaceAlias(regexp: string, newAlias: string, frame: DataFrame) {\n  let pattern: string | RegExp;\n  if (utils.isRegex(regexp)) {\n    pattern = utils.buildRegex(regexp);\n  } else {\n    pattern = regexp;\n  }\n\n  if (frame.fields?.length <= 2) {\n    let alias = frame.name.replace(pattern, newAlias);\n    const valueField = frame.fields.find(f => f.name === TIME_SERIES_VALUE_FIELD_NAME);\n    if (valueField?.state?.scopedVars) {\n      alias = getTemplateSrv().replace(alias, valueField?.state?.scopedVars);\n    }\n    if (valueField) {\n      valueField.config.displayNameFromDS = alias;\n    }\n    frame.name = alias;\n    return frame;\n  }\n\n  for (const field of frame.fields) {\n    if (field.type !== FieldType.time) {\n      let alias = field.config?.displayNameFromDS?.replace(pattern, newAlias);\n      if (field?.state?.scopedVars && alias) {\n        alias = getTemplateSrv().replace(alias, field?.state?.scopedVars);\n      }\n      field.name = alias || field.name;\n    }\n  }\n  return frame;\n}\n\nfunction setAliasByRegex(alias: string, frame: DataFrame) {\n  if (frame.fields?.length <= 2) {\n    const valueField = frame.fields.find(f => f.name === TIME_SERIES_VALUE_FIELD_NAME);\n    try {\n      if (valueField) {\n        valueField.config.displayNameFromDS = extractText(valueField.config?.displayNameFromDS, alias);\n      }\n      frame.name = extractText(frame.name, alias);\n    } catch (error) {\n      console.error('Failed to apply RegExp:', error?.message || error);\n    }\n    return frame;\n  }\n\n  for (const field of frame.fields) {\n    if (field.type !== FieldType.time) {\n      try {\n        field.config.displayNameFromDS = extractText(field.config?.displayNameFromDS, alias);\n      } catch (error) {\n        console.error('Failed to apply RegExp:', error?.message || error);\n      }\n    }\n  }\n\n  return frame;\n}\n\nfunction extractText(str: string, pattern: string) {\n  const extractPattern = new RegExp(pattern);\n  const extractedValue = extractPattern.exec(str);\n  return extractedValue[0];\n}\n\nfunction timeShift(interval, range) {\n  const shift = utils.parseTimeShiftInterval(interval) / 1000;\n  return _.map(range, time => {\n    return time - shift;\n  });\n}\n\nconst metricFunctions = {\n  timeShift: timeShift,\n  setAlias: setAlias,\n  setAliasByRegex: setAliasByRegex,\n  replaceAlias: replaceAlias\n};\n\nexport default {\n  get metricFunctions() {\n    return metricFunctions;\n  }\n};\n","import _ from 'lodash';\nimport TableModel from 'grafana/app/core/table_model';\nimport * as c from './constants';\nimport * as utils from './utils';\nimport {\n  ArrayVector,\n  DataFrame,\n  dataFrameFromJSON,\n  DataFrameJSON,\n  DataQueryResponse,\n  Field,\n  FieldType,\n  getTimeField,\n  MutableDataFrame,\n  MutableField,\n  TIME_SERIES_TIME_FIELD_NAME,\n  TIME_SERIES_VALUE_FIELD_NAME,\n} from '@grafana/data';\nimport { ZabbixMetricsQuery } from './types';\n\n/**\n * Convert Zabbix API history.get response to Grafana format\n *\n * @return {Array}            Array of timeseries in Grafana format\n *                            {\n *                               target: \"Metric name\",\n *                               datapoints: [[<value>, <unixtime>], ...]\n *                            }\n */\nfunction convertHistory(history, items, addHostName, convertPointCallback) {\n  /**\n   * Response should be in the format:\n   * data: [\n   *          {\n   *             target: \"Metric name\",\n   *             datapoints: [[<value>, <unixtime>], ...]\n   *          }, ...\n   *       ]\n   */\n\n    // Group history by itemid\n  const grouped_history = _.groupBy(history, 'itemid');\n  const hosts = _.uniqBy(_.flatten(_.map(items, 'hosts')), 'hostid');  //uniqBy is needed to deduplicate\n\n  return _.map(grouped_history, (hist, itemid) => {\n    const item = _.find(items, { 'itemid': itemid }) as any;\n    let alias = item.name;\n\n    // Add scopedVars for using in alias functions\n    const scopedVars: any = {\n      '__zbx_item': { value: item.name },\n      '__zbx_item_name': { value: item.name },\n      '__zbx_item_key': { value: item.key_ },\n      '__zbx_item_interval': { value: item.delay },\n    };\n\n    if (_.keys(hosts).length > 0) {\n      const host = _.find(hosts, { 'hostid': item.hostid });\n      scopedVars['__zbx_host'] = { value: host.host };\n      scopedVars['__zbx_host_name'] = { value: host.name };\n\n      // Only add host when multiple hosts selected\n      if (_.keys(hosts).length > 1 && addHostName) {\n        alias = host.name + \": \" + alias;\n      }\n    }\n\n    return {\n      target: alias,\n      datapoints: _.map(hist, convertPointCallback),\n      scopedVars,\n      item\n    };\n  });\n}\n\nexport function seriesToDataFrame(timeseries, target: ZabbixMetricsQuery, valueMappings?: any[], fieldType?: FieldType): MutableDataFrame {\n  const { datapoints, scopedVars, target: seriesName, item } = timeseries;\n\n  const timeFiled: Field = {\n    name: TIME_SERIES_TIME_FIELD_NAME,\n    type: FieldType.time,\n    config: {\n      custom: {}\n    },\n    values: new ArrayVector<number>(datapoints.map(p => p[c.DATAPOINT_TS])),\n  };\n\n  let values: ArrayVector<number> | ArrayVector<string>;\n  if (fieldType === FieldType.string) {\n    values = new ArrayVector<string>(datapoints.map(p => p[c.DATAPOINT_VALUE]));\n  } else {\n    values = new ArrayVector<number>(datapoints.map(p => p[c.DATAPOINT_VALUE]));\n  }\n\n  const valueFiled: Field = {\n    name: TIME_SERIES_VALUE_FIELD_NAME,\n    type: fieldType ?? FieldType.number,\n    labels: {},\n    config: {\n      displayNameFromDS: seriesName,\n      custom: {}\n    },\n    values,\n  };\n\n  if (scopedVars) {\n    timeFiled.config.custom = {\n      itemInterval: scopedVars['__zbx_item_interval']?.value,\n    };\n\n    valueFiled.labels = {\n      host: scopedVars['__zbx_host_name']?.value,\n      item: scopedVars['__zbx_item']?.value,\n      item_key: scopedVars['__zbx_item_key']?.value,\n    };\n\n    valueFiled.config.custom = {\n      itemInterval: scopedVars['__zbx_item_interval']?.value,\n    };\n  }\n\n  if (item) {\n    // Try to use unit configured in Zabbix\n    const unit = utils.convertZabbixUnit(item.units);\n    if (unit) {\n      console.log(`Datasource: unit detected: ${unit} (${item.units})`);\n      valueFiled.config.unit = unit;\n\n      if (unit === 'percent') {\n        valueFiled.config.min = 0;\n        valueFiled.config.max = 100;\n      }\n    }\n\n    // Try to use value mapping from Zabbix\n    const mappings = utils.getValueMapping(item, valueMappings);\n    if (mappings && target.options?.useZabbixValueMapping) {\n      console.log(`Datasource: using Zabbix value mapping`);\n      valueFiled.config.mappings = mappings;\n    }\n  }\n\n  const fields: Field[] = [timeFiled, valueFiled];\n\n  const frame: DataFrame = {\n    name: seriesName,\n    refId: target.refId,\n    fields,\n    length: datapoints.length,\n  };\n\n  const mutableFrame = new MutableDataFrame(frame);\n  return mutableFrame;\n}\n\n// Converts DataResponse to the format which backend works with (for data processing)\nexport function dataResponseToTimeSeries(response: DataFrameJSON[], items, request) {\n  const series = [];\n  if (response.length === 0) {\n    return [];\n  }\n\n  for (const frameJSON of response) {\n    const frame = dataFrameFromJSON(frameJSON);\n    const { timeField, timeIndex } = getTimeField(frame);\n    for (let i = 0; i < frame.fields.length; i++) {\n      const field = frame.fields[i];\n      if (i === timeIndex || !field.values || !field.values.length) {\n        continue;\n      }\n\n      const s = [];\n      for (let j = 0; j < field.values.length; j++) {\n        const v = field.values.get(j);\n        if (v !== null) {\n          s.push({ time: timeField.values.get(j) / 1000, value: v });\n        }\n      }\n\n      const itemid = field.name;\n      const item = _.find(items, { 'itemid': itemid });\n\n      // Convert interval to nanoseconds in order to unmarshall it on the backend to time.Duration\n      let interval = request.intervalMs * 1000000;\n      const itemInterval = utils.parseItemInterval(item.delay) * 1000000;\n      // Provided interval is using for the data alignment, so it shouldn't be less than item update interval\n      interval = Math.max(interval, itemInterval);\n      if (interval === 0) {\n        interval = null;\n      }\n\n      let seriesName = item.name;\n      if (item.hosts?.length > 0) {\n        seriesName = `${item.hosts[0].name}: ${seriesName}`;\n      }\n\n      const timeSeriesData = {\n        ts: s,\n        meta: {\n          name: seriesName,\n          item,\n          interval,\n        }\n      };\n\n      series.push(timeSeriesData);\n    }\n  }\n\n  return series;\n}\n\n// Get units from Zabbix\nexport function convertZabbixUnits(response: DataQueryResponse) {\n  for (let i = 0; i < response.data.length; i++) {\n    const frame: DataFrame = response.data[i];\n    for (const field of frame.fields) {\n      const zabbixUnits = field.config.custom?.units;\n      if (zabbixUnits) {\n        const unit = utils.convertZabbixUnit(zabbixUnits);\n        if (unit) {\n          field.config.unit = unit;\n\n          if (unit === 'percent') {\n            field.config.min = 0;\n            field.config.max = 100;\n          }\n        }\n      }\n    }\n  }\n  return response;\n}\n\nexport function itServiceResponseToTimeSeries(response: any, interval) {\n  const series = [];\n  if (response.length === 0) {\n    return [];\n  }\n\n  for (const s of response) {\n    const ts = [];\n\n    if (!s.datapoints) {\n      continue;\n    }\n\n    const dp = s.datapoints;\n    for (let i = 0; i < dp.length; i++) {\n      ts.push({ time: dp[i][1] / 1000, value: dp[i][0] });\n    }\n\n    // Convert interval to nanoseconds in order to unmarshall it on the backend to time.Duration\n    let intervalNS = utils.parseItemInterval(interval) * 1000000;\n    if (intervalNS === 0) {\n      intervalNS = null;\n    }\n\n    const timeSeriesData = {\n      ts: ts,\n      meta: {\n        name: s.target,\n        interval: null,\n        item: {},\n      }\n    };\n\n    series.push(timeSeriesData);\n  }\n\n  return series;\n}\n\nexport function isConvertibleToWide(data: DataFrame[]): boolean {\n  if (!data || data.length < 2) {\n    return false;\n  }\n\n  const first = data[0].fields.find(f => f.type === FieldType.time);\n  if (!first) {\n    return false;\n  }\n\n  for (let i = 1; i < data.length; i++) {\n    const timeField = data[i].fields.find(f => f.type === FieldType.time);\n\n    for (let j = 0; j < Math.min(data.length, 2); j++) {\n      if (timeField.values.get(j) !== first.values.get(j)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nexport function alignFrames(data: MutableDataFrame[]): MutableDataFrame[] {\n  if (!data || data.length === 0) {\n    return data;\n  }\n\n  // Get oldest time stamp for all frames\n  let minTimestamp = data[0].fields.find(f => f.name === TIME_SERIES_TIME_FIELD_NAME).values.get(0);\n  for (let i = 0; i < data.length; i++) {\n    const timeField = data[i].fields.find(f => f.name === TIME_SERIES_TIME_FIELD_NAME);\n    const firstTs = timeField.values.get(0);\n    if (firstTs < minTimestamp) {\n      minTimestamp = firstTs;\n    }\n  }\n\n  for (let i = 0; i < data.length; i++) {\n    const frame = data[i];\n    const timeField = frame.fields.find(f => f.name === TIME_SERIES_TIME_FIELD_NAME);\n    const valueField = frame.fields.find(f => f.name === TIME_SERIES_VALUE_FIELD_NAME);\n    const firstTs = timeField.values.get(0);\n\n    if (firstTs > minTimestamp) {\n      console.log('Data frames: adding missing points');\n      let timestamps = timeField.values.toArray();\n      let values = valueField.values.toArray();\n      const missingTimestamps = [];\n      const missingValues = [];\n      const frameInterval: number = timeField.config.custom?.itemInterval;\n      for (let j = minTimestamp; j < firstTs; j += frameInterval) {\n        missingTimestamps.push(j);\n        missingValues.push(null);\n      }\n\n      timestamps = missingTimestamps.concat(timestamps);\n      values = missingValues.concat(values);\n      timeField.values = new ArrayVector(timestamps);\n      valueField.values = new ArrayVector(values);\n    }\n  }\n\n  return data;\n}\n\nexport function convertToWide(data: MutableDataFrame[]): DataFrame[] {\n  const maxLengthIndex = getLongestFrame(data);\n  const timeField = data[maxLengthIndex].fields.find(f => f.type === FieldType.time);\n  if (!timeField) {\n    return [];\n  }\n\n  const fields: MutableField[] = [timeField];\n\n  for (let i = 0; i < data.length; i++) {\n    const valueField = data[i].fields.find(f => f.name === TIME_SERIES_VALUE_FIELD_NAME);\n    if (!valueField) {\n      continue;\n    }\n\n    valueField.name = data[i].name;\n\n    // Add null value to the end if series is shifted by 1 time frame\n    if (timeField.values.length - valueField.values.length === 1) {\n      valueField.values.add(null);\n    }\n    fields.push(valueField);\n  }\n\n  const frame: DataFrame = {\n    name: \"wide\",\n    fields,\n    length: timeField.values.length,\n  };\n\n  return [frame];\n}\n\nfunction getLongestFrame(data: MutableDataFrame[]): number {\n  let maxLengthIndex = 0;\n  let maxLength = 0;\n  for (let i = 0; i < data.length; i++) {\n    const timeField = data[i].fields.find(f => f.type === FieldType.time);\n    if (timeField.values.length > maxLength) {\n      maxLength = timeField.values.length;\n      maxLengthIndex = i;\n    }\n  }\n\n  return maxLengthIndex;\n}\n\nfunction sortTimeseries(timeseries) {\n  // Sort trend data, issue #202\n  _.forEach(timeseries, series => {\n    series.datapoints = _.sortBy(series.datapoints, point => point[c.DATAPOINT_TS]);\n  });\n  return timeseries;\n}\n\nfunction handleHistory(history, items, addHostName = true) {\n  return convertHistory(history, items, addHostName, convertHistoryPoint);\n}\n\nfunction handleTrends(history, items, valueType, addHostName = true) {\n  const convertPointCallback = _.partial(convertTrendPoint, valueType);\n  return convertHistory(history, items, addHostName, convertPointCallback);\n}\n\nfunction handleText(history, items, target, addHostName = true) {\n  const convertTextCallback = _.partial(convertText, target);\n  return convertHistory(history, items, addHostName, convertTextCallback);\n}\n\nfunction handleHistoryAsTable(history, items, target) {\n  const table: any = new TableModel();\n  table.addColumn({ text: 'Host' });\n  table.addColumn({ text: 'Item' });\n  table.addColumn({ text: 'Key' });\n  table.addColumn({ text: 'Last value' });\n\n  const grouped_history = _.groupBy(history, 'itemid');\n  _.each(items, (item) => {\n    const itemHistory = grouped_history[item.itemid] || [];\n    const lastPoint = _.last(itemHistory);\n    let lastValue = lastPoint ? lastPoint.value : null;\n\n    if (target.options.skipEmptyValues && (!lastValue || lastValue === '')) {\n      return;\n    }\n\n    // Regex-based extractor\n    if (target.textFilter) {\n      lastValue = extractText(lastValue, target.textFilter, target.useCaptureGroups);\n    }\n\n    let host: any = _.first(item.hosts);\n    host = host ? host.name : \"\";\n\n    table.rows.push([\n      host, item.name, item.key_, lastValue\n    ]);\n  });\n\n  return table;\n}\n\nfunction convertText(target, point) {\n  let value = point.value;\n\n  // Regex-based extractor\n  if (target.textFilter) {\n    value = extractText(point.value, target.textFilter, target.useCaptureGroups);\n  }\n\n  return [\n    value,\n    point.clock * 1000 + Math.round(point.ns / 1000000)\n  ];\n}\n\nfunction extractText(str, pattern, useCaptureGroups) {\n  const extractPattern = new RegExp(pattern);\n  const extractedValue = extractPattern.exec(str);\n  if (extractedValue) {\n    if (useCaptureGroups) {\n      return extractedValue[1];\n    } else {\n      return extractedValue[0];\n    }\n  }\n  return \"\";\n}\n\nfunction handleSLAResponse(itservice, slaProperty, slaObject) {\n  const targetSLA = slaObject[itservice.serviceid].sla;\n  if (slaProperty.property === 'status') {\n    const targetStatus = parseInt(slaObject[itservice.serviceid].status, 10);\n    return {\n      target: itservice.name + ' ' + slaProperty.name,\n      datapoints: [\n        [targetStatus, targetSLA[0].to * 1000]\n      ]\n    };\n  } else {\n    let i;\n    const slaArr = [];\n    for (i = 0; i < targetSLA.length; i++) {\n      if (i === 0) {\n        slaArr.push([targetSLA[i][slaProperty.property], targetSLA[i].from * 1000]);\n      }\n      slaArr.push([targetSLA[i][slaProperty.property], targetSLA[i].to * 1000]);\n    }\n    return {\n      target: itservice.name + ' ' + slaProperty.name,\n      datapoints: slaArr\n    };\n  }\n}\n\nfunction handleTriggersResponse(triggers, groups, timeRange) {\n  if (!_.isArray(triggers)) {\n    let triggersCount = null;\n    try {\n      triggersCount = Number(triggers);\n    } catch (err) {\n      console.log(\"Error when handling triggers count: \", err);\n    }\n    return {\n      target: \"triggers count\",\n      datapoints: [\n        [triggersCount, timeRange[1] * 1000]\n      ]\n    };\n  } else {\n    const stats = getTriggerStats(triggers);\n    const groupNames = _.map(groups, 'name');\n    const table: any = new TableModel();\n    table.addColumn({ text: 'Host group' });\n    _.each(_.orderBy(c.TRIGGER_SEVERITY, ['val'], ['desc']), (severity) => {\n      table.addColumn({ text: severity.text });\n    });\n    _.each(stats, (severity_stats, group) => {\n      if (_.includes(groupNames, group)) {\n        let row = _.map(_.orderBy(_.toPairs(severity_stats), (s) => s[0], ['desc']), (s) => s[1]);\n        row = _.concat([group], ...row);\n        table.rows.push(row);\n      }\n    });\n    return table;\n  }\n}\n\nfunction getTriggerStats(triggers) {\n  const groups = _.uniq(_.flattenDeep(_.map(triggers, (trigger) => _.map(trigger.groups, 'name'))));\n  // let severity = _.map(c.TRIGGER_SEVERITY, 'text');\n  const stats = {};\n  _.each(groups, (group) => {\n    stats[group] = { 0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0 }; // severity:count\n  });\n  _.each(triggers, (trigger) => {\n    _.each(trigger.groups, (group) => {\n      stats[group.name][trigger.priority]++;\n    });\n  });\n  return stats;\n}\n\nfunction convertHistoryPoint(point) {\n  // Value must be a number for properly work\n  return [\n    Number(point.value),\n    point.clock * 1000 + Math.round(point.ns / 1000000)\n  ];\n}\n\nfunction convertTrendPoint(valueType, point) {\n  let value;\n  switch (valueType) {\n    case \"min\":\n      value = point.value_min;\n      break;\n    case \"max\":\n      value = point.value_max;\n      break;\n    case \"avg\":\n      value = point.value_avg;\n      break;\n    case \"sum\":\n      value = point.value_avg * point.num;\n      break;\n    case \"count\":\n      value = point.num;\n      break;\n    default:\n      value = point.value_avg;\n  }\n\n  return [\n    Number(value),\n    point.clock * 1000\n  ];\n}\n\nexport default {\n  handleHistory,\n  convertHistory,\n  handleTrends,\n  handleText,\n  handleHistoryAsTable,\n  handleSLAResponse,\n  handleTriggersResponse,\n  sortTimeseries,\n  seriesToDataFrame,\n  dataResponseToTimeSeries,\n  itServiceResponseToTimeSeries,\n  isConvertibleToWide,\n  convertToWide,\n  alignFrames,\n  convertZabbixUnits,\n};\n","import _ from 'lodash';\nimport * as utils from '../datasource-zabbix/utils';\nimport { DataFrame, Field, FieldType, ArrayVector } from '@grafana/data';\nimport { ZBXProblem, ZBXTrigger, ProblemDTO, ZBXEvent } from './types';\n\nexport function joinTriggersWithProblems(problems: ZBXProblem[], triggers: ZBXTrigger[]): ProblemDTO[] {\n  const problemDTOList: ProblemDTO[] = [];\n\n  for (let i = 0; i < problems.length; i++) {\n    const p = problems[i];\n    const triggerId = Number(p.objectid);\n    const t = triggers[triggerId];\n\n    if (t) {\n      const problemDTO: ProblemDTO = {\n        timestamp: Number(p.clock),\n        triggerid: p.objectid,\n        eventid: p.eventid,\n        name: p.name,\n        severity: p.severity,\n        acknowledged: p.acknowledged,\n        acknowledges: p.acknowledges,\n        tags: p.tags,\n        suppressed: p.suppressed,\n        suppression_data: p.suppression_data,\n        description: p.name || t.description,\n        comments: t.comments,\n        value: t.value,\n        groups: t.groups,\n        hosts: t.hosts,\n        items: t.items,\n        alerts: t.alerts,\n        url: t.url,\n        expression: t.expression,\n        correlation_mode: t.correlation_mode,\n        correlation_tag: t.correlation_tag,\n        manual_close: t.manual_close,\n        state: t.state,\n        error: t.error,\n        opdata: t.opdata,\n      };\n\n      problemDTOList.push(problemDTO);\n    }\n\n  }\n\n  return problemDTOList;\n}\n\ninterface JoinOptions {\n  valueFromEvent?: boolean;\n}\n\nexport function joinTriggersWithEvents(events: ZBXEvent[], triggers: ZBXTrigger[], options?: JoinOptions): ProblemDTO[] {\n  const { valueFromEvent } = options;\n  const problemDTOList: ProblemDTO[] = [];\n\n  for (let i = 0; i < events.length; i++) {\n    const e = events[i];\n    const triggerId = Number(e.objectid);\n    const t = triggers[triggerId];\n\n    if (t) {\n      const problemDTO: ProblemDTO = {\n        value: valueFromEvent ? e.value : t.value,\n        timestamp: Number(e.clock),\n        triggerid: e.objectid,\n        eventid: e.eventid,\n        name: e.name,\n        severity: e.severity,\n        acknowledged: e.acknowledged,\n        acknowledges: e.acknowledges,\n        tags: e.tags,\n        suppressed: e.suppressed,\n        description: t.description,\n        comments: t.comments,\n        groups: t.groups,\n        hosts: t.hosts,\n        items: t.items,\n        alerts: t.alerts,\n        url: t.url,\n        expression: t.expression,\n        correlation_mode: t.correlation_mode,\n        correlation_tag: t.correlation_tag,\n        manual_close: t.manual_close,\n        state: t.state,\n        error: t.error,\n      };\n\n      problemDTOList.push(problemDTO);\n    }\n\n  }\n\n  return problemDTOList;\n}\n\nexport function setMaintenanceStatus(triggers) {\n  _.each(triggers, (trigger) => {\n    const maintenance_status = _.some(trigger.hosts, (host) => host.maintenance_status === '1');\n    trigger.maintenance = maintenance_status;\n  });\n  return triggers;\n}\n\nexport function setAckButtonStatus(triggers, showAckButton) {\n  _.each(triggers, (trigger) => {\n    trigger.showAckButton = showAckButton;\n  });\n  return triggers;\n}\n\nexport function addTriggerDataSource(triggers, target) {\n  _.each(triggers, (trigger) => {\n    trigger.datasource = target.datasource;\n  });\n  return triggers;\n}\n\nexport function addTriggerHostProxy(triggers, proxies) {\n  triggers.forEach(trigger => {\n    if (trigger.hosts && trigger.hosts.length) {\n      const host = trigger.hosts[0];\n      if (host.proxy_hostid !== '0') {\n        const hostProxy = proxies[host.proxy_hostid];\n        host.proxy = hostProxy ? hostProxy.host : '';\n      }\n    }\n  });\n  return triggers;\n}\n\nexport function filterTriggersPre(triggerList, replacedTarget) {\n  // Filter triggers by description\n  const triggerFilter = replacedTarget.trigger.filter;\n  if (triggerFilter) {\n    triggerList = filterTriggers(triggerList, triggerFilter);\n  }\n\n  // Filter by maintenance status\n  if (!replacedTarget.options.hostsInMaintenance) {\n    triggerList = _.filter(triggerList, (trigger) => !trigger.maintenance);\n  }\n\n  return triggerList;\n}\n\nfunction filterTriggers(triggers, triggerFilter) {\n  if (utils.isRegex(triggerFilter)) {\n    return _.filter(triggers, trigger => {\n      return utils.buildRegex(triggerFilter).test(trigger.description);\n    });\n  } else {\n    return _.filter(triggers, trigger => {\n      return trigger.description === triggerFilter;\n    });\n  }\n}\n\nexport function sortProblems(problems: ProblemDTO[], target) {\n  if (target.options?.sortProblems === 'severity') {\n    problems = _.orderBy(problems, ['severity', 'eventid'], ['desc', 'desc']);\n  } else if (target.options?.sortProblems === 'lastchange') {\n    problems = _.orderBy(problems, ['timestamp', 'eventid'], ['desc', 'desc']);\n  }\n  return problems;\n}\n\nexport function toDataFrame(problems: any[]): DataFrame {\n  const problemsField: Field<any> = {\n    name: 'Problems',\n    type: FieldType.other,\n    values: new ArrayVector(problems),\n    config: {\n      custom: {\n        type: 'problems',\n      },\n    },\n  };\n\n  const response: DataFrame = {\n    name: 'problems',\n    fields: [problemsField],\n    length: problems.length,\n  };\n\n  return response;\n}\n\nconst problemsHandler = {\n  addTriggerDataSource,\n  addTriggerHostProxy,\n  setMaintenanceStatus,\n  setAckButtonStatus,\n  filterTriggersPre,\n  sortProblems,\n  toDataFrame,\n  joinTriggersWithProblems,\n  joinTriggersWithEvents,\n};\n\nexport default problemsHandler;\n","const FORCE_CACHE_UPDATE = 'forceCacheUpdate';\n\n/**\n * This module allows to deduplicate function calls with the same params and\n * cache result of function call.\n */\n\nexport class CachingProxy {\n  cacheEnabled: boolean;\n  ttl: number;\n  cache: any;\n  promises: any;\n\n  constructor(cacheOptions) {\n    this.cacheEnabled = cacheOptions.enabled;\n    this.ttl          = cacheOptions.ttl || 600000; // 10 minutes by default\n\n    // Internal objects for data storing\n    this.cache = {};\n    this.promises = {};\n  }\n\n  /**\n   * Check that result is present in the cache and is up to date or send request otherwise.\n   */\n  cacheRequest(func, funcName, funcScope) {\n    return cacheRequest(func, funcName, funcScope, this);\n  }\n\n  /**\n   * Wrap request to prevent multiple calls with same params when request is waiting for response.\n   */\n  proxify(func, funcName, funcScope) {\n    if (!this.promises[funcName]) {\n      this.promises[funcName] = {};\n    }\n    const promiseKeeper = this.promises[funcName];\n    return callOnce(func, promiseKeeper, funcScope);\n  }\n\n  proxifyWithCache(func, funcName, funcScope) {\n    const proxified = this.proxify(func, funcName, funcScope);\n    return this.cacheRequest(proxified, funcName, funcScope);\n  }\n\n  /**\n   * Check for cache object expiration\n   * Normal expiration time is set to 10 minutes but some queries need short expiration of just 1 minute\n   */\n  _isExpired(cacheObject, hasShortExpiration) {\n    if (cacheObject) {\n      const object_age = Date.now() - cacheObject.timestamp;\n      return !(cacheObject.timestamp && object_age < (hasShortExpiration ? 60 * 1000 : this.ttl));\n    } else {\n      return true;\n    }\n  }\n}\n\n/**\n * Wrap request to prevent multiple calls\n * with same params when waiting for result.\n */\nfunction callOnce(func, promiseKeeper, funcScope) {\n  // tslint:disable-next-line: only-arrow-functions\n  return function() {\n    const hash = getRequestHash(arguments);\n    if (!promiseKeeper[hash]) {\n      promiseKeeper[hash] = Promise.resolve(\n        func.apply(funcScope, arguments)\n        .then(result => {\n          promiseKeeper[hash] = null;\n          return result;\n        }).catch(err => {\n          promiseKeeper[hash] = null;\n          throw err;\n        })\n      );\n    }\n    return promiseKeeper[hash];\n  };\n}\n\nfunction cacheRequest(func, funcName, funcScope, self) {\n  // tslint:disable-next-line: only-arrow-functions\n  return function() {\n    if (!self.cache[funcName]) {\n      self.cache[funcName] = {};\n    }\n\n    const cacheObject = self.cache[funcName];\n    const hash = getRequestHash(arguments);\n    // Querying getGroupsWithHosts and getMaintenances need a short expiration time\n    // Receiving FORCE_CACHE_UPDATE as an argument bypasses the cache \n    const hasShortExpiration = funcName === 'getGroupsWithHosts' || funcName === 'getMaintenances';\n    if (self.cacheEnabled && !self._isExpired(cacheObject[hash], hasShortExpiration) && arguments[0] !== FORCE_CACHE_UPDATE) {\n      return Promise.resolve(cacheObject[hash].value);\n    } else {\n      return func.apply(funcScope, arguments)\n      .then(result => {\n        if (result !== undefined) {\n          cacheObject[hash] = {\n            value: result,\n            timestamp: Date.now()\n          };\n        }\n        return result;\n      });\n    }\n  };\n}\n\nfunction getRequestHash(args) {\n  const argsJson = JSON.stringify(args);\n  return getHash(argsJson);\n}\n\nfunction getHash(str: string): number {\n  let hash = 0, i, chr, len;\n  if (str.length !== 0) {\n    for (i = 0, len = str.length; i < len; i++) {\n      chr   = str.charCodeAt(i);\n      hash  = ((hash << 5) - hash) + chr;\n      hash |= 0; // Convert to 32bit integer\n    }\n  }\n  return hash;\n}\n","import _ from 'lodash';\nimport { getDataSourceSrv } from '@grafana/runtime';\n\nexport const DEFAULT_QUERY_LIMIT = 10000;\n\nexport const HISTORY_TO_TABLE_MAP = {\n  '0': 'history',\n  '1': 'history_str',\n  '2': 'history_log',\n  '3': 'history_uint',\n  '4': 'history_text'\n};\n\nexport const TREND_TO_TABLE_MAP = {\n  '0': 'trends',\n  '3': 'trends_uint'\n};\n\nexport const consolidateByFunc = {\n  'avg': 'AVG',\n  'min': 'MIN',\n  'max': 'MAX',\n  'sum': 'SUM',\n  'count': 'COUNT'\n};\n\nexport const consolidateByTrendColumns = {\n  'avg': 'value_avg',\n  'min': 'value_min',\n  'max': 'value_max',\n  'sum': 'num*value_avg' // sum of sums inside the one-hour trend period\n};\n\nexport interface IDBConnector {\n  getHistory(): any;\n\n  getTrends(): any;\n\n  testDataSource(): any;\n}\n\n/**\n * Base class for external history database connectors. Subclasses should implement `getHistory()`, `getTrends()` and\n * `testDataSource()` methods, which describe how to fetch data from source other than Zabbix API.\n */\nexport class DBConnector {\n  protected datasourceId: any;\n  private datasourceName: any;\n  protected datasourceTypeId: any;\n  private datasourceTypeName: any;\n\n  constructor(options) {\n    this.datasourceId = options.datasourceId;\n    this.datasourceName = options.datasourceName;\n    this.datasourceTypeId = null;\n    this.datasourceTypeName = null;\n  }\n\n  static loadDatasource(dsId, dsName) {\n    if (!dsName && dsId !== undefined) {\n      const ds = _.find(getDataSourceSrv().getList(), { 'id': dsId });\n      if (!ds) {\n        return Promise.reject(`Data Source with ID ${dsId} not found`);\n      }\n      dsName = ds.name;\n    }\n    if (dsName) {\n      return getDataSourceSrv().get(dsName);\n    } else {\n      return Promise.reject(`Data Source name should be specified`);\n    }\n  }\n\n  loadDBDataSource() {\n    return DBConnector.loadDatasource(this.datasourceId, this.datasourceName)\n    .then(ds => {\n      this.datasourceTypeId = ds.meta.id;\n      this.datasourceTypeName = ds.meta.name;\n      if (!this.datasourceName) {\n        this.datasourceName = ds.name;\n      }\n      if (!this.datasourceId) {\n        this.datasourceId = ds.id;\n      }\n      return ds;\n    });\n  }\n}\n\nexport default {\n  DBConnector,\n  DEFAULT_QUERY_LIMIT,\n  HISTORY_TO_TABLE_MAP,\n  TREND_TO_TABLE_MAP,\n  consolidateByFunc,\n  consolidateByTrendColumns\n};\n","import _ from 'lodash';\nimport semver from 'semver';\nimport kbn from 'grafana/app/core/utils/kbn';\nimport * as utils from '../../../utils';\nimport { MIN_SLA_INTERVAL, ZBX_ACK_ACTION_ADD_MESSAGE, ZBX_ACK_ACTION_NONE } from '../../../constants';\nimport { ShowProblemTypes, ZBXProblem } from '../../../types';\nimport { APIExecuteScriptResponse, JSONRPCError, ZBXScript } from './types';\nimport { BackendSrvRequest, getBackendSrv } from '@grafana/runtime';\nimport { rangeUtil } from '@grafana/data';\n\nconst DEFAULT_ZABBIX_VERSION = '3.0.0';\n\n// Backward compatibility. Since Grafana 7.2 roundInterval() func was moved to @grafana/data package\nconst roundInterval: (interval: number) => number = rangeUtil?.roundInterval || kbn.roundInterval || kbn.round_interval;\n\n/**\n * Zabbix API Wrapper.\n * Creates Zabbix API instance with given parameters (url, credentials and other).\n * Wraps API calls and provides high-level methods.\n */\nexport class ZabbixAPIConnector {\n  backendAPIUrl: string;\n  requestOptions: { basicAuth: any; withCredentials: boolean; };\n  getTrend: (items: any, timeFrom: any, timeTill: any) => Promise<any[]>;\n  version: string;\n  getVersionPromise: Promise<string>;\n  datasourceId: number;\n\n  constructor(basicAuth: any, withCredentials: boolean, datasourceId: number) {\n    this.datasourceId = datasourceId;\n    this.backendAPIUrl = `/api/datasources/${this.datasourceId}/resources/zabbix-api`;\n\n    this.requestOptions = {\n      basicAuth: basicAuth,\n      withCredentials: withCredentials\n    };\n\n    this.getTrend = this.getTrend_ZBXNEXT1193;\n    //getTrend = getTrend_30;\n\n    this.initVersion();\n  }\n\n  //////////////////////////\n  // Core method wrappers //\n  //////////////////////////\n\n  request(method: string, params?: any) {\n    if (!this.version) {\n      return this.initVersion().then(() => this.request(method, params));\n    }\n\n    return this.backendAPIRequest(method, params);\n  }\n\n  async backendAPIRequest(method: string, params: any = {}) {\n    const requestOptions: BackendSrvRequest = {\n      url: this.backendAPIUrl,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      hideFromInspector: false,\n      data: {\n        datasourceId: this.datasourceId,\n        method,\n        params,\n      },\n    };\n\n    // Set request options for basic auth\n    if (this.requestOptions.basicAuth || this.requestOptions.withCredentials) {\n      requestOptions.withCredentials = true;\n    }\n    if (this.requestOptions.basicAuth) {\n      requestOptions.headers.Authorization = this.requestOptions.basicAuth;\n    }\n\n    const response = await getBackendSrv().fetch<any>(requestOptions).toPromise();\n    return response?.data?.result;\n  }\n\n  /**\n   * Get Zabbix API version\n   */\n  getVersion() {\n    return this.backendAPIRequest('apiinfo.version');\n  }\n\n  initVersion(): Promise<string> {\n    if (!this.getVersionPromise) {\n      this.getVersionPromise = Promise.resolve(\n        this.getVersion().then(version => {\n          if (version) {\n            console.log(`Zabbix version detected: ${version}`);\n          } else {\n            console.log(`Failed to detect Zabbix version, use default ${DEFAULT_ZABBIX_VERSION}`);\n          }\n\n          this.version = version || DEFAULT_ZABBIX_VERSION;\n          this.getVersionPromise = null;\n          return version;\n        })\n      );\n    }\n    return this.getVersionPromise;\n  }\n\n  isZabbix54OrHigher() {\n    return semver.gte(this.version, '5.4.0');\n  }\n\n  ////////////////////////////////\n  // Zabbix API method wrappers //\n  ////////////////////////////////\n\n  acknowledgeEvent(eventid: string, message: string, action?: number, severity?: number) {\n    if (!action) {\n      action = semver.gte(this.version, '4.0.0') ? ZBX_ACK_ACTION_ADD_MESSAGE : ZBX_ACK_ACTION_NONE;\n    }\n\n    const params: any = {\n      eventids: eventid,\n      message: message,\n      action: action\n    };\n\n    if (severity !== undefined) {\n      params.severity = severity;\n    }\n\n    return this.request('event.acknowledge', params);\n  }\n\n  getGroupsWithHosts() {\n    // Adding random limit to get past Zabbix server cache, this query is cached in datasource instead\n    const randomLimit = Math.floor(Math.random() * 1000) + 1000;\n    const params = {\n      selectHosts: ['hostid', 'name', 'maintenance_status'],\n      output: ['groupid', 'name'],\n      limit: randomLimit\n    };\n\n    return this.request('hostgroup.get', params);\n  }\n\n  getGroups() {\n    const params = {\n      output: ['name'],\n      sortfield: 'name',\n      real_hosts: true\n    };\n\n    return this.request('hostgroup.get', params);\n  }\n\n  getHosts(groupids) {\n    const params: any = {\n      output: ['name', 'host'],\n      sortfield: 'name'\n    };\n    if (groupids) {\n      params.groupids = groupids;\n    }\n\n    return this.request('host.get', params);\n  }\n\n  async getApps(hostids): Promise<any[]> {\n    if (this.isZabbix54OrHigher()) {\n      return [];\n    }\n\n    const params = {\n      output: 'extend',\n      hostids: hostids\n    };\n\n    return this.request('application.get', params);\n  }\n\n  /**\n   * Get Zabbix items\n   * @param  {[type]} hostids  host ids\n   * @param  {[type]} appids   application ids\n   * @param  {String} itemtype 'num' or 'text'\n   * @return {[type]}          array of items\n   */\n  getItems(hostids, appids, itemtype) {\n    const params: any = {\n      output: [\n        'name',\n        'key_',\n        'value_type',\n        'hostid',\n        'status',\n        'state',\n        'units',\n        'valuemapid',\n        'delay'\n      ],\n      sortfield: 'name',\n      webitems: true,\n      filter: {},\n      selectHosts: ['hostid', 'name', 'host']\n    };\n    if (hostids) {\n      params.hostids = hostids;\n    }\n    if (appids) {\n      params.applicationids = appids;\n    }\n    if (itemtype === 'num') {\n      // Return only numeric metrics\n      params.filter.value_type = [0, 3];\n    }\n    if (itemtype === 'text') {\n      // Return only text metrics\n      params.filter.value_type = [1, 2, 4];\n    }\n\n    if (this.isZabbix54OrHigher()) {\n      params.selectTags = 'extend';\n    }\n\n    return this.request('item.get', params)\n    .then(utils.expandItems);\n  }\n\n  getItemsByIDs(itemids) {\n    const params: any = {\n      itemids: itemids,\n      output: [\n        'name',\n        'key_',\n        'value_type',\n        'hostid',\n        'status',\n        'state',\n        'units',\n        'valuemapid',\n        'delay'\n      ],\n      webitems: true,\n      selectHosts: ['hostid', 'name']\n    };\n\n    if (this.isZabbix54OrHigher()) {\n      params.selectTags = 'extend';\n    }\n\n    return this.request('item.get', params)\n    .then(items => utils.expandItems(items));\n  }\n\n  getHostsByIDs(hostids) {\n    const params: any = {\n      hostids: hostids,\n      selectParentTemplates: ['name', 'templateid'],\n      output: ['name', 'hostid']\n    };\n\n    return this.request('host.get', params);\n  }\n\n  getMacros(hostids) {\n    const params = {\n      output: 'extend',\n      hostids: hostids\n    };\n\n    return this.request('usermacro.get', params);\n  }\n\n  getGlobalMacros() {\n    const params = {\n      output: 'extend',\n      globalmacro: true\n    };\n\n    return this.request('usermacro.get', params);\n  }\n\n  getLastValue(itemid) {\n    const params = {\n      output: ['lastvalue'],\n      itemids: itemid\n    };\n    return this.request('item.get', params)\n    .then(items => items.length ? items[0].lastvalue : null);\n  }\n\n  /**\n   * Perform history query from Zabbix API\n   *\n   * @param  {Array}  items       Array of Zabbix item objects\n   * @param  {Number} timeFrom   Time in seconds\n   * @param  {Number} timeTill   Time in seconds\n   * @return {Array}  Array of Zabbix history objects\n   */\n  getHistory(items, timeFrom, timeTill) {\n\n    // Group items by value type and perform request for each value type\n    const grouped_items = _.groupBy(items, 'value_type');\n    const promises = _.map(grouped_items, (items, value_type) => {\n      const itemids = _.map(items, 'itemid');\n      const params: any = {\n        output: 'extend',\n        history: value_type,\n        itemids: itemids,\n        sortfield: 'clock',\n        sortorder: 'ASC',\n        time_from: timeFrom\n      };\n\n      // Relative queries (e.g. last hour) don't include an end time\n      if (timeTill) {\n        params.time_till = timeTill;\n      }\n\n      return this.request('history.get', params);\n    });\n\n    return Promise.all(promises).then(_.flatten);\n  }\n\n  /**\n   * Perform trends query from Zabbix API\n   * Use trends api extension from ZBXNEXT-1193 patch.\n   *\n   * @param  {Array}  items       Array of Zabbix item objects\n   * @param  {Number} time_from   Time in seconds\n   * @param  {Number} time_till   Time in seconds\n   * @return {Array}  Array of Zabbix trend objects\n   */\n  getTrend_ZBXNEXT1193(items, timeFrom, timeTill) {\n\n    // Group items by value type and perform request for each value type\n    const grouped_items = _.groupBy(items, 'value_type');\n    const promises = _.map(grouped_items, (items, value_type) => {\n      const itemids = _.map(items, 'itemid');\n      const params: any = {\n        output: 'extend',\n        trend: value_type,\n        itemids: itemids,\n        sortfield: 'clock',\n        sortorder: 'ASC',\n        time_from: timeFrom\n      };\n\n      // Relative queries (e.g. last hour) don't include an end time\n      if (timeTill) {\n        params.time_till = timeTill;\n      }\n\n      return this.request('trend.get', params);\n    });\n\n    return Promise.all(promises).then(_.flatten);\n  }\n\n  getTrend_30(items, time_from, time_till, value_type) {\n    const self = this;\n    const itemids = _.map(items, 'itemid');\n\n    const params: any = {\n      output: [\"itemid\",\n        \"clock\",\n        value_type\n      ],\n      itemids: itemids,\n      time_from: time_from\n    };\n\n    // Relative queries (e.g. last hour) don't include an end time\n    if (time_till) {\n      params.time_till = time_till;\n    }\n\n    return self.request('trend.get', params);\n  }\n\n  getITService(serviceids?) {\n    const params = {\n      output: 'extend',\n      serviceids: serviceids\n    };\n    return this.request('service.get', params);\n  }\n\n  getSLA(serviceids, timeRange, options) {\n    const [timeFrom, timeTo] = timeRange;\n    let intervals = [{ from: timeFrom, to: timeTo }];\n    if (options.slaInterval === 'auto') {\n      const interval = getSLAInterval(options.intervalMs);\n      intervals = buildSLAIntervals(timeRange, interval);\n    } else if (options.slaInterval !== 'none') {\n      const interval = utils.parseInterval(options.slaInterval) / 1000;\n      intervals = buildSLAIntervals(timeRange, interval);\n    }\n\n    const params: any = {\n      serviceids,\n      intervals\n    };\n\n    return this.request('service.getsla', params);\n  }\n\n  async getSLA60(serviceids, timeRange, options) {\n    const [timeFrom, timeTo] = timeRange;\n    let intervals = [{ from: timeFrom, to: timeTo }];\n    if (options.slaInterval === 'auto') {\n      const interval = getSLAInterval(options.intervalMs);\n      intervals = buildSLAIntervals(timeRange, interval);\n    } else if (options.slaInterval !== 'none') {\n      const interval = utils.parseInterval(options.slaInterval) / 1000;\n      intervals = buildSLAIntervals(timeRange, interval);\n    }\n\n    const params: any = {\n      output: 'extend',\n      serviceids,\n    };\n\n    const slaObjects = await this.request('sla.get', params);\n    if (slaObjects.length === 0) {\n      return {};\n    }\n    const sla = slaObjects[0];\n\n    const periods = intervals.map(interval => ({\n      period_from: interval.from,\n      period_to: interval.to,\n    }));\n    const sliParams: any = {\n      slaid: sla.slaid,\n      serviceids,\n      period_from: timeFrom,\n      period_to: timeTo,\n      periods: Math.min(intervals.length, 100),\n    };\n\n    const sliResponse = await this.request('sla.getsli', sliParams);\n    if (sliResponse.length === 0) {\n      return {};\n    }\n\n    const slaLikeResponse: any = {};\n    sliResponse.serviceids.forEach((serviceid) => {\n      slaLikeResponse[serviceid] = {\n        sla: []\n      };\n    });\n    sliResponse.sli.forEach((sliItem, i) => {\n      sliItem.forEach((sli, j) => {\n        slaLikeResponse[sliResponse.serviceids[j]].sla.push({\n          downtimeTime: sli.downtime,\n          okTime: sli.uptime,\n          sla: sli.sli,\n          from: sliResponse.periods[i].period_from,\n          to: sliResponse.periods[i].period_to\n        });\n      });\n    });\n    return slaLikeResponse;\n  }\n\n  getProblems(groupids, hostids, applicationids, options): Promise<ZBXProblem[]> {\n    const { timeFrom, timeTo, recent, severities, limit, acknowledged, tags } = options;\n\n    const params: any = {\n      output: 'extend',\n      selectAcknowledges: 'extend',\n      selectSuppressionData: 'extend',\n      selectTags: 'extend',\n      source: '0',\n      object: '0',\n      sortfield: ['eventid'],\n      sortorder: 'DESC',\n      evaltype: '0',\n      // preservekeys: '1',\n      groupids,\n      hostids,\n      applicationids,\n      recent,\n    };\n\n    if (severities) {\n      params.severities = severities;\n    }\n\n    if (acknowledged !== undefined) {\n      params.acknowledged = acknowledged;\n    }\n\n    if (tags) {\n      params.tags = tags;\n    }\n\n    if (limit) {\n      params.limit = limit;\n    }\n\n    if (timeFrom || timeTo) {\n      params.time_from = timeFrom;\n      params.time_till = timeTo;\n    }\n\n    return this.request('problem.get', params).then(utils.mustArray);\n  }\n\n  getTriggersByIds(triggerids: string[]) {\n    const params: any = {\n      output: 'extend',\n      triggerids: triggerids,\n      expandDescription: true,\n      expandData: true,\n      expandComment: true,\n      monitored: true,\n      skipDependent: true,\n      selectGroups: ['name'],\n      selectHosts: ['name', 'host', 'maintenance_status', 'proxy_hostid'],\n      selectItems: ['name', 'key_', 'lastvalue'],\n      // selectLastEvent: 'extend',\n      // selectTags: 'extend',\n      preservekeys: '1',\n    };\n\n    return this.request('trigger.get', params).then(utils.mustArray);\n  }\n\n  getTriggers(groupids, hostids, applicationids, options) {\n    const { showTriggers, maintenance, timeFrom, timeTo } = options;\n\n    const params: any = {\n      output: 'extend',\n      groupids: groupids,\n      hostids: hostids,\n      applicationids: applicationids,\n      expandDescription: true,\n      expandData: true,\n      expandComment: true,\n      monitored: true,\n      skipDependent: true,\n      //only_true: true,\n      filter: {\n        value: 1\n      },\n      selectGroups: ['name'],\n      selectHosts: ['name', 'host', 'maintenance_status', 'proxy_hostid'],\n      selectItems: ['name', 'key_', 'lastvalue'],\n      selectLastEvent: 'extend',\n      selectTags: 'extend'\n    };\n\n    if (showTriggers === ShowProblemTypes.Problems) {\n      params.filter.value = 1;\n    } else if (showTriggers === ShowProblemTypes.Recent || showTriggers === ShowProblemTypes.History) {\n      params.filter.value = [0, 1];\n    }\n\n    if (maintenance) {\n      params.maintenance = true;\n    }\n\n    if (timeFrom || timeTo) {\n      params.lastChangeSince = timeFrom;\n      params.lastChangeTill = timeTo;\n    }\n\n    return this.request('trigger.get', params);\n  }\n\n  getEvents(objectids, timeFrom, timeTo, showEvents, limit) {\n    const params: any = {\n      output: 'extend',\n      time_from: timeFrom,\n      time_till: timeTo,\n      objectids: objectids,\n      select_acknowledges: 'extend',\n      selectHosts: 'extend',\n      value: showEvents,\n    };\n\n    if (limit) {\n      params.limit = limit;\n      params.sortfield = 'clock';\n      params.sortorder = 'DESC';\n    }\n\n    return this.request('event.get', params).then(utils.mustArray);\n  }\n\n  getEventsHistory(groupids, hostids, applicationids, options) {\n    const { timeFrom, timeTo, severities, limit, value } = options;\n\n    const params: any = {\n      output: 'extend',\n      time_from: timeFrom,\n      time_till: timeTo,\n      value: '1',\n      source: '0',\n      object: '0',\n      evaltype: '0',\n      sortfield: ['eventid'],\n      sortorder: 'DESC',\n      select_acknowledges: 'extend',\n      selectTags: 'extend',\n      selectSuppressionData: ['maintenanceid', 'suppress_until'],\n      groupids,\n      hostids,\n      applicationids,\n    };\n\n    if (limit) {\n      params.limit = limit;\n    }\n\n    if (severities) {\n      params.severities = severities;\n    }\n\n    if (value) {\n      params.value = value;\n    }\n\n    return this.request('event.get', params).then(utils.mustArray);\n  }\n\n  getExtendedEventData(eventids) {\n    const params = {\n      output: 'extend',\n      eventids: eventids,\n      preservekeys: true,\n      select_acknowledges: 'extend',\n      selectTags: 'extend',\n      sortfield: 'clock',\n      sortorder: 'DESC'\n    };\n\n    return this.request('event.get', params);\n  }\n\n  getEventAlerts(eventids) {\n    const params = {\n      eventids: eventids,\n      output: [\n        'eventid',\n        'message',\n        'clock',\n        'error'\n      ],\n      selectUsers: true,\n    };\n\n    return this.request('alert.get', params);\n  }\n\n  getAcknowledges(eventids) {\n    const params = {\n      output: 'extend',\n      eventids: eventids,\n      preservekeys: true,\n      select_acknowledges: 'extend',\n      sortfield: 'clock',\n      sortorder: 'DESC'\n    };\n\n    return this.request('event.get', params)\n    .then(events => {\n      return _.filter(events, (event) => event.acknowledges.length);\n    });\n  }\n\n  getAlerts(itemids, timeFrom, timeTo) {\n    const params: any = {\n      output: 'extend',\n      itemids: itemids,\n      expandDescription: true,\n      expandData: true,\n      expandComment: true,\n      monitored: true,\n      skipDependent: true,\n      //only_true: true,\n      // filter: {\n      //   value: 1\n      // },\n      selectLastEvent: 'extend'\n    };\n\n    if (timeFrom || timeTo) {\n      params.lastChangeSince = timeFrom;\n      params.lastChangeTill = timeTo;\n    }\n\n    return this.request('trigger.get', params);\n  }\n\n  getHostAlerts(hostids, applicationids, options) {\n    const { minSeverity, acknowledged, count, timeFrom, timeTo } = options;\n    const params: any = {\n      output: 'extend',\n      hostids: hostids,\n      min_severity: minSeverity,\n      filter: { value: 1 },\n      expandDescription: true,\n      expandData: true,\n      expandComment: true,\n      monitored: true,\n      skipDependent: true,\n      selectLastEvent: 'extend',\n      selectGroups: 'extend',\n      selectHosts: ['host', 'name']\n    };\n\n    if (count && acknowledged !== 0 && acknowledged !== 1) {\n      params.countOutput = true;\n    }\n\n    if (applicationids && applicationids.length) {\n      params.applicationids = applicationids;\n    }\n\n    if (timeFrom || timeTo) {\n      params.lastChangeSince = timeFrom;\n      params.lastChangeTill = timeTo;\n    }\n\n    return this.request('trigger.get', params)\n    .then((triggers) => {\n      if (!count || acknowledged === 0 || acknowledged === 1) {\n        triggers = filterTriggersByAcknowledge(triggers, acknowledged);\n        if (count) {\n          triggers = triggers.length;\n        }\n      }\n      return triggers;\n    });\n  }\n\n  getProxies() {\n    const params = {\n      output: ['proxyid', 'host'],\n    };\n\n    return this.request('proxy.get', params);\n  }\n\n  getScripts(hostids: string[], options?: any): Promise<ZBXScript[]> {\n    const params: any = {\n      output: 'extend',\n      hostids,\n    };\n\n    return this.request('script.get', params).then(utils.mustArray);\n  }\n\n  executeScript(hostid: string, scriptid: string): Promise<APIExecuteScriptResponse> {\n    const params: any = {\n      hostid,\n      scriptid,\n    };\n\n    return this.request('script.execute', params);\n  }\n\n  getValueMappings() {\n    const params = {\n      output: 'extend',\n      selectMappings: \"extend\",\n    };\n\n    return this.request('valuemap.get', params);\n  }\n\n  getMaintenances(hostids: string[], groupids?: string[]) {\n    const params = {\n      hostids: hostids,\n      output: ['active_since', 'active_till', 'name', 'maintenanceid'],\n      selectGroups: ['groupid', 'name'],\n      selectHosts: ['hostid', 'name'],\n      selectTimeperiods: ['start_time', 'period', 'timeperiod_type', 'start_date', 'every', 'dayofweek', 'month', 'day']\n    };\n    if (groupids) {\n      params['groupids'] = groupids;\n    }\n    return this.request('maintenance.get', params);\n  }\n}\n\nfunction filterTriggersByAcknowledge(triggers, acknowledged) {\n  if (acknowledged === 0) {\n    return _.filter(triggers, (trigger) => trigger.lastEvent.acknowledged === \"0\");\n  } else if (acknowledged === 1) {\n    return _.filter(triggers, (trigger) => trigger.lastEvent.acknowledged === \"1\");\n  } else {\n    return triggers;\n  }\n}\n\nfunction getSLAInterval(intervalMs) {\n  // Too many intervals may cause significant load on the database, so decrease number of resulting points\n  const resolutionRatio = 100;\n  const interval = roundInterval(intervalMs * resolutionRatio) / 1000;\n  return Math.max(interval, MIN_SLA_INTERVAL);\n}\n\nfunction buildSLAIntervals(timeRange, interval) {\n  let [timeFrom, timeTo] = timeRange;\n  const intervals = [];\n\n  // Align time range with calculated interval\n  timeFrom = Math.floor(timeFrom / interval) * interval;\n  timeTo = Math.ceil(timeTo / interval) * interval;\n\n  for (let i = timeFrom; i <= timeTo - interval; i += interval) {\n    intervals.push({\n      from: i,\n      to: (i + interval)\n    });\n\n  }\n\n  return intervals;\n}\n\n// Define zabbix API exception type\nexport class ZabbixAPIError {\n  code: number;\n  name: string;\n  data: string;\n  message: string;\n\n  constructor(error: JSONRPCError) {\n    this.code = error.code || null;\n    this.name = error.message || \"\";\n    this.data = error.data || \"\";\n    this.message = \"Zabbix API Error: \" + this.name + \" \" + this.data;\n  }\n\n  toString() {\n    return this.name + \" \" + this.data;\n  }\n}\n","/**\n * MySQL queries\n */\n\nfunction historyQuery(itemids, table, timeFrom, timeTill, intervalSec, aggFunction) {\n  const time_expression = `clock DIV ${intervalSec} * ${intervalSec}`;\n  return `\n      SELECT CAST(itemid AS CHAR) AS metric, ${time_expression} AS time_sec, ${aggFunction}(value) AS value\n      FROM ${table}\n      WHERE itemid IN (${itemids})\n        AND clock\n          > ${timeFrom}\n        AND clock\n          < ${timeTill}\n      GROUP BY ${time_expression}, metric\n      ORDER BY time_sec ASC\n  `;\n}\n\nfunction trendsQuery(itemids, table, timeFrom, timeTill, intervalSec, aggFunction, valueColumn) {\n  const time_expression = `clock DIV ${intervalSec} * ${intervalSec}`;\n  return `\n      SELECT CAST(itemid AS CHAR) AS metric, ${time_expression} AS time_sec, ${aggFunction}(${valueColumn}) AS value\n      FROM ${table}\n      WHERE itemid IN (${itemids})\n        AND clock\n          > ${timeFrom}\n        AND clock\n          < ${timeTill}\n      GROUP BY ${time_expression}, metric\n      ORDER BY time_sec ASC\n  `;\n}\n\nfunction testQuery() {\n  return `SELECT CAST(itemid AS CHAR) AS metric, clock AS time_sec, value_avg AS value\n          FROM trends_uint LIMIT 1`;\n}\n\nconst mysql = {\n  historyQuery,\n  trendsQuery,\n  testQuery\n};\n\nexport default mysql;\n","/**\n * Postgres queries\n */\n\nconst ITEMID_FORMAT = 'FM99999999999999999999';\n\nfunction historyQuery(itemids, table, timeFrom, timeTill, intervalSec, aggFunction) {\n  const time_expression = `clock / ${intervalSec} * ${intervalSec}`;\n  return `\n      SELECT to_char(itemid, '${ITEMID_FORMAT}') AS metric, ${time_expression} AS time, ${aggFunction}(value) AS value\n      FROM ${table}\n      WHERE itemid IN (${itemids})\n        AND clock\n          > ${timeFrom}\n        AND clock\n          < ${timeTill}\n      GROUP BY 1, 2\n      ORDER BY time ASC\n  `;\n}\n\nfunction trendsQuery(itemids, table, timeFrom, timeTill, intervalSec, aggFunction, valueColumn) {\n  const time_expression = `clock / ${intervalSec} * ${intervalSec}`;\n  return `\n      SELECT to_char(itemid, '${ITEMID_FORMAT}') AS metric, ${time_expression} AS time, ${aggFunction}(${valueColumn}) AS value\n      FROM ${table}\n      WHERE itemid IN (${itemids})\n        AND clock\n          > ${timeFrom}\n        AND clock\n          < ${timeTill}\n      GROUP BY 1, 2\n      ORDER BY time ASC\n  `;\n}\n\nconst TEST_QUERY = `\n    SELECT to_char(itemid, '${ITEMID_FORMAT}') AS metric, clock AS time, value_avg AS value\n    FROM trends_uint LIMIT 1\n`;\n\nfunction testQuery() {\n  return TEST_QUERY;\n}\n\nconst postgres = {\n  historyQuery,\n  trendsQuery,\n  testQuery\n};\n\nexport default postgres;\n","import _ from 'lodash';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { compactQuery } from '../../../utils';\nimport mysql from './mysql';\nimport postgres from './postgres';\nimport dbConnector, { DBConnector, DEFAULT_QUERY_LIMIT, HISTORY_TO_TABLE_MAP, TREND_TO_TABLE_MAP } from '../dbConnector';\n\nconst supportedDatabases = {\n  mysql: 'mysql',\n  postgres: 'postgres'\n};\n\nexport class SQLConnector extends DBConnector {\n  private limit: number;\n  private sqlDialect: any;\n\n  constructor(options) {\n    super(options);\n\n    this.limit = options.limit || DEFAULT_QUERY_LIMIT;\n    this.sqlDialect = null;\n\n    super.loadDBDataSource()\n    .then(() => {\n      this.loadSQLDialect();\n    });\n  }\n\n  loadSQLDialect() {\n    if (this.datasourceTypeId === supportedDatabases.postgres) {\n      this.sqlDialect = postgres;\n    } else {\n      this.sqlDialect = mysql;\n    }\n  }\n\n  /**\n   * Try to invoke test query for one of Zabbix database tables.\n   */\n  testDataSource() {\n    const testQuery = this.sqlDialect.testQuery();\n    return this.invokeSQLQuery(testQuery);\n  }\n\n  getHistory(items, timeFrom, timeTill, options) {\n    const { aggFunction, intervalSec } = getAggFunc(timeFrom, timeTill, options);\n\n    // Group items by value type and perform request for each value type\n    const grouped_items = _.groupBy(items, 'value_type');\n    const promises = _.map(grouped_items, (items, value_type) => {\n      const itemids = _.map(items, 'itemid').join(', ');\n      const table = HISTORY_TO_TABLE_MAP[value_type];\n      let query = this.sqlDialect.historyQuery(itemids, table, timeFrom, timeTill, intervalSec, aggFunction);\n\n      query = compactQuery(query);\n      return this.invokeSQLQuery(query);\n    });\n\n    return Promise.all(promises).then(results => {\n      return _.flatten(results);\n    });\n  }\n\n  getTrends(items, timeFrom, timeTill, options) {\n    const { consolidateBy } = options;\n    const { aggFunction, intervalSec } = getAggFunc(timeFrom, timeTill, options);\n\n    // Group items by value type and perform request for each value type\n    const grouped_items = _.groupBy(items, 'value_type');\n    const promises = _.map(grouped_items, (items, value_type) => {\n      const itemids = _.map(items, 'itemid').join(', ');\n      const table = TREND_TO_TABLE_MAP[value_type];\n      let valueColumn = _.includes(['avg', 'min', 'max', 'sum'], consolidateBy) ? consolidateBy : 'avg';\n      valueColumn = dbConnector.consolidateByTrendColumns[valueColumn];\n      let query = this.sqlDialect.trendsQuery(itemids, table, timeFrom, timeTill, intervalSec, aggFunction, valueColumn);\n\n      query = compactQuery(query);\n      return this.invokeSQLQuery(query);\n    });\n\n    return Promise.all(promises).then(results => {\n      return _.flatten(results);\n    });\n  }\n\n  invokeSQLQuery(query) {\n    const queryDef = {\n      refId: 'A',\n      format: 'time_series',\n      datasourceId: this.datasourceId,\n      rawSql: query,\n      maxDataPoints: this.limit\n    };\n\n    return getBackendSrv().datasourceRequest({\n      url: '/api/ds/query',\n      method: 'POST',\n      data: {\n        queries: [queryDef],\n      }\n    })\n    .then(response => {\n      const results = response.data.results;\n      if (results['A']) {\n        return results['A'].frames;\n      } else {\n        return null;\n      }\n    });\n  }\n}\n\nfunction getAggFunc(timeFrom, timeTill, options) {\n  const { intervalMs } = options;\n  let { consolidateBy } = options;\n  let intervalSec = Math.ceil(intervalMs / 1000);\n\n  // The interval must match the time range exactly n times, otherwise\n  // the resulting first and last data points will yield invalid values in the\n  // calculated average value in downsampleSeries - when using consolidateBy(avg)\n  const numOfIntervals = Math.ceil((timeTill - timeFrom) / intervalSec);\n  intervalSec = Math.ceil((timeTill - timeFrom) / numOfIntervals);\n\n  consolidateBy = consolidateBy || 'avg';\n  const aggFunction = dbConnector.consolidateByFunc[consolidateBy];\n  return { aggFunction, intervalSec };\n}\n","import _ from 'lodash';\nimport { compactQuery } from '../../../utils';\nimport { consolidateByTrendColumns, DBConnector, HISTORY_TO_TABLE_MAP } from '../dbConnector';\n\nconst consolidateByFunc = {\n  'avg': 'MEAN',\n  'min': 'MIN',\n  'max': 'MAX',\n  'sum': 'SUM',\n  'count': 'COUNT'\n};\n\nexport class InfluxDBConnector extends DBConnector {\n  private retentionPolicy: any;\n  private influxDS: any;\n\n  constructor(options) {\n    super(options);\n    this.retentionPolicy = options.retentionPolicy;\n    super.loadDBDataSource().then(ds => {\n      this.influxDS = ds;\n      return ds;\n    });\n  }\n\n  /**\n   * Try to invoke test query for one of Zabbix database tables.\n   */\n  testDataSource() {\n    return this.influxDS.testDatasource().then(result => {\n      if (result.status && result.status === 'error') {\n        return Promise.reject({\n          data: {\n            message: `InfluxDB connection error: ${result.message}`\n          }\n        });\n      }\n      return result;\n    });\n  }\n\n  getHistory(items, timeFrom, timeTill, options) {\n    const { intervalMs, retentionPolicy } = options;\n    let { consolidateBy } = options;\n    const intervalSec = Math.ceil(intervalMs / 1000);\n\n    const range = { timeFrom, timeTill };\n    consolidateBy = consolidateBy || 'avg';\n\n    // Group items by value type and perform request for each value type\n    const grouped_items = _.groupBy(items, 'value_type');\n    const promises = _.map(grouped_items, (items, value_type) => {\n      const itemids = _.map(items, 'itemid');\n      const table = HISTORY_TO_TABLE_MAP[value_type];\n      const query = this.buildHistoryQuery(itemids, table, range, intervalSec, consolidateBy, retentionPolicy);\n      return this.invokeInfluxDBQuery(query);\n    });\n\n    return Promise.all(promises)\n    .then(_.flatten)\n    .then(results => {\n      return handleInfluxHistoryResponse(results);\n    });\n  }\n\n  getTrends(items, timeFrom, timeTill, options) {\n    options.retentionPolicy = this.retentionPolicy;\n    return this.getHistory(items, timeFrom, timeTill, options);\n  }\n\n  buildHistoryQuery(itemids, table, range, intervalSec, aggFunction, retentionPolicy) {\n    const { timeFrom, timeTill } = range;\n    const measurement = retentionPolicy ? `\"${retentionPolicy}\".\"${table}\"` : `\"${table}\"`;\n    let value = 'value';\n    if (retentionPolicy) {\n      value = consolidateByTrendColumns[aggFunction] || 'value_avg';\n    }\n    const aggregation = consolidateByFunc[aggFunction] || aggFunction;\n    const where_clause = this.buildWhereClause(itemids);\n    const query = `SELECT ${aggregation}(\"${value}\")\n                   FROM ${measurement}\n                   WHERE ${where_clause}\n                     AND \"time\" >= ${timeFrom}s\n                     AND \"time\" <= ${timeTill}s\n                   GROUP BY time(${intervalSec}s), \"itemid\" fill(none)`;\n    return compactQuery(query);\n  }\n\n  buildWhereClause(itemids) {\n    const itemidsWhere = itemids.map(itemid => `\"itemid\" = '${itemid}'`).join(' OR ');\n    return `(${itemidsWhere})`;\n  }\n\n  invokeInfluxDBQuery(query) {\n    return this.influxDS._seriesQuery(query)\n    .then(data => data && data.results ? data.results : []);\n  }\n}\n\n///////////////////////////////////////////////////////////////////////////////\n\nfunction handleInfluxHistoryResponse(results) {\n  if (!results) {\n    return [];\n  }\n\n  const seriesList = [];\n  for (let i = 0; i < results.length; i++) {\n    const result = results[i];\n\n    if (result.error) {\n      const error = `InfluxDB error: ${result.error}`;\n      return Promise.reject(new Error(error));\n    }\n\n    if (!result || !result.series) {\n      continue;\n    }\n\n    const influxSeriesList = results[i].series;\n\n    for (let y = 0; y < influxSeriesList.length; y++) {\n      const influxSeries = influxSeriesList[y];\n      const datapoints = [];\n      if (influxSeries.values) {\n        for (i = 0; i < influxSeries.values.length; i++) {\n          datapoints[i] = [influxSeries.values[i][1], influxSeries.values[i][0]];\n        }\n      }\n      const timeSeries = {\n        name: influxSeries.tags.itemid,\n        points: datapoints\n      };\n      seriesList.push(timeSeries);\n    }\n  }\n\n  return seriesList;\n}\n","import _ from 'lodash';\nimport moment from 'moment';\nimport semver from 'semver';\nimport * as utils from '../utils';\nimport responseHandler from '../responseHandler';\nimport { CachingProxy } from './proxy/cachingProxy';\nimport { DBConnector } from './connectors/dbConnector';\nimport { ZabbixAPIConnector } from './connectors/zabbix_api/zabbixAPIConnector';\nimport { SQLConnector } from './connectors/sql/sqlConnector';\nimport { InfluxDBConnector } from './connectors/influxdb/influxdbConnector';\nimport { ZabbixConnector } from './types';\nimport { joinTriggersWithEvents, joinTriggersWithProblems } from '../problemsHandler';\nimport { ProblemDTO, ZBXItem, ZBXItemTag } from '../types';\n\ninterface AppsResponse extends Array<any> {\n  appFilterEmpty?: boolean;\n  hostids?: any[];\n}\n\nconst REQUESTS_TO_PROXYFY = [\n  'getHistory', 'getTrend', 'getGroups', 'getHosts', 'getApps', 'getItems', 'getMacros', 'getItemsByIDs',\n  'getEvents', 'getAlerts', 'getHostAlerts', 'getAcknowledges', 'getITService', 'getSLA', 'getVersion', 'getProxies',\n  'getEventAlerts', 'getExtendedEventData', 'getProblems', 'getEventsHistory', 'getTriggersByIds', 'getScripts',\n  'getGlobalMacros', 'getValueMappings', 'getGroupsWithHosts', 'getHostsByIDs', 'getMaintenances'\n];\n\nconst REQUESTS_TO_CACHE = [\n  'getGroups', 'getHosts', 'getApps', 'getItems', 'getMacros', 'getItemsByIDs', 'getITService', 'getProxies',\n  'getGlobalMacros', 'getValueMappings', 'getGroupsWithHosts', 'getHostsByIDs', 'getMaintenances'\n];\n\nconst REQUESTS_TO_BIND = [\n  'getHistory', 'getTrend', 'getMacros', 'getItemsByIDs', 'getEvents', 'getAlerts', 'getHostAlerts',\n  'getAcknowledges', 'getITService', 'acknowledgeEvent', 'getProxies', 'getEventAlerts',\n  'getExtendedEventData', 'getScripts', 'executeScript', 'getGlobalMacros', 'getValueMappings', 'getHostsByIDs'\n];\n\nexport class Zabbix implements ZabbixConnector {\n  enableDirectDBConnection: boolean;\n  cachingProxy: CachingProxy;\n  zabbixAPI: ZabbixAPIConnector;\n  getHistoryDB: any;\n  dbConnector: any;\n  getTrendsDB: any;\n  version: string;\n\n  getHistory: (items, timeFrom, timeTill) => Promise<any>;\n  getTrend: (items, timeFrom, timeTill) => Promise<any>;\n  getItemsByIDs: (itemids) => Promise<any>;\n  getEvents: (objectids, timeFrom, timeTo, showEvents, limit?) => Promise<any>;\n  getAlerts: (itemids, timeFrom?, timeTo?) => Promise<any>;\n  getHostAlerts: (hostids, applicationids, options?) => Promise<any>;\n  getAcknowledges: (eventids) => Promise<any>;\n  getITService: (serviceids?) => Promise<any>;\n  acknowledgeEvent: (eventid, message) => Promise<any>;\n  getProxies: () => Promise<any>;\n  getEventAlerts: (eventids) => Promise<any>;\n  getExtendedEventData: (eventids) => Promise<any>;\n  getMacros: (hostids: any[]) => Promise<any>;\n  getGlobalMacros: () => Promise<any>;\n  getValueMappings: () => Promise<any>;\n  getHostsByIDs: (hostids) => Promise<any>;\n\n  constructor(options) {\n    const {\n      basicAuth,\n      withCredentials,\n      cacheTTL,\n      enableDirectDBConnection,\n      dbConnectionDatasourceId,\n      dbConnectionDatasourceName,\n      dbConnectionRetentionPolicy,\n      datasourceId,\n    } = options;\n\n    this.enableDirectDBConnection = enableDirectDBConnection;\n\n    // Initialize caching proxy for requests\n    const cacheOptions = {\n      enabled: true,\n      ttl: cacheTTL\n    };\n    this.cachingProxy = new CachingProxy(cacheOptions);\n\n    this.zabbixAPI = new ZabbixAPIConnector(basicAuth, withCredentials, datasourceId);\n\n    this.proxifyRequests();\n    this.cacheRequests();\n    this.bindRequests();\n\n    if (enableDirectDBConnection) {\n      const connectorOptions: any = { dbConnectionRetentionPolicy };\n      this.initDBConnector(dbConnectionDatasourceId, dbConnectionDatasourceName, connectorOptions)\n      .then(() => {\n        this.getHistoryDB = this.cachingProxy.proxifyWithCache(this.dbConnector.getHistory, 'getHistory', this.dbConnector);\n        this.getTrendsDB = this.cachingProxy.proxifyWithCache(this.dbConnector.getTrends, 'getTrends', this.dbConnector);\n      });\n    }\n  }\n\n  initDBConnector(datasourceId, datasourceName, options) {\n    return DBConnector.loadDatasource(datasourceId, datasourceName)\n    .then(ds => {\n      const connectorOptions: any = { datasourceId, datasourceName };\n      if (ds.type === 'influxdb') {\n        connectorOptions.retentionPolicy = options.dbConnectionRetentionPolicy;\n        this.dbConnector = new InfluxDBConnector(connectorOptions);\n      } else {\n        this.dbConnector = new SQLConnector(connectorOptions);\n      }\n      return this.dbConnector;\n    });\n  }\n\n  proxifyRequests() {\n    for (const request of REQUESTS_TO_PROXYFY) {\n      this.zabbixAPI[request] = this.cachingProxy.proxify(this.zabbixAPI[request], request, this.zabbixAPI);\n    }\n  }\n\n  cacheRequests() {\n    for (const request of REQUESTS_TO_CACHE) {\n      this.zabbixAPI[request] = this.cachingProxy.cacheRequest(this.zabbixAPI[request], request, this.zabbixAPI);\n    }\n  }\n\n  bindRequests() {\n    for (const request of REQUESTS_TO_BIND) {\n      this[request] = this.zabbixAPI[request].bind(this.zabbixAPI);\n    }\n  }\n\n  /**\n   * Perform test query for Zabbix API and external history DB.\n   * @return {object} test result object:\n   * ```\n   *    {\n   *      zabbixVersion,\n   *      dbConnectorStatus: {\n   *        dsType,\n   *        dsName\n   *      }\n   *    }\n   * ```\n   */\n  testDataSource() {\n    let zabbixVersion;\n    let dbConnectorStatus;\n    return this.getVersion()\n    .then(version => {\n      zabbixVersion = version;\n      return this.getAllGroups();\n    })\n    .then(() => {\n      if (this.enableDirectDBConnection) {\n        return this.dbConnector.testDataSource();\n      } else {\n        return Promise.resolve();\n      }\n    })\n    .catch(error => {\n      return Promise.reject(error);\n    })\n    .then(testResult => {\n      if (testResult) {\n        dbConnectorStatus = {\n          dsType: this.dbConnector.datasourceTypeName,\n          dsName: this.dbConnector.datasourceName\n        };\n      }\n      return { zabbixVersion, dbConnectorStatus };\n    });\n  }\n\n  async getVersion() {\n    if (!this.version) {\n      if (this.zabbixAPI.version) {\n        this.version = this.zabbixAPI.version;\n      } else {\n        this.version = await this.zabbixAPI.initVersion();\n      }\n    }\n    return this.version;\n  }\n\n  supportsApplications() {\n    const version = this.version || this.zabbixAPI.version;\n    return version ? semver.lt(version, '5.4.0') : true;\n  }\n\n  supportSLA() {\n    const version = this.version || this.zabbixAPI.version;\n    return version ? semver.gte(version, '6.0.0') : true;\n  }\n\n  isZabbix54OrHigher() {\n    const version = this.version || this.zabbixAPI.version;\n    return version ? semver.gte(version, '5.4.0') : false;\n  }\n\n  getItemsFromTarget(target, options) {\n    const parts = ['group', 'host', 'application', 'itemTag', 'item'];\n    const filters = _.map(parts, p => target[p].filter);\n    return this.getItems(...filters, options);\n  }\n\n  getHostsFromTarget(target) {\n    const parts = ['group', 'host', 'application'];\n    const filters = _.map(parts, p => target[p].filter);\n    return Promise.all([\n      this.getHosts(...filters),\n      this.getApps(...filters),\n    ]).then(results => {\n      const hosts = results[0];\n      let apps: AppsResponse = results[1];\n      if (apps.appFilterEmpty) {\n        apps = [];\n      }\n      return [hosts, apps];\n    });\n  }\n\n  getGroupsWithHosts() {\n    return this.zabbixAPI.getGroupsWithHosts();\n  }\n\n  getAllGroups() {\n    return this.zabbixAPI.getGroups();\n  }\n\n  getGroups(groupFilter) {\n    return this.getAllGroups()\n    .then(groups => findByFilter(groups, groupFilter));\n  }\n\n  /**\n   * Get list of host belonging to given groups.\n   */\n  getAllHosts(groupFilter) {\n    return this.getGroups(groupFilter)\n    .then(groups => {\n      const groupids = _.map(groups, 'groupid');\n      return this.zabbixAPI.getHosts(groupids);\n    });\n  }\n\n  getHosts(groupFilter?, hostFilter?) {\n    return this.getAllHosts(groupFilter)\n    .then(hosts => findByFilter(hosts, hostFilter));\n  }\n\n  getMaintenances(hostids: string[], groupids?: string[]) {\n    return this.zabbixAPI.getMaintenances(hostids, groupids);\n  }\n\n  /**\n   * Get list of applications belonging to given groups and hosts.\n   */\n  async getAllApps(groupFilter, hostFilter) {\n    await this.getVersion();\n    if (!this.supportsApplications()) {\n      return [];\n    }\n\n    return this.getHosts(groupFilter, hostFilter)\n    .then(hosts => {\n      const hostids = _.map(hosts, 'hostid');\n      return this.zabbixAPI.getApps(hostids);\n    });\n  }\n\n  async getApps(groupFilter?, hostFilter?, appFilter?): Promise<AppsResponse> {\n    await this.getVersion();\n    const skipAppFilter = !this.supportsApplications();\n\n    return this.getHosts(groupFilter, hostFilter)\n    .then(hosts => {\n      const hostids = _.map(hosts, 'hostid');\n      if (appFilter && !skipAppFilter) {\n        return this.zabbixAPI.getApps(hostids)\n        .then(apps => filterByQuery(apps, appFilter));\n      } else {\n        const appsResponse: AppsResponse = hostids;\n        appsResponse.hostids = hostids;\n        appsResponse.appFilterEmpty = true;\n        return Promise.resolve(appsResponse);\n      }\n    });\n  }\n\n  async getItemTags(groupFilter?, hostFilter?, itemTagFilter?) {\n    const items = await this.getAllItems(groupFilter, hostFilter, null, null, {});\n    let tags: ZBXItemTag[] = _.flatten(items.map((item: ZBXItem) => {\n      if (item.tags) {\n        return item.tags;\n      } else {\n        return [];\n      }\n    }));\n    tags = _.uniqBy(tags, t => t.tag + t.value || '');\n    const tagsStr = tags.map(t => ({ name: utils.itemTagToString(t) }));\n    return findByFilter(tagsStr, itemTagFilter);\n  }\n\n  async getAllItems(groupFilter, hostFilter, appFilter, itemTagFilter, options: any = {}) {\n    const apps = await this.getApps(groupFilter, hostFilter, appFilter);\n    let items: any[];\n\n    if (this.isZabbix54OrHigher()) {\n      items = await this.zabbixAPI.getItems(apps.hostids, undefined, options.itemtype);\n      if (itemTagFilter) {\n        items = filterItemsByTag(items, itemTagFilter);\n      }\n    } else {\n      if (apps.appFilterEmpty) {\n        items = await this.zabbixAPI.getItems(apps.hostids, undefined, options.itemtype);\n      } else {\n        const appids = _.map(apps, 'applicationid');\n        items = await this.zabbixAPI.getItems(undefined, appids, options.itemtype);\n      }\n    }\n\n    if (!options.showDisabledItems) {\n      items = _.filter(items, { 'status': '0' });\n    }\n\n    return await this.expandUserMacro(items, false);\n  }\n\n  expandUserMacro(items, isTriggerItem) {\n    const hostids = getHostIds(items);\n    // Don't try to fetch host macros if no hostids are given\n    if (hostids && hostids.length > 0) {\n      // Fetch also parent template host ids\n      return this.zabbixAPI.getHostsByIDs(hostids)\n        .then((parentHosts: any) => {\n          parentHosts.map((host: any) => {\n            if (host.parentTemplates) {\n              host.parentTemplates.map((template: any) => {\n                if (hostids.indexOf(template.templateid) === -1) {\n                  hostids.push(template.templateid);\n                }\n              });\n            }\n          });\n          return this.getMacros(hostids)\n          .then(macros => {\n            _.forEach(items, item => {\n              if (utils.containsMacro(isTriggerItem ? item.url : item.name)) {\n                if (isTriggerItem) {\n                  item.url = utils.replaceMacro(item, macros, isTriggerItem, parentHosts);\n                } else {\n                  item.name = utils.replaceMacro(item, macros);\n                }\n              }\n            });\n            return this.getGlobalMacros().then(globalMacros => {\n              return this.getExpandedGlobalMacros(globalMacros, items, isTriggerItem);\n            });\n          });\n        });\n    } else {\n      return this.getGlobalMacros().then(globalMacros => {\n        return this.getExpandedGlobalMacros(globalMacros, items, isTriggerItem);\n      });\n    }\n  }\n\n  getExpandedGlobalMacros(globalMacros, items, isTriggerItem) {\n    _.forEach(items, item => {\n      if (utils.containsMacro(isTriggerItem ? item.url : item.name)) {\n        if (isTriggerItem) {\n          item.url = utils.replaceMacro(item, globalMacros, isTriggerItem);\n        } else {\n          item.name = utils.replaceMacro(item, globalMacros);\n        }\n      }\n    })\n    return items;\n  }\n\n  getItems(groupFilter?, hostFilter?, appFilter?, itemTagFilter?, itemFilter?, options = {}) {\n    return this.getAllItems(groupFilter, hostFilter, appFilter, itemTagFilter, options)\n    .then(items => filterByQuery(items, itemFilter));\n  }\n\n  getItemValues(groupFilter?, hostFilter?, appFilter?, itemFilter?, options: any = {}) {\n    return this.getItems(groupFilter, hostFilter, appFilter, null, itemFilter, options).then(items => {\n      let timeRange = [moment().subtract(2, 'h').unix(), moment().unix()];\n      if (options.range) {\n        timeRange = [options.range.from.unix(), options.range.to.unix()];\n      }\n      const [timeFrom, timeTo] = timeRange;\n\n      return this.zabbixAPI.getHistory(items, timeFrom, timeTo).then(history => {\n        if (history) {\n          const values = _.uniq(history.map(v => v.value));\n          return values.map(value => ({ name: value }));\n        } else {\n          return [];\n        }\n      });\n    });\n  }\n\n  getITServices(itServiceFilter) {\n    return this.zabbixAPI.getITService()\n    .then(itServices => findByFilter(itServices, itServiceFilter));\n  }\n\n  getProblems(groupFilter, hostFilter, appFilter, proxyFilter?, options?): Promise<ProblemDTO[]> {\n    const promises = [\n      this.getGroups(groupFilter),\n      this.getHosts(groupFilter, hostFilter),\n      this.getApps(groupFilter, hostFilter, appFilter)\n    ];\n\n    return Promise.all(promises)\n    .then(results => {\n      const [filteredGroups, filteredHosts, filteredApps] = results;\n      const query: any = {};\n\n      if (appFilter) {\n        query.applicationids = _.flatten(_.map(filteredApps, 'applicationid'));\n      }\n      if (hostFilter && hostFilter !== '/.*/') {\n        query.hostids = _.map(filteredHosts, 'hostid');\n      }\n      if (groupFilter) {\n        query.groupids = _.map(filteredGroups, 'groupid');\n      }\n\n      return query;\n    })\n    .then(query => this.zabbixAPI.getProblems(query.groupids, query.hostids, query.applicationids, options))\n    .then(problems => {\n      const triggerids = problems?.map(problem => problem.objectid);\n      return Promise.all([\n        Promise.resolve(problems),\n        this.zabbixAPI.getTriggersByIds(triggerids)\n      ]);\n    })\n    .then(([problems, triggers]) => joinTriggersWithProblems(problems, triggers))\n    .then(triggers => this.filterTriggersByProxy(triggers, proxyFilter))\n    .then(triggers => this.expandUserMacro.bind(this)(triggers, true));\n  }\n\n  getProblemsHistory(groupFilter, hostFilter, appFilter, proxyFilter?, options?): Promise<ProblemDTO[]> {\n    const { valueFromEvent } = options;\n\n    const promises = [\n      this.getGroups(groupFilter),\n      this.getHosts(groupFilter, hostFilter),\n      this.getApps(groupFilter, hostFilter, appFilter)\n    ];\n\n    return Promise.all(promises)\n    .then(results => {\n      const [filteredGroups, filteredHosts, filteredApps] = results;\n      const query: any = {};\n\n      if (appFilter) {\n        query.applicationids = _.flatten(_.map(filteredApps, 'applicationid'));\n      }\n      if (hostFilter) {\n        query.hostids = _.map(filteredHosts, 'hostid');\n      }\n      if (groupFilter) {\n        query.groupids = _.map(filteredGroups, 'groupid');\n      }\n\n      return query;\n    })\n    .then(query => this.zabbixAPI.getEventsHistory(query.groupids, query.hostids, query.applicationids, options))\n    .then(problems => {\n      const triggerids = problems?.map(problem => problem.objectid);\n      return Promise.all([Promise.resolve(problems), this.zabbixAPI.getTriggersByIds(triggerids)]);\n    })\n    .then(([problems, triggers]) => joinTriggersWithEvents(problems, triggers, { valueFromEvent }))\n    .then(triggers => this.filterTriggersByProxy(triggers, proxyFilter))\n    .then(triggers => this.expandUserMacro.bind(this)(triggers, true));\n  }\n\n  filterTriggersByProxy(triggers, proxyFilter) {\n    return this.getFilteredProxies(proxyFilter)\n    .then(proxies => {\n      if (proxyFilter && proxyFilter !== '/.*/' && triggers) {\n        const proxy_ids = proxies.map(proxy => proxy.proxyid);\n        triggers = triggers.filter(trigger => {\n          for (let i = 0; i < trigger.hosts.length; i++) {\n            const host = trigger.hosts[i];\n            if (proxy_ids.includes(host.proxy_hostid)) {\n              return true;\n            }\n          }\n          return false;\n        });\n      }\n      return triggers;\n    });\n  }\n\n  getFilteredProxies(proxyFilter) {\n    return this.zabbixAPI.getProxies()\n    .then(proxies => {\n      proxies.forEach(proxy => proxy.name = proxy.host);\n      return findByFilter(proxies, proxyFilter);\n    });\n  }\n\n  getHistoryTS(items, timeRange, request) {\n    const [timeFrom, timeTo] = timeRange;\n    if (this.enableDirectDBConnection) {\n      return this.getHistoryDB(items, timeFrom, timeTo, request)\n      .then(history => responseHandler.dataResponseToTimeSeries(history, items, request));\n    } else {\n      return this.zabbixAPI.getHistory(items, timeFrom, timeTo)\n      .then(history => responseHandler.handleHistory(history, items));\n    }\n  }\n\n  getTrends(items, timeRange, request) {\n    const [timeFrom, timeTo] = timeRange;\n    if (this.enableDirectDBConnection) {\n      return this.getTrendsDB(items, timeFrom, timeTo, request)\n      .then(history => responseHandler.dataResponseToTimeSeries(history, items, request));\n    } else {\n      const valueType = request.consolidateBy || request.valueType;\n      return this.zabbixAPI.getTrend(items, timeFrom, timeTo)\n      .then(history => responseHandler.handleTrends(history, items, valueType))\n      .then(responseHandler.sortTimeseries); // Sort trend data, issue #202\n    }\n  }\n\n  getHistoryText(items, timeRange, target) {\n    const [timeFrom, timeTo] = timeRange;\n    if (items.length) {\n      return this.zabbixAPI.getHistory(items, timeFrom, timeTo)\n      .then(history => {\n        if (target.resultFormat === 'table') {\n          return responseHandler.handleHistoryAsTable(history, items, target);\n        } else {\n          return responseHandler.handleText(history, items, target);\n        }\n      });\n    } else {\n      return Promise.resolve([]);\n    }\n  }\n\n  async getSLA(itservices, timeRange, target, options) {\n    const itServiceIds = _.map(itservices, 'serviceid');\n    if (this.supportSLA()) {\n      const slaResponse = await this.zabbixAPI.getSLA60(itServiceIds, timeRange, options);\n      return _.map(itServiceIds, serviceid => {\n        const itservice = _.find(itservices, { 'serviceid': serviceid });\n        return responseHandler.handleSLAResponse(itservice, target.slaProperty, slaResponse);\n      });\n    }\n    const slaResponse = await this.zabbixAPI.getSLA(itServiceIds, timeRange, options);\n    return _.map(itServiceIds, serviceid => {\n      const itservice = _.find(itservices, { 'serviceid': serviceid });\n      return responseHandler.handleSLAResponse(itservice, target.slaProperty, slaResponse);\n    });\n  }\n}\n\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Find group, host, app or item by given name.\n * @param  list list of groups, apps or other\n * @param  name visible name\n * @return      array with finded element or empty array\n */\nfunction findByName(list, name) {\n  const finded = _.find(list, { 'name': name });\n  if (finded) {\n    return [finded];\n  } else {\n    return [];\n  }\n}\n\n/**\n * Different hosts can contains applications and items with same name.\n * For this reason use _.filter, which return all elements instead _.find,\n * which return only first finded.\n * @param  {[type]} list list of elements\n * @param  {[type]} name app name\n * @return {[type]}      array with finded element or empty array\n */\nfunction filterByName(list, name) {\n  const finded = _.filter(list, { 'name': name });\n  if (finded) {\n    return finded;\n  } else {\n    return [];\n  }\n}\n\nfunction filterByRegex(list, regex) {\n  const filterPattern = utils.buildRegex(regex);\n  return _.filter(list, (zbx_obj) => {\n    return filterPattern.test(zbx_obj.name);\n  });\n}\n\nfunction findByFilter(list, filter) {\n  if (utils.isRegex(filter)) {\n    return filterByRegex(list, filter);\n  } else {\n    return findByName(list, filter);\n  }\n}\n\nfunction filterByQuery(list, filter) {\n  if (utils.isRegex(filter)) {\n    return filterByRegex(list, filter);\n  } else {\n    return filterByName(list, filter);\n  }\n}\n\nfunction getHostIds(items) {\n  const hostIds = _.map(items, item => {\n    return _.map(item.hosts, 'hostid');\n  });\n  return _.uniq(_.flatten(hostIds));\n}\n\nfunction filterItemsByTag(items: any[], itemTagFilter: string) {\n  if (utils.isRegex(itemTagFilter)) {\n    const filterPattern = utils.buildRegex(itemTagFilter);\n    return items.filter((item) => {\n      if (item.tags) {\n        const tags: string[] = item.tags.map(t => utils.itemTagToString(t));\n        return tags.some((tag) => {\n          return filterPattern.test(tag);\n        });\n      } else {\n        return false;\n      }\n    });\n  } else {\n    return items.filter(item => {\n      if (item.tags) {\n        const tags: string[] = item.tags.map(t => utils.itemTagToString(t));\n        return tags.includes(itemTagFilter);\n      } else {\n        return false;\n      }\n    });\n  }\n}\n","import _ from 'lodash';\nimport config from 'grafana/app/core/config';\nimport { contextSrv } from 'grafana/app/core/core';\nimport * as dateMath from 'grafana/app/core/utils/datemath';\nimport * as utils from './utils';\nimport * as migrations from './migrations';\nimport * as metricFunctions from './metricFunctions';\nimport * as c from './constants';\nimport dataProcessor from './dataProcessor';\nimport responseHandler from './responseHandler';\nimport problemsHandler from './problemsHandler';\nimport { Zabbix } from './zabbix/zabbix';\nimport { ZabbixAPIError } from './zabbix/connectors/zabbix_api/zabbixAPIConnector';\nimport { ProblemDTO, ShowProblemTypes, VariableQueryTypes, ZabbixDSOptions, ZabbixMetricsQuery } from './types';\nimport { BackendSrvRequest, getBackendSrv, getTemplateSrv, toDataQueryResponse } from '@grafana/runtime';\nimport {\n  DataFrame,\n  dataFrameFromJSON,\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceApi,\n  DataSourceInstanceSettings,\n  FieldType,\n  isDataFrame,\n  LoadingState\n} from '@grafana/data';\n\nexport class ZabbixDatasource extends DataSourceApi<ZabbixMetricsQuery, ZabbixDSOptions> {\n  name: string;\n  basicAuth: any;\n  withCredentials: any;\n\n  trends: boolean;\n  trendsFrom: string;\n  trendsRange: string;\n  cacheTTL: any;\n  disableReadOnlyUsersAck: boolean;\n  disableDataAlignment: boolean;\n  enableDirectDBConnection: boolean;\n  dbConnectionDatasourceId: number;\n  dbConnectionDatasourceName: string;\n  dbConnectionRetentionPolicy: string;\n  enableDebugLog: boolean;\n  datasourceId: number;\n  zabbix: Zabbix;\n\n  replaceTemplateVars: (target: any, scopedVars?: any) => any;\n\n  /** @ngInject */\n  constructor(instanceSettings: DataSourceInstanceSettings<ZabbixDSOptions>, private templateSrv) {\n    super(instanceSettings);\n\n    this.templateSrv = templateSrv;\n    this.enableDebugLog = config.buildInfo.env === 'development';\n\n    // Use custom format for template variables\n    this.replaceTemplateVars = _.partial(replaceTemplateVars, this.templateSrv);\n\n    // General data source settings\n    this.datasourceId = instanceSettings.id;\n    this.name = instanceSettings.name;\n    this.basicAuth = instanceSettings.basicAuth;\n    this.withCredentials = instanceSettings.withCredentials;\n\n    const jsonData = migrations.migrateDSConfig(instanceSettings.jsonData);\n\n    // Use trends instead history since specified time\n    this.trends = jsonData.trends;\n    this.trendsFrom = jsonData.trendsFrom || '7d';\n    this.trendsRange = jsonData.trendsRange || '4d';\n\n    // Set cache update interval\n    const ttl = jsonData.cacheTTL || '1h';\n    this.cacheTTL = utils.parseInterval(ttl);\n\n    // Other options\n    this.disableReadOnlyUsersAck = jsonData.disableReadOnlyUsersAck;\n    this.disableDataAlignment = jsonData.disableDataAlignment;\n\n    // Direct DB Connection options\n    this.enableDirectDBConnection = jsonData.dbConnectionEnable || false;\n    this.dbConnectionDatasourceId = jsonData.dbConnectionDatasourceId;\n    this.dbConnectionDatasourceName = jsonData.dbConnectionDatasourceName;\n    this.dbConnectionRetentionPolicy = jsonData.dbConnectionRetentionPolicy;\n\n    const zabbixOptions = {\n      basicAuth: this.basicAuth,\n      withCredentials: this.withCredentials,\n      cacheTTL: this.cacheTTL,\n      enableDirectDBConnection: this.enableDirectDBConnection,\n      dbConnectionDatasourceId: this.dbConnectionDatasourceId,\n      dbConnectionDatasourceName: this.dbConnectionDatasourceName,\n      dbConnectionRetentionPolicy: this.dbConnectionRetentionPolicy,\n      datasourceId: this.datasourceId,\n    };\n\n    this.zabbix = new Zabbix(zabbixOptions);\n  }\n\n  ////////////////////////\n  // Datasource methods //\n  ////////////////////////\n\n  /**\n   * Query panel data. Calls for each panel in dashboard.\n   * @param  {Object} request   Contains time range, targets and other info.\n   * @return {Object} Grafana metrics object with timeseries data for each target.\n   */\n  query(request: DataQueryRequest<ZabbixMetricsQuery>) {\n    // Migrate old targets\n    const requestTargets = request.targets.map(t => {\n      // Prevent changes of original object\n      const target = _.cloneDeep(t);\n      return migrations.migrate(target);\n    });\n\n    const backendResponsePromise = this.backendQuery({ ...request, targets: requestTargets });\n    const dbConnectionResponsePromise = this.dbConnectionQuery({ ...request, targets: requestTargets });\n    const frontendResponsePromise = this.frontendQuery({ ...request, targets: requestTargets });\n\n    return Promise.all([backendResponsePromise, dbConnectionResponsePromise, frontendResponsePromise])\n    .then(rsp => {\n      // Merge backend and frontend queries results\n      const [backendRes, dbConnectionRes, frontendRes] = rsp;\n      if (dbConnectionRes.data) {\n        backendRes.data = backendRes.data.concat(dbConnectionRes.data);\n      }\n      if (frontendRes.data) {\n        backendRes.data = backendRes.data.concat(frontendRes.data);\n      }\n\n      return {\n        data: backendRes.data,\n        state: LoadingState.Done,\n        key: request.requestId,\n      };\n    });\n  }\n\n  async backendQuery(request: DataQueryRequest<any>): Promise<DataQueryResponse> {\n    const { intervalMs, maxDataPoints, range, requestId } = request;\n    const targets = request.targets.filter(this.isBackendTarget);\n\n    // Add range variables\n    request.scopedVars = Object.assign({}, request.scopedVars, utils.getRangeScopedVars(request.range));\n\n    const queries = _.compact(targets.map((query) => {\n      // Don't request for hidden targets\n      if (query.hide) {\n        return null;\n      }\n\n      this.replaceTargetVariables(query, request);\n\n      return {\n        ...query,\n        datasourceId: this.datasourceId,\n        intervalMs,\n        maxDataPoints,\n      };\n    }));\n\n    // Return early if no queries exist\n    if (!queries.length) {\n      return Promise.resolve({ data: [] });\n    }\n\n    const body: any = { queries };\n\n    if (range) {\n      body.range = range;\n      body.from = range.from.valueOf().toString();\n      body.to = range.to.valueOf().toString();\n    }\n\n    let rsp: any;\n    try {\n      rsp = await getBackendSrv().fetch({\n        url: '/api/ds/query',\n        method: 'POST',\n        data: body,\n        requestId,\n      }).toPromise();\n    } catch (err) {\n      return toDataQueryResponse(err);\n    }\n\n    const resp = toDataQueryResponse(rsp);\n    this.sortByRefId(resp);\n    this.applyFrontendFunctions(resp, request);\n    responseHandler.convertZabbixUnits(resp);\n    if (responseHandler.isConvertibleToWide(resp.data)) {\n      console.log('Converting response to the wide format');\n      resp.data = responseHandler.convertToWide(resp.data);\n    }\n\n    return resp;\n  }\n\n  async frontendQuery(request: DataQueryRequest<any>): Promise<DataQueryResponse> {\n    const frontendTargets = request.targets.filter(t => !(this.isBackendTarget(t) || this.isDBConnectionTarget(t)));\n    const promises = _.map(frontendTargets, target => {\n      // Don't request for hidden targets\n      if (target.hide) {\n        return [];\n      }\n\n      // Add range variables\n      request.scopedVars = Object.assign({}, request.scopedVars, utils.getRangeScopedVars(request.range));\n      this.replaceTargetVariables(target, request);\n      const timeRange = this.buildTimeRange(request, target);\n\n      // Metrics or Text query\n      if (!target.queryType || target.queryType === c.MODE_METRICS || target.queryType === c.MODE_TEXT) {\n        // Don't send request if group/host/item doesn't exist or all filters are empty\n        if (!target.group || !target.host || !target.item || \n          (target.queryType > -1 && !(target.group || {}).filter && !(target.host || {}).filter && !(target.item || {}).filter)) {\n          return [];\n        }\n        return this.queryTextData(target, timeRange);\n      } else if (target.queryType === c.MODE_ITSERVICE) {\n        // IT services query\n        return this.queryITServiceData(target, timeRange, request);\n      } else if (target.queryType === c.MODE_TRIGGERS) {\n        // Triggers query\n        return this.queryTriggersData(target, timeRange);\n      } else if (target.queryType === c.MODE_PROBLEMS) {\n        // Problems query\n        return this.queryProblems(target, timeRange, request);\n      } else {\n        return [];\n      }\n    });\n\n    // Data for panel (all targets)\n    return Promise.all(_.flatten(promises))\n    .then(_.flatten)\n    .then(data => {\n      if (data && data.length > 0 && isDataFrame(data[0]) && !utils.isProblemsDataFrame(data[0])) {\n        data = responseHandler.alignFrames(data);\n        if (responseHandler.isConvertibleToWide(data)) {\n          console.log('Converting response to the wide format');\n          data = responseHandler.convertToWide(data);\n        }\n      }\n      return { data };\n    });\n  }\n\n  async dbConnectionQuery(request: DataQueryRequest<any>): Promise<DataQueryResponse> {\n    const targets = request.targets.filter(this.isDBConnectionTarget);\n\n    const queries = _.compact(targets.map((target) => {\n      // Don't request for hidden targets\n      if (target.hide) {\n        return [];\n      }\n\n      // Add range variables\n      request.scopedVars = Object.assign({}, request.scopedVars, utils.getRangeScopedVars(request.range));\n      this.replaceTargetVariables(target, request);\n      const timeRange = this.buildTimeRange(request, target);\n      const useTrends = this.isUseTrends(timeRange);\n\n      if (!target.queryType || target.queryType === c.MODE_METRICS) {\n        return this.queryNumericData(target, timeRange, useTrends, request);\n      } else if (target.queryType === c.MODE_ITEMID) {\n        // Item ID query\n        if (!target.itemids) {\n          return [];\n        }\n        return this.queryItemIdData(target, timeRange, useTrends, request);\n      } else {\n        return [];\n      }\n    }));\n\n    const promises: Promise<DataQueryResponse> = Promise.all(queries)\n    .then(_.flatten)\n    .then(data => ({ data }));\n\n    return promises;\n  }\n\n  buildTimeRange(request, target) {\n    let timeFrom = Math.ceil(dateMath.parse(request.range.from) / 1000);\n    let timeTo = Math.ceil(dateMath.parse(request.range.to) / 1000);\n\n    // Apply Time-related functions (timeShift(), etc)\n    const timeFunctions = bindFunctionDefs(target.functions, 'Time');\n    if (timeFunctions.length) {\n      const [time_from, time_to] = utils.sequence(timeFunctions)([timeFrom, timeTo]);\n      timeFrom = time_from;\n      timeTo = time_to;\n    }\n    return [timeFrom, timeTo];\n  }\n\n  /**\n   * Query target data for Metrics\n   */\n  async queryNumericData(target, timeRange, useTrends, request): Promise<any> {\n    const getItemOptions = {\n      itemtype: 'num'\n    };\n\n    const items = await this.zabbix.getItemsFromTarget(target, getItemOptions);\n\n    const queryStart = new Date().getTime();\n    const result = await this.queryNumericDataForItems(items, target, timeRange, useTrends, request);\n    const queryEnd = new Date().getTime();\n\n    if (this.enableDebugLog) {\n      console.log(`Datasource::Performance Query Time (${this.name}): ${queryEnd - queryStart}`);\n    }\n\n    return this.handleBackendPostProcessingResponse(result, request, target);\n  }\n\n  /**\n   * Query history for numeric items\n   */\n  async queryNumericDataForItems(items, target: ZabbixMetricsQuery, timeRange, useTrends, request) {\n    let history;\n    request.valueType = this.getTrendValueType(target);\n    request.consolidateBy = getConsolidateBy(target) || request.valueType;\n\n    if (useTrends) {\n      history = await this.zabbix.getTrends(items, timeRange, request);\n    } else {\n      history = await this.zabbix.getHistoryTS(items, timeRange, request);\n    }\n\n    const range = {\n      from: timeRange[0],\n      to: timeRange[1],\n    };\n    return await this.invokeDataProcessingQuery(history, target, range);\n  }\n\n  async invokeDataProcessingQuery(timeSeriesData, query, timeRange) {\n    // Request backend for data processing\n    const requestOptions: BackendSrvRequest = {\n      url: `/api/datasources/${this.datasourceId}/resources/db-connection-post`,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      hideFromInspector: false,\n      data: {\n        series: timeSeriesData,\n        query,\n        timeRange,\n      },\n    };\n\n    const response: any = await getBackendSrv().fetch<any>(requestOptions).toPromise();\n    return response.data;\n  }\n\n  handleBackendPostProcessingResponse(response, request, target) {\n    const frames = [];\n    for (const frameJSON of response) {\n      const frame = dataFrameFromJSON(frameJSON);\n      frame.refId = target.refId;\n      frames.push(frame);\n    }\n\n    const resp = { data: frames };\n    this.sortByRefId(resp);\n    this.applyFrontendFunctions(resp, request);\n    if (responseHandler.isConvertibleToWide(resp.data)) {\n      console.log('Converting response to the wide format');\n      resp.data = responseHandler.convertToWide(resp.data);\n    }\n\n    return resp.data;\n  }\n\n  getTrendValueType(target) {\n    // Find trendValue() function and get specified trend value\n    const trendFunctions = _.map(metricFunctions.getCategories()['Trends'], 'name');\n    const trendValueFunc = _.find(target.functions, func => {\n      return _.includes(trendFunctions, func.def.name);\n    });\n    return trendValueFunc ? trendValueFunc.params[0] : \"avg\";\n  }\n\n  sortByRefId(response: DataQueryResponse) {\n    response.data.sort((a, b) => {\n      if (a.refId < b.refId) {\n        return -1;\n      } else if (a.refId > b.refId) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n\n  applyFrontendFunctions(response: DataQueryResponse, request: DataQueryRequest<any>) {\n    for (let i = 0; i < response.data.length; i++) {\n      const frame: DataFrame = response.data[i];\n      const target = getRequestTarget(request, frame.refId);\n\n      // Apply alias functions\n      const aliasFunctions = bindFunctionDefs(target.functions, 'Alias');\n      utils.sequence(aliasFunctions)(frame);\n    }\n    return response;\n  }\n\n  /**\n   * Query target data for Text\n   */\n  queryTextData(target, timeRange) {\n    const options = {\n      itemtype: 'text'\n    };\n    return this.zabbix.getItemsFromTarget(target, options)\n    .then(items => {\n      return this.zabbix.getHistoryText(items, timeRange, target);\n    })\n    .then(result => {\n      if (target.resultFormat !== 'table') {\n        return result.map(s => responseHandler.seriesToDataFrame(s, target, [], FieldType.string));\n      }\n      return result;\n    });\n  }\n\n  /**\n   * Query target data for Item ID\n   */\n  queryItemIdData(target, timeRange, useTrends, options) {\n    let itemids = target.itemids;\n    itemids = this.templateSrv.replace(itemids, options.scopedVars, zabbixItemIdsTemplateFormat);\n    itemids = _.map(itemids.split(','), itemid => itemid.trim());\n\n    if (!itemids) {\n      return [];\n    }\n\n    return this.zabbix.getItemsByIDs(itemids)\n    .then(items => {\n      return this.queryNumericDataForItems(items, target, timeRange, useTrends, options);\n    });\n  }\n\n  /**\n   * Query target data for IT Services\n   */\n  async queryITServiceData(target, timeRange, request) {\n    // Don't show undefined and hidden targets\n    if (target.hide || (!target.itservice && !target.itServiceFilter) || !target.slaProperty) {\n      return [];\n    }\n\n    let itServiceFilter;\n    request.isOldVersion = target.itservice && !target.itServiceFilter;\n\n    if (request.isOldVersion) {\n      // Backward compatibility\n      itServiceFilter = '/.*/';\n    } else {\n      itServiceFilter = this.replaceTemplateVars(target.itServiceFilter, request.scopedVars);\n    }\n\n    request.slaInterval = target.slaInterval;\n\n    let itservices = await this.zabbix.getITServices(itServiceFilter);\n    if (request.isOldVersion) {\n      itservices = _.filter(itservices, { 'serviceid': target.itservice?.serviceid });\n    }\n    const itservicesdp = await this.zabbix.getSLA(itservices, timeRange, target, request);\n    const backendRequest = responseHandler.itServiceResponseToTimeSeries(itservicesdp, target.slaInterval);\n    const processedResponse = await this.invokeDataProcessingQuery(backendRequest, target, {});\n    return this.handleBackendPostProcessingResponse(processedResponse, request, target);\n  }\n\n  queryTriggersData(target, timeRange) {\n    const [timeFrom, timeTo] = timeRange;\n    return this.zabbix.getHostsFromTarget(target)\n    .then(results => {\n      const [hosts, apps] = results;\n      if (hosts.length) {\n        const hostids = _.map(hosts, 'hostid');\n        const appids = _.map(apps, 'applicationid');\n        const options = {\n          minSeverity: target.triggers.minSeverity,\n          acknowledged: target.triggers.acknowledged,\n          count: target.triggers.count,\n          timeFrom: timeFrom,\n          timeTo: timeTo\n        };\n        const groupFilter = target.group.filter;\n        return Promise.all([\n          this.zabbix.getHostAlerts(hostids, appids, options),\n          this.zabbix.getGroups(groupFilter)\n        ])\n        .then(([triggers, groups]) => {\n          return responseHandler.handleTriggersResponse(triggers, groups, timeRange);\n        });\n      } else {\n        return Promise.resolve([]);\n      }\n    });\n  }\n\n  queryProblems(target: ZabbixMetricsQuery, timeRange, options) {\n    const [timeFrom, timeTo] = timeRange;\n    const userIsEditor = contextSrv.isEditor || contextSrv.isGrafanaAdmin;\n\n    let proxies;\n    let showAckButton = true;\n\n    const showProblems = target.showProblems || ShowProblemTypes.Problems;\n    const showProxy = target.options.hostProxy;\n\n    const getProxiesPromise = showProxy ? this.zabbix.getProxies() : () => [];\n    showAckButton = !this.disableReadOnlyUsersAck || userIsEditor;\n\n    // Replace template variables\n    const groupFilter = this.replaceTemplateVars(target.group?.filter, options.scopedVars);\n    const hostFilter = this.replaceTemplateVars(target.host?.filter, options.scopedVars);\n    const appFilter = this.replaceTemplateVars(target.application?.filter, options.scopedVars);\n    const proxyFilter = this.replaceTemplateVars(target.proxy?.filter, options.scopedVars);\n\n    const triggerFilter = this.replaceTemplateVars(target.trigger?.filter, options.scopedVars);\n    const tagsFilter = this.replaceTemplateVars(target.tags?.filter, options.scopedVars);\n\n    const replacedTarget = {\n      ...target,\n      trigger: { filter: triggerFilter },\n      tags: { filter: tagsFilter },\n    };\n\n    // replaceTemplateVars() builds regex-like string, so we should trim it.\n    const tagsFilterStr = tagsFilter.replace('/^', '').replace('$/', '');\n    const tags = utils.parseTags(tagsFilterStr);\n    tags.forEach(tag => {\n      // Zabbix uses {\"tag\": \"<tag>\", \"value\": \"<value>\", \"operator\": \"<operator>\"} format, where 1 means Equal\n      tag.operator = 1;\n    });\n\n    const problemsOptions: any = {\n      recent: showProblems === ShowProblemTypes.Recent,\n      minSeverity: target.options?.minSeverity,\n      limit: target.options?.limit,\n    };\n\n    if (tags && tags.length) {\n      problemsOptions.tags = tags;\n    }\n\n    if (target.options?.acknowledged === 0 || target.options?.acknowledged === 1) {\n      problemsOptions.acknowledged = !!target.options?.acknowledged;\n    }\n\n    if (target.options?.minSeverity) {\n      let severities = [0, 1, 2, 3, 4, 5].filter(v => v >= target.options?.minSeverity);\n      if (target.options?.severities) {\n        severities = severities.filter(v => target.options?.severities.includes(v));\n      }\n      problemsOptions.severities = severities;\n    }\n\n    let getProblemsPromise: Promise<ProblemDTO[]>;\n    if (showProblems === ShowProblemTypes.History || target.options?.useTimeRange) {\n      problemsOptions.timeFrom = timeFrom;\n      problemsOptions.timeTo = timeTo;\n      getProblemsPromise = this.zabbix.getProblemsHistory(groupFilter, hostFilter, appFilter, proxyFilter, problemsOptions);\n    } else {\n      getProblemsPromise = this.zabbix.getProblems(groupFilter, hostFilter, appFilter, proxyFilter, problemsOptions);\n    }\n\n    const problemsPromises = Promise.all([\n      getProblemsPromise,\n      getProxiesPromise\n    ])\n    .then(([problems, sourceProxies]) => {\n      proxies = _.keyBy(sourceProxies, 'proxyid');\n      return problems;\n    })\n    .then(problems => problemsHandler.setMaintenanceStatus(problems))\n    .then(problems => problemsHandler.setAckButtonStatus(problems, showAckButton))\n    .then(problems => problemsHandler.filterTriggersPre(problems, replacedTarget))\n    .then(problems => problemsHandler.sortProblems(problems, target))\n    .then(problems => problemsHandler.addTriggerDataSource(problems, target))\n    .then(problems => problemsHandler.addTriggerHostProxy(problems, proxies));\n\n    return problemsPromises.then(problems => {\n      const problemsDataFrame = problemsHandler.toDataFrame(problems);\n      return problemsDataFrame;\n    });\n  }\n\n  /**\n   * Test connection to Zabbix API and external history DB.\n   */\n  async testDatasource() {\n    try {\n      const { zabbixVersion, dbConnectorStatus } = await this.zabbix.testDataSource();\n      let message = `Zabbix API version: ${zabbixVersion}`;\n      if (dbConnectorStatus) {\n        message += `, DB connector type: ${dbConnectorStatus.dsType}`;\n      }\n      return {\n        status: \"success\",\n        title: \"Success\",\n        message: message\n      };\n    } catch (error) {\n      if (error instanceof ZabbixAPIError) {\n        return {\n          status: \"error\",\n          title: error.message,\n          message: error.message\n        };\n      } else if (error.data && error.data.message) {\n        return {\n          status: \"error\",\n          title: \"Zabbix Client Error\",\n          message: error.data.message\n        };\n      } else if (typeof (error) === 'string') {\n        return {\n          status: \"error\",\n          title: \"Unknown Error\",\n          message: error\n        };\n      } else {\n        console.log(error);\n        return {\n          status: \"error\",\n          title: \"Connection failed\",\n          message: \"Could not connect to given url\"\n        };\n      }\n    }\n  }\n\n  ////////////////\n  // Templating //\n  ////////////////\n\n  /**\n   * Find metrics from templated request.\n   *\n   * @param  {string} query Query from Templating\n   * @param options\n   * @return {string}       Metric name - group, host, app or item or list\n   *                        of metrics in \"{metric1, metric2,..., metricN}\" format.\n   */\n  metricFindQuery(query, options) {\n    let resultPromise;\n    let queryModel = _.cloneDeep(query);\n\n    if (!query) {\n      return Promise.resolve([]);\n    }\n\n    if (typeof query === 'string') {\n      // Backward compatibility\n      queryModel = utils.parseLegacyVariableQuery(query);\n    }\n\n    for (const prop of ['group', 'host', 'application', 'itemTag', 'item']) {\n      queryModel[prop] = this.replaceTemplateVars(queryModel[prop], {});\n    }\n\n    const { group, host, application, item } = queryModel;\n\n    switch (queryModel.queryType) {\n      case VariableQueryTypes.Group:\n        resultPromise = this.zabbix.getGroups(queryModel.group);\n        break;\n      case VariableQueryTypes.Host:\n        resultPromise = this.zabbix.getHosts(queryModel.group, queryModel.host);\n        break;\n      case VariableQueryTypes.Application:\n        resultPromise = this.zabbix.getApps(queryModel.group, queryModel.host, queryModel.application);\n        break;\n      case VariableQueryTypes.ItemTag:\n        resultPromise = this.zabbix.getItemTags(queryModel.group, queryModel.host, queryModel.itemTag);\n        break;\n      case VariableQueryTypes.Item:\n        resultPromise = this.zabbix.getItems(queryModel.group, queryModel.host, queryModel.application, null, queryModel.item);\n        break;\n      case VariableQueryTypes.ItemValues:\n        const range = options?.range;\n        resultPromise = this.zabbix.getItemValues(group, host, application, item, { range });\n        break;\n      default:\n        resultPromise = Promise.resolve([]);\n        break;\n    }\n\n    return resultPromise.then(metrics => {\n      return _.map(metrics, formatMetric);\n    });\n  }\n\n  targetContainsTemplate(target: ZabbixMetricsQuery): boolean {\n    const templateSrv = getTemplateSrv() as any;\n    return (\n      templateSrv.variableExists(target.group?.filter) ||\n      templateSrv.variableExists(target.host?.filter) ||\n      templateSrv.variableExists(target.application?.filter) ||\n      templateSrv.variableExists(target.itemTag?.filter) ||\n      templateSrv.variableExists(target.item?.filter) ||\n      templateSrv.variableExists(target.proxy?.filter) ||\n      templateSrv.variableExists(target.trigger?.filter) ||\n      templateSrv.variableExists(target.textFilter) ||\n      templateSrv.variableExists(target.itServiceFilter)\n    );\n  }\n\n  /////////////////\n  // Annotations //\n  /////////////////\n\n  annotationQuery(options) {\n    const timeRange = options.range || options.rangeRaw;\n    const timeFrom = Math.ceil(dateMath.parse(timeRange.from) / 1000);\n    const timeTo = Math.ceil(dateMath.parse(timeRange.to) / 1000);\n    const annotation = options.annotation;\n\n    // Show all triggers\n    const problemsOptions: any = {\n      value: annotation.showOkEvents ? ['0', '1'] : '1',\n      valueFromEvent: true,\n      timeFrom,\n      timeTo,\n    };\n\n    if (annotation.minseverity) {\n      const severities = [0, 1, 2, 3, 4, 5].filter(v => v >= Number(annotation.minseverity));\n      problemsOptions.severities = severities;\n    }\n\n    const groupFilter = this.replaceTemplateVars(annotation.group, {});\n    const hostFilter = this.replaceTemplateVars(annotation.host, {});\n    const appFilter = this.replaceTemplateVars(annotation.application, {});\n    const proxyFilter = undefined;\n\n    return this.zabbix.getProblemsHistory(groupFilter, hostFilter, appFilter, proxyFilter, problemsOptions)\n    .then(problems => {\n      // Filter triggers by description\n      const problemName = this.replaceTemplateVars(annotation.trigger, {});\n      if (utils.isRegex(problemName)) {\n        problems = _.filter(problems, p => {\n          return utils.buildRegex(problemName).test(p.description);\n        });\n      } else if (problemName) {\n        problems = _.filter(problems, p => {\n          return p.description === problemName;\n        });\n      }\n\n      // Hide acknowledged events if option enabled\n      if (annotation.hideAcknowledged) {\n        problems = _.filter(problems, p => {\n          return !p.acknowledges?.length;\n        });\n      }\n\n      return _.map(problems, p => {\n        const formattedAcknowledges = utils.formatAcknowledges(p.acknowledges);\n\n        let annotationTags: string[] = [];\n        if (annotation.showHostname) {\n          annotationTags = _.map(p.hosts, 'name');\n        }\n\n        return {\n          title: p.value === '1' ? 'Problem' : 'OK',\n          time: p.timestamp * 1000,\n          annotation: annotation,\n          text: p.name + formattedAcknowledges,\n          tags: annotationTags,\n        };\n      });\n    });\n  }\n\n  // Replace template variables\n  replaceTargetVariables(target, options) {\n    const parts = ['group', 'host', 'application', 'itemTag', 'item'];\n    _.forEach(parts, p => {\n      if (target[p] && target[p].filter) {\n        const hasVars = this.checkForTemplateVariables(target[p].filter, this.templateSrv.getVariables());\n        if (hasVars) {\n          const origValue = target[p].filter;\n          target[p].filter = this.replaceTemplateVars(target[p].filter, options.scopedVars);\n          if (origValue !== target[p].filter) {\n            // Set empty RegExp-filters to '/.*/'\n            if (target[p].filter === '/^$/') {\n              target[p].filter = '/.*/';\n            }\n          }\n        }\n      }\n    });\n\n    if (target.textFilter) {\n      target.textFilter = this.replaceTemplateVars(target.textFilter, options.scopedVars);\n    }\n\n    if (target.itemids) {\n      target.itemids = this.templateSrv.replace(target.itemids, options.scopedVars, zabbixItemIdsTemplateFormat);\n    }\n\n    _.forEach(target.functions, func => {\n      func.params = _.map(func.params, param => {\n        if (typeof param === 'number') {\n          return +this.templateSrv.replace(param.toString(), options.scopedVars);\n        } else {\n          return this.templateSrv.replace(param, options.scopedVars);\n        }\n      });\n    });\n  }\n\n  checkForTemplateVariables(fieldText: string, scopedVars: any[]) {\n    return scopedVars.some((variable: any) => (\n      fieldText.indexOf('$' + variable.name) > -1 || fieldText.indexOf('${' + variable.name + '}') > -1\n    ));\n  }\n\n  isUseTrends(timeRange) {\n    const [timeFrom, timeTo] = timeRange;\n    const useTrendsFrom = Math.ceil(dateMath.parse('now-' + this.trendsFrom) / 1000);\n    const useTrendsRange = Math.ceil(utils.parseInterval(this.trendsRange) / 1000);\n    const useTrends = this.trends && (\n      (timeFrom < useTrendsFrom) ||\n      (timeTo - timeFrom > useTrendsRange)\n    );\n    return useTrends;\n  }\n\n  isBackendTarget = (target: any): boolean => {\n    if (this.enableDirectDBConnection) {\n      return false;\n    }\n\n    return target.queryType === c.MODE_METRICS ||\n      target.queryType === c.MODE_ITEMID;\n  };\n\n  isDBConnectionTarget = (target: any): boolean => {\n    return this.enableDirectDBConnection &&\n      (target.queryType === c.MODE_METRICS || target.queryType === c.MODE_ITEMID);\n  };\n}\n\nfunction bindFunctionDefs(functionDefs, category) {\n  const aggregationFunctions = _.map(metricFunctions.getCategories()[category], 'name');\n  const aggFuncDefs = _.filter(functionDefs, func => {\n    return _.includes(aggregationFunctions, func.def.name);\n  });\n\n  return _.map(aggFuncDefs, func => {\n    const funcInstance = metricFunctions.createFuncInstance(func.def, func.params);\n    return funcInstance.bindFunction(dataProcessor.metricFunctions);\n  });\n}\n\nfunction getConsolidateBy(target) {\n  let consolidateBy;\n  const funcDef = _.find(target.functions, func => {\n    return func.def.name === 'consolidateBy';\n  });\n  if (funcDef && funcDef.params && funcDef.params.length) {\n    consolidateBy = funcDef.params[0];\n  }\n  return consolidateBy;\n}\n\nfunction formatMetric(metricObj) {\n  return {\n    text: metricObj.name,\n    expandable: false\n  };\n}\n\n/**\n * Custom formatter for template variables.\n * Default Grafana \"regex\" formatter returns\n * value1|value2\n * This formatter returns\n * (value1|value2)\n * This format needed for using in complex regex with\n * template variables, for example\n * /CPU $cpu_item.*time/ where $cpu_item is system,user,iowait\n */\nexport function zabbixTemplateFormat(value) {\n  if (typeof value === 'string') {\n    return utils.escapeRegex(value);\n  }\n\n  const escapedValues = _.map(value, utils.escapeRegex);\n  return '(' + escapedValues.join('|') + ')';\n}\n\nfunction zabbixItemIdsTemplateFormat(value) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  return value.join(',');\n}\n\n/**\n * If template variables are used in request, replace it using regex format\n * and wrap with '/' for proper multi-value work. Example:\n * $variable selected as a, b, c\n * We use filter $variable\n * $variable    -> a|b|c    -> /a|b|c/\n * /$variable/  -> /a|b|c/  -> /a|b|c/\n */\nfunction replaceTemplateVars(templateSrv, target, scopedVars) {\n  let replacedTarget = templateSrv.replace(target, scopedVars, zabbixTemplateFormat);\n  if (target && target !== replacedTarget && !utils.isRegex(replacedTarget)) {\n    replacedTarget = '/^' + replacedTarget + '$/';\n  }\n  return replacedTarget;\n}\n\nexport function base64StringToArrowTable(text: string) {\n  const b64 = atob(text);\n  const arr = Uint8Array.from(b64, (c) => {\n    return c.charCodeAt(0);\n  });\n  return arr;\n}\n\nfunction getRequestTarget(request: DataQueryRequest<any>, refId: string): any {\n  for (let i = 0; i < request.targets.length; i++) {\n    const target = request.targets[i];\n    if (target.refId === refId) {\n      return target;\n    }\n  }\n  return null;\n}\n","import { QueryCtrl } from 'grafana/app/plugins/sdk';\nimport _ from 'lodash';\nimport * as c from './constants';\nimport * as utils from './utils';\nimport { itemTagToString } from './utils';\nimport * as metricFunctions from './metricFunctions';\nimport * as migrations from './migrations';\nimport { ShowProblemTypes, ZBXItem, ZBXItemTag } from './types';\nimport { CURRENT_SCHEMA_VERSION } from '../panel-triggers/migrations';\nimport { getTemplateSrv, TemplateSrv } from '@grafana/runtime';\n\nfunction getTargetDefaults() {\n  return {\n    queryType: c.MODE_METRICS,\n    group: { 'filter': \"\" },\n    host: { 'filter': \"\" },\n    application: { 'filter': \"\" },\n    itemTag: { 'filter': \"\" },\n    item: { 'filter': \"\" },\n    functions: [],\n    triggers: {\n      'count': true,\n      'minSeverity': 3,\n      'acknowledged': 2\n    },\n    trigger: { filter: \"\" },\n    tags: { filter: \"\" },\n    proxy: { filter: \"\" },\n    options: {\n      showDisabledItems: false,\n      skipEmptyValues: false,\n      disableDataAlignment: false,\n      useZabbixValueMapping: false,\n    },\n    table: {\n      'skipEmptyValues': false\n    },\n  };\n}\n\nfunction getSLATargetDefaults() {\n  return {\n    slaProperty: { name: \"SLA\", property: \"sla\" },\n    slaInterval: 'none',\n  };\n}\n\nfunction getProblemsTargetDefaults() {\n  return {\n    showProblems: ShowProblemTypes.Problems,\n    options: {\n      minSeverity: 0,\n      sortProblems: 'default',\n      acknowledged: 2,\n      hostsInMaintenance: false,\n      hostProxy: false,\n      limit: c.DEFAULT_ZABBIX_PROBLEMS_LIMIT,\n    },\n  };\n}\n\nfunction getSeverityOptions() {\n  return c.TRIGGER_SEVERITY;\n}\n\nfunction mapSeverityOptionsFromPanel(severityOptions: any[]) {\n  if (!severityOptions) {\n    return [0, 1, 2, 3, 4, 5];\n  }\n\n  const severities = [];\n  for (const sevOption of severityOptions) {\n    if (sevOption.show) {\n      severities.push(sevOption.priority);\n    }\n  }\n  return severities;\n}\n\nexport class ZabbixQueryController extends QueryCtrl {\n  static templateUrl: string;\n\n  zabbix: any;\n  replaceTemplateVars: any;\n  templateSrv: TemplateSrv;\n  editorModes: Array<{ value: string; text: string; queryType: string; }>;\n  slaPropertyList: Array<{ name: string; property: string; }>;\n  slaIntervals: Array<{ text: string; value: string; }>;\n  ackFilters: Array<{ text: string; value: number; }>;\n  problemAckFilters: string[];\n  sortByFields: Array<{ text: string; value: string; }>;\n  showEventsFields: Array<{ text: string; value: number[]; } | { text: string; value: number; }>;\n  showProblemsOptions: Array<{ text: string; value: string; }>;\n  resultFormats: Array<{ text: string; value: string; }>;\n  severityOptions: Array<{ val: number; text: string; }>;\n  getGroupNames: (...args: any[]) => any;\n  getHostNames: (...args: any[]) => any;\n  getApplicationNames: (...args: any[]) => any;\n  getItemNames: (...args: any[]) => any;\n  getITServices: (...args: any[]) => any;\n  getProxyNames: (...args: any[]) => any;\n  getVariables: (...args: any[]) => any;\n  init: () => void;\n  queryOptionsText: string;\n  metric: any;\n  showQueryOptions: boolean;\n  oldTarget: any;\n\n  /** @ngInject */\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n    this.zabbix = this.datasource.zabbix;\n\n    // Use custom format for template variables\n    this.replaceTemplateVars = this.datasource.replaceTemplateVars;\n    this.templateSrv = getTemplateSrv();\n\n    this.editorModes = [\n      { value: 'num', text: 'Metrics', queryType: c.MODE_METRICS },\n      { value: 'text', text: 'Text', queryType: c.MODE_TEXT },\n      { value: 'itservice', text: 'IT Services', queryType: c.MODE_ITSERVICE },\n      { value: 'itemid', text: 'Item ID', queryType: c.MODE_ITEMID },\n      { value: 'triggers', text: 'Triggers', queryType: c.MODE_TRIGGERS },\n      { value: 'problems', text: 'Problems', queryType: c.MODE_PROBLEMS },\n    ];\n\n    this.$scope.editorMode = {\n      METRICS: c.MODE_METRICS,\n      TEXT: c.MODE_TEXT,\n      ITSERVICE: c.MODE_ITSERVICE,\n      ITEMID: c.MODE_ITEMID,\n      TRIGGERS: c.MODE_TRIGGERS,\n      PROBLEMS: c.MODE_PROBLEMS,\n    };\n\n    this.slaPropertyList = [\n      { name: \"Status\", property: \"status\" },\n      { name: \"SLA\", property: \"sla\" },\n      { name: \"OK time\", property: \"okTime\" },\n      { name: \"Problem time\", property: \"problemTime\" },\n      { name: \"Down time\", property: \"downtimeTime\" }\n    ];\n\n    this.slaIntervals = [\n      { text: 'No interval', value: 'none' },\n      { text: 'Auto', value: 'auto' },\n      { text: '1 hour', value: '1h' },\n      { text: '12 hours', value: '12h' },\n      { text: '24 hours', value: '1d' },\n      { text: '1 week', value: '1w' },\n      { text: '1 month', value: '1M' },\n    ];\n\n    this.ackFilters = [\n      { text: 'all triggers', value: 2 },\n      { text: 'unacknowledged', value: 0 },\n      { text: 'acknowledged', value: 1 },\n    ];\n\n    this.problemAckFilters = [\n      'all triggers',\n      'unacknowledged',\n      'acknowledged'\n    ];\n\n    this.sortByFields = [\n      { text: 'Default', value: 'default' },\n      { text: 'Last change', value: 'lastchange' },\n      { text: 'Severity', value: 'severity' },\n    ];\n\n    this.showEventsFields = [\n      { text: 'All', value: [0, 1] },\n      { text: 'OK', value: [0] },\n      { text: 'Problems', value: 1 }\n    ];\n\n    this.showProblemsOptions = [\n      { text: 'Problems', value: 'problems' },\n      { text: 'Recent problems', value: 'recent' },\n      { text: 'History', value: 'history' },\n    ];\n\n    this.resultFormats = [{ text: 'Time series', value: 'time_series' }, { text: 'Table', value: 'table' }];\n\n    this.severityOptions = getSeverityOptions();\n\n    // Map functions for bs-typeahead\n    this.getGroupNames = _.bind(this.getMetricNames, this, 'groupList');\n    this.getHostNames = _.bind(this.getMetricNames, this, 'hostList', true);\n    this.getApplicationNames = _.bind(this.getMetricNames, this, 'appList');\n    this.getItemNames = _.bind(this.getMetricNames, this, 'itemList');\n    this.getITServices = _.bind(this.getMetricNames, this, 'itServiceList');\n    this.getProxyNames = _.bind(this.getMetricNames, this, 'proxyList');\n    this.getVariables = _.bind(this.getTemplateVariables, this);\n\n    // Update metric suggestion when template variable was changed\n    $rootScope.$on('template-variable-value-updated', () => this.onVariableChange());\n\n    // Update metrics when item selected from dropdown\n    $scope.$on('typeahead-updated', () => {\n      this.onTargetBlur();\n    });\n\n    this.init = () => {\n      let target = this.target;\n\n      // Migrate old targets\n      target = migrations.migrate(target);\n      this.refresh();\n\n      const scopeDefaults = {\n        metric: {},\n        oldTarget: _.cloneDeep(this.target),\n        queryOptionsText: this.renderQueryOptionsText()\n      };\n      _.defaults(this, scopeDefaults);\n\n      // Load default values\n      const targetDefaults = getTargetDefaults();\n      _.defaultsDeep(target, targetDefaults);\n      this.initDefaultQueryMode(target);\n\n      if (this.panel.type === c.ZABBIX_PROBLEMS_PANEL_ID) {\n        target.queryType = c.MODE_PROBLEMS;\n        target.options.severities = mapSeverityOptionsFromPanel(this.panel.triggerSeverity);\n      }\n\n      // Create function instances from saved JSON\n      target.functions = _.map(target.functions, func => {\n        return metricFunctions.createFuncInstance(func.def, func.params);\n      });\n\n      if (target.queryType === c.MODE_ITSERVICE) {\n        _.defaultsDeep(target, getSLATargetDefaults());\n      }\n\n      if (target.queryType === c.MODE_PROBLEMS) {\n        _.defaultsDeep(target, getProblemsTargetDefaults());\n      }\n\n      if (target.queryType === c.MODE_METRICS ||\n        target.queryType === c.MODE_TEXT ||\n        target.queryType === c.MODE_TRIGGERS ||\n        target.queryType === c.MODE_PROBLEMS) {\n        this.initFilters();\n      } else if (target.queryType === c.MODE_ITSERVICE) {\n        this.suggestITServices();\n      }\n    };\n\n    // Update panel schema version to prevent unnecessary migrations\n    if (this.panel.type === c.ZABBIX_PROBLEMS_PANEL_ID) {\n      this.panel.schemaVersion = CURRENT_SCHEMA_VERSION;\n    }\n\n    this.init();\n    this.queryOptionsText = this.renderQueryOptionsText();\n  }\n\n  initFilters() {\n    const mode = _.find(this.editorModes, { 'queryType': this.target.queryType });\n    const itemtype = mode ? mode.value : null;\n    const promises = [\n      this.suggestGroups(),\n      this.suggestHosts(),\n      this.suggestApps(),\n    ];\n\n    if (this.target.queryType === c.MODE_METRICS || this.target.queryType === c.MODE_TEXT) {\n      promises.push(this.suggestItems(itemtype));\n    }\n\n    if (this.target.queryType === c.MODE_PROBLEMS) {\n      promises.push(this.suggestProxies());\n    }\n\n    return Promise.all(promises).then(() => {\n      if (this.zabbix.isZabbix54OrHigher()) {\n        this.suggestItemTags()\n        .then(() => this.$scope.$apply());\n      }\n    });\n  }\n\n  initDefaultQueryMode(target) {\n    if (!(target.queryType === c.MODE_METRICS ||\n      target.queryType === c.MODE_TEXT ||\n      target.queryType === c.MODE_ITSERVICE ||\n      target.queryType === c.MODE_ITEMID ||\n      target.queryType === c.MODE_TRIGGERS ||\n      target.queryType === c.MODE_PROBLEMS)) {\n      target.queryType = c.MODE_METRICS;\n    }\n  }\n\n  // Get list of metric names for bs-typeahead directive\n  getMetricNames(metricList, addAllValue) {\n    const metrics = _.uniq(_.map(this.metric[metricList], 'name'));\n\n    // Add template variables\n    _.forEach(this.templateSrv.getVariables(), variable => {\n      metrics.unshift('$' + variable.name);\n    });\n\n    if (addAllValue) {\n      metrics.unshift('/.*/');\n    }\n\n    return metrics;\n  }\n\n  getItemTags = () => {\n    if (!this.metric?.tagList) {\n      return [];\n    }\n    const tags = this.metric.tagList.map(t => itemTagToString(t));\n\n    // Add template variables\n    _.forEach(this.templateSrv.getVariables(), variable => {\n      tags.unshift('$' + variable.name);\n    });\n\n    return tags;\n  };\n\n  getTemplateVariables() {\n    return _.map(this.templateSrv.getVariables(), variable => {\n      return '$' + variable.name;\n    });\n  }\n\n  isZabbix54OrHigher() {\n    return this.zabbix.isZabbix54OrHigher();\n  }\n\n  suggestGroups() {\n    return this.zabbix.getAllGroups()\n    .then(groups => {\n      this.metric.groupList = groups;\n      return groups;\n    });\n  }\n\n  suggestHosts() {\n    const groupFilter = this.replaceTemplateVars(this.target.group.filter);\n    return this.zabbix.getAllHosts(groupFilter)\n    .then(hosts => {\n      this.metric.hostList = hosts;\n      return hosts;\n    });\n  }\n\n  suggestApps() {\n    const groupFilter = this.replaceTemplateVars(this.target.group.filter);\n    const hostFilter = this.replaceTemplateVars(this.target.host.filter);\n    return this.zabbix.getAllApps(groupFilter, hostFilter)\n    .then(apps => {\n      this.metric.appList = apps;\n      return apps;\n    });\n  }\n\n  suggestItems(itemtype = 'num') {\n    const groupFilter = this.replaceTemplateVars(this.target.group.filter);\n    const hostFilter = this.replaceTemplateVars(this.target.host.filter);\n    const appFilter = this.replaceTemplateVars(this.target.application.filter);\n    const itemTagFilter = this.replaceTemplateVars(this.target.itemTag.filter);\n    const options = {\n      itemtype: itemtype,\n      showDisabledItems: this.target.options.showDisabledItems\n    };\n\n    return this.zabbix\n    .getAllItems(groupFilter, hostFilter, appFilter, itemTagFilter, options)\n    .then(items => {\n      this.metric.itemList = items;\n      return items;\n    });\n  }\n\n  async suggestItemTags() {\n    const groupFilter = this.replaceTemplateVars(this.target.group.filter);\n    const hostFilter = this.replaceTemplateVars(this.target.host.filter);\n    const items = await this.zabbix.getAllItems(groupFilter, hostFilter, null, null, {});\n    const tags: ZBXItemTag[] = _.flatten(items.map((item: ZBXItem) => {\n      if (item.tags) {\n        return item.tags;\n      } else {\n        return [];\n      }\n    }));\n    this.metric.tagList = _.uniqBy(tags, t => t.tag + t.value || '');\n  }\n\n  suggestITServices() {\n    return this.zabbix.getITService()\n    .then(itservices => {\n      this.metric.itServiceList = itservices;\n      return itservices;\n    });\n  }\n\n  suggestProxies() {\n    return this.zabbix.getProxies()\n    .then(response => {\n      const proxies = _.map(response, 'host');\n      this.metric.proxyList = proxies;\n      return proxies;\n    });\n  }\n\n  isRegex(str) {\n    return utils.isRegex(str);\n  }\n\n  isVariable(str) {\n    return utils.isTemplateVariable(str, this.templateSrv.getVariables());\n  }\n\n  onTargetBlur() {\n    const newTarget = _.cloneDeep(this.target);\n    if (!_.isEqual(this.oldTarget, this.target)) {\n      this.oldTarget = newTarget;\n      this.targetChanged();\n    }\n  }\n\n  onVariableChange() {\n    if (this.isContainsVariables()) {\n      this.targetChanged();\n    }\n  }\n\n  /**\n   * Check query for template variables\n   */\n  isContainsVariables() {\n    return _.some(['group', 'host', 'application'], field => {\n      if (this.target[field] && this.target[field].filter) {\n        return utils.isTemplateVariable(this.target[field].filter, this.templateSrv.getVariables());\n      } else {\n        return false;\n      }\n    });\n  }\n\n  parseTarget() {\n    // Parse target\n  }\n\n  // Validate target and set validation info\n  validateTarget() {\n    // validate\n  }\n\n  targetChanged() {\n    this.initFilters();\n    this.parseTarget();\n    this.refresh();\n  }\n\n  addFunction(funcDef) {\n    const newFunc = metricFunctions.createFuncInstance(funcDef);\n    newFunc.added = true;\n    this.target.functions.push(newFunc);\n\n    this.moveAliasFuncLast();\n\n    if (newFunc.params.length && newFunc.added ||\n      newFunc.def.params.length === 0) {\n      this.targetChanged();\n    }\n  }\n\n  removeFunction(func) {\n    this.target.functions = _.without(this.target.functions, func);\n    this.targetChanged();\n  }\n\n  moveFunction(func, offset) {\n    const index = this.target.functions.indexOf(func);\n    // @ts-ignore\n    _.move(this.target.functions, index, index + offset);\n    this.targetChanged();\n  }\n\n  moveAliasFuncLast() {\n    const aliasFunc = _.find(this.target.functions, func => {\n      return func.def.category === 'Alias';\n    });\n\n    if (aliasFunc) {\n      this.target.functions = _.without(this.target.functions, aliasFunc);\n      this.target.functions.push(aliasFunc);\n    }\n  }\n\n  toggleQueryOptions() {\n    this.showQueryOptions = !this.showQueryOptions;\n  }\n\n  onQueryOptionChange() {\n    this.queryOptionsText = this.renderQueryOptionsText();\n    this.onTargetBlur();\n  }\n\n  renderQueryOptionsText() {\n    const metricOptionsMap = {\n      showDisabledItems: \"Show disabled items\",\n      disableDataAlignment: \"Disable data alignment\",\n      useZabbixValueMapping: \"Use Zabbix value mapping\",\n    };\n\n    const problemsOptionsMap = {\n      sortProblems: \"Sort problems\",\n      acknowledged: \"Acknowledged\",\n      skipEmptyValues: \"Skip empty values\",\n      hostsInMaintenance: \"Show hosts in maintenance\",\n      limit: \"Limit problems\",\n      hostProxy: \"Show proxy\",\n      useTimeRange: \"Use time range\",\n    };\n\n    let optionsMap = {};\n\n    if (this.target.queryType === c.MODE_METRICS) {\n      optionsMap = metricOptionsMap;\n    } else if (this.target.queryType === c.MODE_PROBLEMS || this.target.queryType === c.MODE_TRIGGERS) {\n      optionsMap = problemsOptionsMap;\n    }\n\n    const options = [];\n    _.forOwn(this.target.options, (value, key) => {\n      if (value && optionsMap[key]) {\n        if (value === true) {\n          // Show only option name (if enabled) for boolean options\n          options.push(optionsMap[key]);\n        } else {\n          // Show \"option = value\" for another options\n          let optionValue = value;\n          if (value && value.text) {\n            optionValue = value.text;\n          } else if (value && value.value) {\n            optionValue = value.value;\n          }\n          options.push(optionsMap[key] + \" = \" + optionValue);\n        }\n      }\n    });\n    return \"Options: \" + options.join(', ');\n  }\n\n  /**\n   * Switch query editor to specified mode.\n   * Modes:\n   *  0 - items\n   *  1 - IT services\n   *  2 - Text metrics\n   */\n  switchEditorMode(mode) {\n    this.target.queryType = mode;\n    this.queryOptionsText = this.renderQueryOptionsText();\n    this.init();\n    this.targetChanged();\n  }\n\n  appFilterDisabled() {\n    return !this.zabbix.supportsApplications();\n  }\n}\n","import React, { FC } from 'react';\nimport { css, cx } from '@emotion/css';\nimport { EventsWithValidation, ValidationEvents, useTheme } from '@grafana/ui';\nimport { GrafanaTheme } from '@grafana/data';\nimport { isRegex, variableRegex } from '../utils';\n\nimport * as grafanaUi from '@grafana/ui';\nconst Input = (grafanaUi as any).LegacyForms?.Input || (grafanaUi as any).Input;\n\nconst variablePattern = RegExp(`^${variableRegex.source}`);\n\nconst getStyles = (theme: GrafanaTheme) => ({\n  inputRegex: css`\n    color: ${theme.palette.orange}\n  `,\n  inputVariable: css`\n    color: ${theme.colors.textBlue}\n  `,\n});\n\nconst zabbixInputValidationEvents: ValidationEvents = {\n  [EventsWithValidation.onBlur]: [\n    {\n      rule: value => {\n        if (!value) {\n          return true;\n        }\n        if (value.length > 1 && value[0] === '/') {\n          if (value[value.length - 1] !== '/') {\n            return false;\n          }\n        }\n        return true;\n      },\n      errorMessage: 'Not a valid regex',\n    },\n    {\n      rule: value => {\n        if (value === '*') {\n          return false;\n        }\n        return true;\n      },\n      errorMessage: 'Wildcards not supported. Use /.*/ instead',\n    },\n  ],\n};\n\nexport const ZabbixInput: FC<any> = ({ value, ref, validationEvents, ...restProps }) => {\n  const theme = useTheme();\n  const styles = getStyles(theme);\n\n  let inputClass = styles.inputRegex;\n  if (variablePattern.test(value as string)) {\n    inputClass = styles.inputVariable;\n  } else if (isRegex(value)) {\n    inputClass = styles.inputRegex;\n  }\n\n  return (\n    <Input\n      className={inputClass}\n      value={value}\n      validationEvents={zabbixInputValidationEvents}\n      {...restProps}\n    />\n  );\n};\n","import React, { PureComponent } from 'react';\nimport { parseLegacyVariableQuery } from '../utils';\nimport { SelectableValue } from '@grafana/data';\nimport { VariableQuery, VariableQueryData, VariableQueryProps, VariableQueryTypes } from '../types';\nimport { ZabbixInput } from './ZabbixInput';\nimport { InlineFormLabel, Input, Select } from '@grafana/ui';\n\nexport class ZabbixVariableQueryEditor extends PureComponent<VariableQueryProps, VariableQueryData> {\n  queryTypes: Array<SelectableValue<VariableQueryTypes>> = [\n    { value: VariableQueryTypes.Group, label: 'Group' },\n    { value: VariableQueryTypes.Host, label: 'Host' },\n    { value: VariableQueryTypes.Application, label: 'Application' },\n    { value: VariableQueryTypes.ItemTag, label: 'Item tag' },\n    { value: VariableQueryTypes.Item, label: 'Item' },\n    { value: VariableQueryTypes.ItemValues, label: 'Item values' },\n  ];\n\n  defaults: VariableQueryData = {\n    selectedQueryType: { value: VariableQueryTypes.Group, label: 'Group' },\n    queryType: VariableQueryTypes.Group,\n    group: '/.*/',\n    host: '',\n    application: '',\n    itemTag: '',\n    item: '',\n  };\n\n  constructor(props: VariableQueryProps) {\n    super(props);\n\n    if (this.props.query && typeof this.props.query === 'string') {\n      // Backward compatibility\n      const query = parseLegacyVariableQuery(this.props.query);\n      const selectedQueryType = this.getSelectedQueryType(query.queryType);\n      this.state = {\n        selectedQueryType,\n        legacyQuery: this.props.query,\n        ...query\n      };\n    } else if (this.props.query) {\n      const query = (this.props.query as VariableQuery);\n      const selectedQueryType = this.getSelectedQueryType(query.queryType);\n      this.state = {\n        ...this.defaults,\n        ...query,\n        selectedQueryType,\n      };\n    } else {\n      this.state = this.defaults;\n    }\n  }\n\n  getSelectedQueryType(queryType: VariableQueryTypes) {\n    return this.queryTypes.find(q => q.value === queryType);\n  }\n\n  handleQueryUpdate = (evt: React.ChangeEvent<HTMLInputElement>, prop: string) => {\n    const value = evt.currentTarget.value;\n    this.setState((prevState: VariableQueryData) => {\n      const newQuery = {\n        ...prevState,\n      };\n      newQuery[prop] = value;\n\n      return {\n        ...newQuery,\n      };\n    });\n  };\n\n  handleQueryChange = () => {\n    const { queryType, group, host, application, itemTag, item } = this.state;\n    const queryModel = { queryType, group, host, application, itemTag, item };\n    this.props.onChange(queryModel, `Zabbix - ${queryType}`);\n  };\n\n  handleQueryTypeChange = (selectedItem: SelectableValue<VariableQueryTypes>) => {\n    this.setState({\n      ...this.state,\n      selectedQueryType: selectedItem,\n      queryType: selectedItem.value,\n    });\n\n    const { group, host, application, itemTag, item } = this.state;\n    const queryType = selectedItem.value;\n    const queryModel = { queryType, group, host, application, itemTag, item };\n    this.props.onChange(queryModel, `Zabbix - ${queryType}`);\n  };\n\n  render() {\n    const { selectedQueryType, legacyQuery, group, host, application, itemTag, item } = this.state;\n    const { datasource } = this.props;\n    const supportsItemTags = datasource?.zabbix?.isZabbix54OrHigher() || false;\n\n    return (\n      <>\n        <div className=\"gf-form max-width-21\">\n          <InlineFormLabel width={10}>Query Type</InlineFormLabel>\n          <Select\n            width={11}\n            value={selectedQueryType}\n            options={this.queryTypes}\n            onChange={this.handleQueryTypeChange}\n          />\n        </div>\n        <div className=\"gf-form-inline\">\n          <div className=\"gf-form max-width-30\">\n            <InlineFormLabel width={10}>Group</InlineFormLabel>\n            <ZabbixInput\n              value={group}\n              onChange={evt => this.handleQueryUpdate(evt, 'group')}\n              onBlur={this.handleQueryChange}\n            />\n          </div>\n          {selectedQueryType.value !== VariableQueryTypes.Group &&\n          <div className=\"gf-form max-width-30\">\n            <InlineFormLabel width={10}>Host</InlineFormLabel>\n            <ZabbixInput\n              value={host}\n              onChange={evt => this.handleQueryUpdate(evt, 'host')}\n              onBlur={this.handleQueryChange}\n            />\n          </div>\n          }\n        </div>\n        {(selectedQueryType.value === VariableQueryTypes.Application ||\n          selectedQueryType.value === VariableQueryTypes.ItemTag ||\n          selectedQueryType.value === VariableQueryTypes.Item ||\n          selectedQueryType.value === VariableQueryTypes.ItemValues) &&\n        <div className=\"gf-form-inline\">\n          {supportsItemTags && (\n            <div className=\"gf-form max-width-30\">\n              <InlineFormLabel width={10}>Item tag</InlineFormLabel>\n              <ZabbixInput\n                value={itemTag}\n                onChange={evt => this.handleQueryUpdate(evt, 'itemTag')}\n                onBlur={this.handleQueryChange}\n              />\n            </div>\n          )}\n          {!supportsItemTags && (\n            <div className=\"gf-form max-width-30\">\n              <InlineFormLabel width={10}>Application</InlineFormLabel>\n              <ZabbixInput\n                value={application}\n                onChange={evt => this.handleQueryUpdate(evt, 'application')}\n                onBlur={this.handleQueryChange}\n              />\n            </div>\n          )}\n          {(selectedQueryType.value === VariableQueryTypes.Item ||\n            selectedQueryType.value === VariableQueryTypes.ItemValues) &&\n          <div className=\"gf-form max-width-30\">\n            <InlineFormLabel width={10}>Item</InlineFormLabel>\n            <ZabbixInput\n              value={item}\n              onChange={evt => this.handleQueryUpdate(evt, 'item')}\n              onBlur={this.handleQueryChange}\n            />\n          </div>\n          }\n        </div>\n        }\n\n        {legacyQuery &&\n        <div className=\"gf-form\">\n          <InlineFormLabel width={10} tooltip=\"Original query string, read-only\">Legacy Query</InlineFormLabel>\n          <Input\n            css=\"\"\n            value={legacyQuery}\n            readOnly={true}\n          />\n        </div>\n        }\n      </>\n    );\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { getDataSourceSrv } from '@grafana/runtime';\nimport { DataSourcePluginOptionsEditorProps, DataSourceSettings, SelectableValue } from '@grafana/data';\nimport { Button, DataSourceHttpSettings, InlineFormLabel, LegacyForms, Select } from '@grafana/ui';\nimport { ZabbixDSOptions, ZabbixSecureJSONData } from '../types';\n\nconst { FormField, Switch } = LegacyForms;\n\nconst SUPPORTED_SQL_DS = ['mysql', 'postgres', 'influxdb'];\n\nexport type Props = DataSourcePluginOptionsEditorProps<ZabbixDSOptions, ZabbixSecureJSONData>;\nexport const ConfigEditor = (props: Props) => {\n  const { options, onOptionsChange } = props;\n\n  const [selectedDBDatasource, setSelectedDBDatasource] = useState(null);\n  const [currentDSType, setCurrentDSType] = useState('');\n\n  // Apply some defaults on initial render\n  useEffect(() => {\n    const { jsonData, secureJsonFields } = options;\n\n    // Set secureJsonFields.password to password and then remove it from config\n    const { password, ...restJsonData } = jsonData;\n    if (!secureJsonFields?.password) {\n      if (!options.secureJsonData) {\n        options.secureJsonData = {};\n      }\n      options.secureJsonData.password = password;\n    }\n\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        trends: true,\n        trendsFrom: '',\n        trendsRange: '',\n        cacheTTL: '',\n        timeout: undefined,\n        disableDataAlignment: false,\n        ...restJsonData,\n      },\n    });\n\n    if (options.jsonData.dbConnectionEnable) {\n      if (!options.jsonData.dbConnectionDatasourceId) {\n        const dsName = options.jsonData.dbConnectionDatasourceName;\n        getDataSourceSrv().get(dsName)\n        .then(ds => {\n          if (ds) {\n            const selectedDs = getDirectDBDatasources().find(dsOption => dsOption.id === ds.id);\n            setSelectedDBDatasource({ label: selectedDs.name, value: selectedDs.id });\n            setCurrentDSType(selectedDs.type);\n            onOptionsChange({\n              ...options,\n              jsonData: {\n                ...options.jsonData,\n                dbConnectionDatasourceId: ds.id,\n              },\n            });\n          }\n        });\n      } else {\n        const selectedDs = getDirectDBDatasources().find(dsOption => dsOption.id === options.jsonData.dbConnectionDatasourceId);\n        setSelectedDBDatasource({ label: selectedDs.name, value: selectedDs.id });\n        setCurrentDSType(selectedDs.type);\n      }\n    }\n  }, []);\n\n  return (\n    <>\n      <DataSourceHttpSettings\n        defaultUrl={'http://localhost/zabbix/api_jsonrpc.php'}\n        dataSourceConfig={options}\n        showAccessOptions={true}\n        onChange={onOptionsChange}\n      />\n\n      <div className=\"gf-form-group\">\n        <h3 className=\"page-heading\">Zabbix API details</h3>\n        <div className=\"gf-form max-width-25\">\n          <FormField\n            labelWidth={7}\n            inputWidth={15}\n            label=\"Username\"\n            value={options.jsonData.username || ''}\n            onChange={jsonDataChangeHandler('username', options, onOptionsChange)}\n            required\n          />\n        </div>\n        <div className=\"gf-form max-width-25\">\n          {options.secureJsonFields?.password ?\n            <>\n              <FormField\n                labelWidth={7}\n                inputWidth={15}\n                label=\"Password\"\n                disabled={true}\n                value=\"\"\n                placeholder=\"Configured\"\n              />\n              <Button onClick={resetSecureJsonField('password', options, onOptionsChange)}>Reset</Button>\n            </> :\n            <FormField\n              labelWidth={7}\n              inputWidth={15}\n              label=\"Password\"\n              type=\"password\"\n              value={options.secureJsonData?.password || options.jsonData.password || ''}\n              onChange={secureJsonDataChangeHandler('password', options, onOptionsChange)}\n              required\n            />\n          }\n        </div>\n        <Switch\n          label=\"Trends\"\n          labelClass=\"width-7\"\n          checked={options.jsonData.trends}\n          onChange={jsonDataSwitchHandler('trends', options, onOptionsChange)}\n        />\n        {options.jsonData.trends &&\n        <>\n          <div className=\"gf-form\">\n            <FormField\n              labelWidth={7}\n              inputWidth={4}\n              label=\"After\"\n              value={options.jsonData.trendsFrom || ''}\n              placeholder=\"7d\"\n              onChange={jsonDataChangeHandler('trendsFrom', options, onOptionsChange)}\n              tooltip=\"Time after which trends will be used.\n                  Best practice is to set this value to your history storage period (7d, 30d, etc).\"\n            />\n          </div>\n          <div className=\"gf-form\">\n            <FormField\n              labelWidth={7}\n              inputWidth={4}\n              label=\"Range\"\n              value={options.jsonData.trendsRange || ''}\n              placeholder=\"4d\"\n              onChange={jsonDataChangeHandler('trendsRange', options, onOptionsChange)}\n              tooltip=\"Time range width after which trends will be used instead of history.\n                  It's better to set this value in range of 4 to 7 days to prevent loading large amount of history data.\"\n            />\n          </div>\n        </>\n        }\n        <div className=\"gf-form\">\n          <FormField\n            labelWidth={7}\n            inputWidth={4}\n            label=\"Cache TTL\"\n            value={options.jsonData.cacheTTL || ''}\n            placeholder=\"1h\"\n            onChange={jsonDataChangeHandler('cacheTTL', options, onOptionsChange)}\n            tooltip=\"Zabbix data source caches metric names in memory. Specify how often data will be updated.\"\n          />\n        </div>\n        <div className=\"gf-form\">\n          <FormField\n            labelWidth={7}\n            inputWidth={4}\n            type=\"number\"\n            label=\"Timeout\"\n            value={options.jsonData.timeout}\n            onChange={(event) => {\n              onOptionsChange({\n                ...options,\n                jsonData: { ...options.jsonData, timeout: parseInt(event.currentTarget.value, 10) },\n              });\n            }}\n            tooltip=\"Zabbix API connection timeout in seconds. Default is 30.\"\n          />\n        </div>\n      </div>\n\n      <div className=\"gf-form-group\">\n        <h3 className=\"page-heading\">Direct DB Connection</h3>\n        <Switch\n          label=\"Enable\"\n          labelClass=\"width-9\"\n          checked={options.jsonData.dbConnectionEnable}\n          onChange={jsonDataSwitchHandler('dbConnectionEnable', options, onOptionsChange)}\n        />\n        {options.jsonData.dbConnectionEnable &&\n        <>\n          <div className=\"gf-form\">\n            <InlineFormLabel width={9}>Data Source</InlineFormLabel>\n            <Select\n              width={32}\n              options={getDirectDBDSOptions()}\n              value={selectedDBDatasource}\n              onChange={directDBDatasourceChanegeHandler(options, onOptionsChange, setSelectedDBDatasource, setCurrentDSType)}\n            />\n          </div>\n          {currentDSType === 'influxdb' &&\n          <div className=\"gf-form\">\n            <FormField\n              labelWidth={9}\n              inputWidth={16}\n              label=\"Retention Policy\"\n              value={options.jsonData.dbConnectionRetentionPolicy || ''}\n              placeholder=\"Retention policy name\"\n              onChange={jsonDataChangeHandler('dbConnectionRetentionPolicy', options, onOptionsChange)}\n              tooltip=\"Specify retention policy name for fetching long-term stored data (optional).\n                    Leave it blank if only default retention policy used.\"\n            />\n          </div>\n          }\n        </>\n        }\n      </div>\n\n      <div className=\"gf-form-group\">\n        <h3 className=\"page-heading\">Other</h3>\n        <Switch\n          label=\"Disable acknowledges for read-only users\"\n          labelClass=\"width-16\"\n          checked={options.jsonData.disableReadOnlyUsersAck}\n          onChange={jsonDataSwitchHandler('disableReadOnlyUsersAck', options, onOptionsChange)}\n        />\n        <Switch\n          label=\"Disable data alignment\"\n          labelClass=\"width-16\"\n          checked={!!options.jsonData.disableDataAlignment}\n          onChange={jsonDataSwitchHandler('disableDataAlignment', options, onOptionsChange)}\n          tooltip=\"Data alignment feature aligns points based on item update interval.\n            For instance, if value collected once per minute, then timestamp of the each point will be set to the start of corresponding minute.\n            This alignment required for proper work of the stacked graphs.\n            If you don't need stacked graphs and want to get exactly the same timestamps as in Zabbix, then you can disable this feature.\"\n        />\n      </div>\n    </>\n  );\n};\n\nconst jsonDataChangeHandler = (\n  key: keyof ZabbixDSOptions,\n  value: DataSourceSettings<ZabbixDSOptions, ZabbixSecureJSONData>,\n  onChange: Props['onOptionsChange']\n) => (\n  event: React.SyntheticEvent<HTMLInputElement | HTMLSelectElement>\n) => {\n  onChange({\n    ...value,\n    jsonData: {\n      ...value.jsonData,\n      [key]: event.currentTarget.value,\n    },\n  });\n};\n\nconst jsonDataSwitchHandler = (\n  key: keyof ZabbixDSOptions,\n  value: DataSourceSettings<ZabbixDSOptions, ZabbixSecureJSONData>,\n  onChange: Props['onOptionsChange']\n) => (\n  event: React.SyntheticEvent<HTMLInputElement>\n) => {\n  onChange({\n    ...value,\n    jsonData: {\n      ...value.jsonData,\n      [key]: (event.target as HTMLInputElement).checked,\n    },\n  });\n};\n\nconst secureJsonDataChangeHandler = (\n  key: keyof ZabbixDSOptions,\n  value: DataSourceSettings<ZabbixDSOptions, ZabbixSecureJSONData>,\n  onChange: Props['onOptionsChange']\n) => (\n  event: React.SyntheticEvent<HTMLInputElement | HTMLSelectElement>\n) => {\n  onChange({\n    ...value,\n    secureJsonData: {\n      ...value.secureJsonData,\n      [key]: event.currentTarget.value,\n    },\n  });\n};\n\nconst resetSecureJsonField = (\n  key: keyof ZabbixDSOptions,\n  value: DataSourceSettings<ZabbixDSOptions, ZabbixSecureJSONData>,\n  onChange: Props['onOptionsChange']\n) => (\n  event: React.SyntheticEvent<HTMLButtonElement>\n) => {\n  onChange({\n    ...value,\n    secureJsonFields: {\n      ...value.secureJsonFields,\n      [key]: false,\n    },\n  });\n};\n\nconst directDBDatasourceChanegeHandler = (\n  options: DataSourceSettings<ZabbixDSOptions, ZabbixSecureJSONData>,\n  onChange: Props['onOptionsChange'],\n  setSelectedDS: React.Dispatch<any>,\n  setSelectedDSType: React.Dispatch<any>,\n) => (\n  value: SelectableValue<number>\n) => {\n  const selectedDs = getDirectDBDatasources().find(dsOption => dsOption.id === value.value);\n  setSelectedDS({ label: selectedDs.name, value: selectedDs.id });\n  setSelectedDSType(selectedDs.type);\n  onChange({\n    ...options,\n    jsonData: {\n      ...options.jsonData,\n      dbConnectionDatasourceId: value.value\n    },\n  });\n};\n\nconst getDirectDBDatasources = () => {\n  let dsList = (getDataSourceSrv() as any).getAll();\n  dsList = dsList.filter(ds => SUPPORTED_SQL_DS.includes(ds.type));\n  return dsList;\n};\n\nconst getDirectDBDSOptions = () => {\n  const dsList = getDirectDBDatasources();\n  const dsOpts: Array<SelectableValue<number>> = dsList.map(ds => ({ label: ds.name, value: ds.id, description: ds.type }));\n  return dsOpts;\n};\n","import angular from 'angular';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport * as metricFunctions from './metricFunctions';\n\nangular\n  .module('grafana.directives')\n  .directive('addMetricFunction',\n\n  /** @ngInject */\n  function($compile) {\n    var inputTemplate = '<input type=\"text\"'+\n                          ' class=\"gf-form-input\"' +\n                          ' spellcheck=\"false\" style=\"display:none\"></input>';\n\n    var buttonTemplate = '<a  class=\"gf-form-label tight-form-func dropdown-toggle query-part\"' +\n                            ' tabindex=\"1\" gf-dropdown=\"functionMenu\" data-toggle=\"dropdown\">' +\n                            '<i class=\"fa fa-plus\"></i></a>';\n\n    return {\n      link: function($scope, elem) {\n        var categories = metricFunctions.getCategories();\n        var allFunctions = getAllFunctionNames(categories);\n\n        $scope.functionMenu = createFunctionDropDownMenu(categories);\n\n        var $input = $(inputTemplate);\n        var $button = $(buttonTemplate);\n        $input.appendTo(elem);\n        $button.appendTo(elem);\n\n        $input.attr('data-provide', 'typeahead');\n        $input.typeahead({\n          source: allFunctions,\n          minLength: 1,\n          items: 10,\n          updater: function (value) {\n            var funcDef = metricFunctions.getFuncDef(value);\n            if (!funcDef) {\n              // try find close match\n              value = value.toLowerCase();\n              funcDef = _.find(allFunctions, function(funcName) {\n                return funcName.toLowerCase().indexOf(value) === 0;\n              });\n\n              if (!funcDef) { return; }\n            }\n\n            $scope.$apply(function() {\n              $scope.ctrl.addFunction(funcDef);\n            });\n\n            $input.trigger('blur');\n            return '';\n          }\n        });\n\n        $button.click(function() {\n          $button.hide();\n          $input.show();\n          $input.focus();\n        });\n\n        $input.keyup(function() {\n          elem.toggleClass('open', $input.val() === '');\n        });\n\n        $input.blur(function() {\n          // clicking the function dropdown menu won't\n          // work if you remove class at once\n          setTimeout(function() {\n            $input.val('');\n            $input.hide();\n            $button.show();\n            elem.removeClass('open');\n          }, 200);\n        });\n\n        $compile(elem.contents())($scope);\n      }\n    };\n  });\n\nfunction getAllFunctionNames(categories) {\n  return _.reduce(categories, function(list, category) {\n    _.each(category, function(func) {\n      list.push(func.name);\n    });\n    return list;\n  }, []);\n}\n\nfunction createFunctionDropDownMenu(categories) {\n  return _.map(categories, function(list, category) {\n    return {\n      text: category,\n      submenu: _.map(list, function(value) {\n        return {\n          text: value.name,\n          click: \"ctrl.addFunction('\" + value.name + \"')\",\n        };\n      })\n    };\n  });\n}\n\n","import React from 'react';\n\nconst DOCS_FUNC_REF_URL = 'https://alexanderzobnin.github.io/grafana-zabbix/reference/functions/';\n\nexport interface FunctionDescriptor {\n  text: string;\n  params: string[];\n  def: {\n    category: string;\n    defaultParams: string[];\n    description?: string;\n    fake: boolean;\n    name: string;\n    params: string[];\n  };\n}\n\nexport interface FunctionEditorControlsProps {\n  onMoveLeft: (func: FunctionDescriptor) => void;\n  onMoveRight: (func: FunctionDescriptor) => void;\n  onRemove: (func: FunctionDescriptor) => void;\n}\n\nconst FunctionHelpButton = (props: { description: string; name: string; onDescriptionShow: () => void }) => {\n  if (props.description) {\n    return <span className=\"pointer fa fa-question-circle\" onClick={props.onDescriptionShow} />;\n  }\n\n  return (\n    <span\n      className=\"pointer fa fa-question-circle\"\n      onClick={() => {\n        window.open(\n          DOCS_FUNC_REF_URL + '#' + props.name,\n          '_blank'\n        );\n      }}\n    />\n  );\n};\n\nexport const FunctionEditorControls = (\n  props: FunctionEditorControlsProps & {\n    func: FunctionDescriptor;\n    onDescriptionShow: () => void;\n  }\n) => {\n  const { func, onMoveLeft, onMoveRight, onRemove, onDescriptionShow } = props;\n  return (\n    <div\n      style={{\n        display: 'flex',\n        width: '60px',\n        justifyContent: 'space-between',\n      }}\n    >\n      <span className=\"pointer fa fa-arrow-left\" onClick={() => onMoveLeft(func)} />\n      <FunctionHelpButton\n        name={func.def.name}\n        description={func.def.description}\n        onDescriptionShow={onDescriptionShow}\n      />\n      <span className=\"pointer fa fa-remove\" onClick={() => onRemove(func)} />\n      <span className=\"pointer fa fa-arrow-right\" onClick={() => onMoveRight(func)} />\n    </div>\n  );\n};\n","import React from 'react';\n// import rst2html from 'rst2html';\nimport { FunctionDescriptor, FunctionEditorControlsProps, FunctionEditorControls } from './FunctionEditorControls';\n\n// @ts-ignore\nimport { PopoverController, Popover } from '@grafana/ui';\n\ninterface FunctionEditorProps extends FunctionEditorControlsProps {\n  func: FunctionDescriptor;\n}\n\ninterface FunctionEditorState {\n  showingDescription: boolean;\n}\n\nclass FunctionEditor extends React.PureComponent<FunctionEditorProps, FunctionEditorState> {\n  private triggerRef = React.createRef<HTMLSpanElement>();\n\n  constructor(props: FunctionEditorProps) {\n    super(props);\n\n    this.state = {\n      showingDescription: false,\n    };\n  }\n\n  renderContent = ({ updatePopperPosition }) => {\n    const {\n      onMoveLeft,\n      onMoveRight,\n      func: {\n        def: { name, description },\n      },\n    } = this.props;\n    const { showingDescription } = this.state;\n\n    if (showingDescription) {\n      return (\n        <div style={{ overflow: 'auto', maxHeight: '30rem', textAlign: 'left', fontWeight: 'normal' }}>\n          <h4 style={{ color: 'white' }}> {name} </h4>\n          <div>{description}</div>\n        </div>\n      );\n    }\n\n    return (\n      <FunctionEditorControls\n        {...this.props}\n        onMoveLeft={() => {\n          onMoveLeft(this.props.func);\n          updatePopperPosition();\n        }}\n        onMoveRight={() => {\n          onMoveRight(this.props.func);\n          updatePopperPosition();\n        }}\n        onDescriptionShow={() => {\n          this.setState({ showingDescription: true }, () => {\n            updatePopperPosition();\n          });\n        }}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <PopoverController content={this.renderContent} placement=\"top\" hideAfter={300}>\n        {(showPopper, hidePopper, popperProps) => {\n          return (\n            <>\n              {this.triggerRef && (\n                <Popover\n                  {...popperProps}\n                  referenceElement={this.triggerRef.current}\n                  wrapperClassName=\"popper\"\n                  className=\"popper__background\"\n                  onMouseLeave={() => {\n                    this.setState({ showingDescription: false });\n                    hidePopper();\n                  }}\n                  onMouseEnter={showPopper}\n                  renderArrow={({ arrowProps, placement }) => (\n                    <div className=\"popper__arrow\" data-placement={placement} {...arrowProps} />\n                  )}\n                />\n              )}\n\n              <span\n                ref={this.triggerRef}\n                onClick={popperProps.show ? hidePopper : showPopper}\n                onMouseLeave={() => {\n                  hidePopper();\n                  this.setState({ showingDescription: false });\n                }}\n                style={{ cursor: 'pointer' }}\n              >\n                {this.props.func.def.name}\n              </span>\n            </>\n          );\n        }}\n      </PopoverController>\n    );\n  }\n}\n\nexport { FunctionEditor };\n","import coreModule from 'grafana/app/core/core_module';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport { react2AngularDirective } from './react2angular';\nimport { FunctionEditor } from './components/FunctionEditor';\n\n/** @ngInject */\nexport function zabbixFunctionEditor($compile, templateSrv) {\n  const funcSpanTemplate = `\n    <zbx-function-editor\n      func=\"func\"\n      onRemove=\"ctrl.handleRemoveFunction\"\n      onMoveLeft=\"ctrl.handleMoveLeft\"\n      onMoveRight=\"ctrl.handleMoveRight\">\n    </zbx-function-editor>\n    <span>(</span>\n  `;\n  const paramTemplate =\n    '<input type=\"text\" style=\"display:none\"' + ' class=\"input-small tight-form-func-param\"></input>';\n\n  return {\n    restrict: 'A',\n    link: function postLink($scope, elem) {\n      const $funcLink = $(funcSpanTemplate);\n      const ctrl = $scope.ctrl;\n      const func = $scope.func;\n      let scheduledRelink = false;\n      let paramCountAtLink = 0;\n      let cancelBlur = null;\n\n      ctrl.handleRemoveFunction = func => {\n        ctrl.removeFunction(func);\n      };\n\n      ctrl.handleMoveLeft = func => {\n        ctrl.moveFunction(func, -1);\n      };\n\n      ctrl.handleMoveRight = func => {\n        ctrl.moveFunction(func, 1);\n      };\n\n      function clickFuncParam(this: any, paramIndex) {\n        /*jshint validthis:true */\n\n        const $link = $(this);\n        const $comma = $link.prev('.comma');\n        const $input = $link.next();\n\n        $input.val(func.params[paramIndex]);\n\n        $comma.removeClass('query-part__last');\n        $link.hide();\n        $input.show();\n        $input.focus();\n        $input.select();\n\n        const typeahead = $input.data('typeahead');\n        if (typeahead) {\n          $input.val('');\n          typeahead.lookup();\n        }\n      }\n\n      function scheduledRelinkIfNeeded() {\n        if (paramCountAtLink === func.params.length) {\n          return;\n        }\n\n        if (!scheduledRelink) {\n          scheduledRelink = true;\n          setTimeout(() => {\n            relink();\n            scheduledRelink = false;\n          }, 200);\n        }\n      }\n\n      function paramDef(index) {\n        if (index < func.def.params.length) {\n          return func.def.params[index];\n        }\n        if ((_.last(func.def.params) as any).multiple) {\n          return _.assign({}, _.last(func.def.params), { optional: true });\n        }\n        return {};\n      }\n\n      function switchToLink(inputElem, paramIndex) {\n        /*jshint validthis:true */\n        const $input = $(inputElem);\n\n        clearTimeout(cancelBlur);\n        cancelBlur = null;\n\n        const $link = $input.prev();\n        const $comma = $link.prev('.comma');\n        const newValue = $input.val();\n\n        // remove optional empty params\n        if (newValue !== '' || paramDef(paramIndex).optional) {\n          func.updateParam(newValue, paramIndex);\n          $link.html(newValue ? templateSrv.highlightVariablesAsHtml(newValue) : '&nbsp;');\n        }\n\n        scheduledRelinkIfNeeded();\n\n        $scope.$apply(() => {\n          ctrl.targetChanged();\n        });\n\n        if ($link.hasClass('query-part__last') && newValue === '') {\n          $comma.addClass('query-part__last');\n        } else {\n          $link.removeClass('query-part__last');\n        }\n\n        $input.hide();\n        $link.show();\n      }\n\n      // this = input element\n      function inputBlur(this: any, paramIndex) {\n        /*jshint validthis:true */\n        const inputElem = this;\n        // happens long before the click event on the typeahead options\n        // need to have long delay because the blur\n        cancelBlur = setTimeout(() => {\n          switchToLink(inputElem, paramIndex);\n        }, 200);\n      }\n\n      function inputKeyPress(this: any, paramIndex, e) {\n        /*jshint validthis:true */\n        if (e.which === 13) {\n          $(this).blur();\n        }\n      }\n\n      function inputKeyDown(this: any) {\n        /*jshint validthis:true */\n        this.style.width = (3 + this.value.length) * 8 + 'px';\n      }\n\n      function addTypeahead($input, paramIndex) {\n        $input.attr('data-provide', 'typeahead');\n\n        let options = paramDef(paramIndex).options;\n        if (paramDef(paramIndex).type === 'int' || paramDef(paramIndex).type === 'float') {\n          options = _.map(options, val => {\n            return val.toString();\n          });\n        }\n\n        $input.typeahead({\n          source: options,\n          minLength: 0,\n          items: 20,\n          updater: value => {\n            $input.val(value);\n            switchToLink($input[0], paramIndex);\n            return value;\n          },\n        });\n\n        const typeahead = $input.data('typeahead');\n        typeahead.lookup = function() {\n          this.query = this.$element.val() || '';\n          return this.process(this.source);\n        };\n      }\n\n      function addElementsAndCompile() {\n        $funcLink.appendTo(elem);\n\n        const defParams: any = _.clone(func.def.params);\n        const lastParam: any = _.last(func.def.params);\n\n        while (func.params.length >= defParams.length && lastParam && lastParam.multiple) {\n          defParams.push(_.assign({}, lastParam, { optional: true }));\n        }\n\n        _.each(defParams, (param: any, index: number) => {\n          if (param.optional && func.params.length < index) {\n            return false;\n          }\n\n          let paramValue = templateSrv.highlightVariablesAsHtml(func.params[index]);\n          const hasValue = paramValue !== null && paramValue !== undefined;\n\n          const last = index >= func.params.length - 1 && param.optional && !hasValue;\n          if (last && param.multiple) {\n            paramValue = '+';\n          }\n\n          if (index > 0) {\n            $('<span class=\"comma' + (last ? ' query-part__last' : '') + '\">,&nbsp; </span>').appendTo(elem);\n          }\n\n          const $paramLink = $(\n            '<a ng-click=\"\" class=\"graphite-func-param-link' +\n              (last ? ' query-part__last' : '') +\n              '\">' +\n              (hasValue ? paramValue : '&nbsp;') +\n              '</a>'\n          );\n          const $input = $(paramTemplate);\n          $input.attr('placeholder', param.name);\n\n          paramCountAtLink++;\n\n          $paramLink.appendTo(elem);\n          $input.appendTo(elem);\n\n          $input.blur(_.partial(inputBlur, index));\n          $input.keyup(inputKeyDown);\n          $input.keypress(_.partial(inputKeyPress, index));\n          $paramLink.click(_.partial(clickFuncParam, index));\n\n          if (param.options) {\n            addTypeahead($input, index);\n          }\n\n          return true;\n        });\n\n        $('<span>)</span>').appendTo(elem);\n\n        $compile(elem.contents())($scope);\n      }\n\n      function ifJustAddedFocusFirstParam() {\n        if ($scope.func.added) {\n          $scope.func.added = false;\n          setTimeout(() => {\n            elem\n              .find('.graphite-func-param-link')\n              .first()\n              .click();\n          }, 10);\n        }\n      }\n\n      function relink() {\n        elem.children().remove();\n        addElementsAndCompile();\n        ifJustAddedFocusFirstParam();\n      }\n\n      relink();\n    },\n  };\n}\n\ncoreModule.directive('zabbixFunctionEditor', zabbixFunctionEditor);\n\nreact2AngularDirective('zbxFunctionEditor', FunctionEditor, ['func', 'onRemove', 'onMoveLeft', 'onMoveRight']);\n","import coreModule from 'grafana/app/core/core_module';\n\nexport function react2AngularDirective(name: string, component: any, options: any) {\n  coreModule.directive(name, [\n    'reactDirective',\n    reactDirective => {\n      return reactDirective(component, options);\n    },\n  ]);\n}\n","import { DataSourcePlugin } from '@grafana/data';\nimport { loadPluginCss } from '@grafana/runtime';\nimport { ZabbixDatasource } from './datasource';\nimport { ZabbixQueryController } from './query.controller';\nimport { ZabbixVariableQueryEditor } from './components/VariableQueryEditor';\nimport { ConfigEditor } from './components/ConfigEditor';\nimport './add-metric-function.directive';\nimport './metric-function-editor.directive';\n\nclass ZabbixAnnotationsQueryController {\n  static templateUrl = 'datasource-zabbix/partials/annotations.editor.html';\n}\n\nZabbixQueryController.templateUrl = 'datasource-zabbix/partials/query.editor.html';\n\nloadPluginCss({\n  dark: 'plugins/iiris-zabbix-triggers-panel/css/grafana-zabbix.dark.css',\n  light: 'plugins/iiris-zabbix-triggers-panel/css/grafana-zabbix.light.css'\n});\n\nexport const plugin = new DataSourcePlugin(ZabbixDatasource)\n  .setConfigEditor(ConfigEditor)\n  .setQueryCtrl(ZabbixQueryController)\n  .setAnnotationQueryCtrl(ZabbixAnnotationsQueryController)\n  .setVariableQueryEditor(ZabbixVariableQueryEditor);\n"],"sourceRoot":""}